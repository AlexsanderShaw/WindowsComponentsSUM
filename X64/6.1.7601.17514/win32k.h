// #################################################################################
// Generated by Symbol Type Viewer 32Bit/64Bit - Version 1.0.0.6 beta
// http://www.syseclabs.com
// Coding by Lionel d'Hauenens
// #################################################################################
// Image         : 64bit
// ImageName     : windows\X64\6.1.7601.17514\win32k.sys
// LoadedPdbName : symbols\win32k.pdb\21E2778DD2954987A9B7212463FFDC5E2\win32k.pdb

#ifdef __cplusplus
extern "C" {
#endif

//////////////////
//   C Define   //
//////////////////

#define VOID void
#define STDCALL __stdcall
#define FASTCALL __fastcall
#define CDECL __cdecl
#define THISCALL __thiscall
#define NEAR 
#define FAR 
//---------------------------------------------------------------------

//////////////////
// C Basic Type //
//////////////////

typedef signed char INT8;
typedef signed char CHAR;
typedef signed short INT16;
typedef signed int INT32;
typedef signed int BOOL;
typedef signed __int64 INT64;
typedef signed __int64 LONG64;
typedef signed long LONG32;
typedef unsigned char UINT8;
typedef unsigned char BYTE;
typedef unsigned short UINT16;
typedef unsigned short WCHAR;
typedef unsigned int UINT32;
typedef unsigned __int64 UINT64;
typedef unsigned __int64 ULONG64;
typedef unsigned long ULONG32;
typedef float FLOAT32;
typedef double FLOAT64;
typedef struct {unsigned short W[5];} FLOAT80;
typedef struct { __int64 LowPart;__int64 HighPart;} FLOAT128;
typedef double DATE;
typedef signed long HRESULT;
typedef union { struct {unsigned long Lo; long Hi;}; __int64 int64;} CURRENCY;
typedef wchar_t OLECHAR;



//---------------------------------------------------------------------

//------------------------------------------------------------------------
//------------------------------------------------------------------------
// Declaration of Enum types

typedef enum ___201901300B190403148D686A5950CF2C1  // 6 elements, 0x4 bytes
{
    DMM_DIAG_INFO_VISTA_BETA2_VERSION = 4097 /*0x1001*/,
    DMM_DIAG_INFO_VISTA_RC1_VERSION   = 4098 /*0x1002*/,
    DMM_DIAG_INFO_VISTA_RTM_VERSION   = 4099 /*0x1003*/,
    DMM_DIAG_INFO_WIN7_MQ_VERSION     = 8192 /*0x2000*/,
    DMM_DIAG_INFO_WIN7_M3_VERSION     = 8193 /*0x2001*/,
    DMM_DIAG_INFO_VERSION             = 8193 /*0x2001*/
}__201901300B190403148D686A5950CF2C1, *P__201901300B190403148D686A5950CF2C1;

typedef enum _ALTERNATIVE_ARCHITECTURE_TYPE  // 3 elements, 0x4 bytes
{
    StandardDesign  = 0 /*0x0*/,
    NEC98x86        = 1 /*0x1*/,
    EndAlternatives = 2 /*0x2*/
}ALTERNATIVE_ARCHITECTURE_TYPE, *PALTERNATIVE_ARCHITECTURE_TYPE;

typedef enum _BUS_QUERY_ID_TYPE  // 6 elements, 0x4 bytes
{
    BusQueryDeviceID           = 0 /*0x0*/,
    BusQueryHardwareIDs        = 1 /*0x1*/,
    BusQueryCompatibleIDs      = 2 /*0x2*/,
    BusQueryInstanceID         = 3 /*0x3*/,
    BusQueryDeviceSerialNumber = 4 /*0x4*/,
    BusQueryContainerID        = 5 /*0x5*/
}BUS_QUERY_ID_TYPE, *PBUS_QUERY_ID_TYPE;

typedef enum _D3DDDI_GAMMARAMP_TYPE  // 4 elements, 0x4 bytes
{
    D3DDDI_GAMMARAMP_UNINITIALIZED = 0 /*0x0*/,
    D3DDDI_GAMMARAMP_DEFAULT       = 1 /*0x1*/,
    D3DDDI_GAMMARAMP_RGB256x3x16   = 2 /*0x2*/,
    D3DDDI_GAMMARAMP_DXGI_1        = 3 /*0x3*/
}D3DDDI_GAMMARAMP_TYPE, *PD3DDDI_GAMMARAMP_TYPE;

typedef enum _D3DDDI_VIDEO_SIGNAL_SCANLINE_ORDERING  // 5 elements, 0x4 bytes
{
    D3DDDI_VSSLO_UNINITIALIZED              = 0 /*0x0*/,
    D3DDDI_VSSLO_PROGRESSIVE                = 1 /*0x1*/,
    D3DDDI_VSSLO_INTERLACED_UPPERFIELDFIRST = 2 /*0x2*/,
    D3DDDI_VSSLO_INTERLACED_LOWERFIELDFIRST = 3 /*0x3*/,
    D3DDDI_VSSLO_OTHER                      = 255 /*0xFF*/
}D3DDDI_VIDEO_SIGNAL_SCANLINE_ORDERING, *PD3DDDI_VIDEO_SIGNAL_SCANLINE_ORDERING;

typedef enum _D3DDDIFORMAT  // 105 elements, 0x4 bytes
{
    D3DDDIFMT_UNKNOWN                 = 0 /*0x0*/,
    D3DDDIFMT_R8G8B8                  = 20 /*0x14*/,
    D3DDDIFMT_A8R8G8B8                = 21 /*0x15*/,
    D3DDDIFMT_X8R8G8B8                = 22 /*0x16*/,
    D3DDDIFMT_R5G6B5                  = 23 /*0x17*/,
    D3DDDIFMT_X1R5G5B5                = 24 /*0x18*/,
    D3DDDIFMT_A1R5G5B5                = 25 /*0x19*/,
    D3DDDIFMT_A4R4G4B4                = 26 /*0x1A*/,
    D3DDDIFMT_R3G3B2                  = 27 /*0x1B*/,
    D3DDDIFMT_A8                      = 28 /*0x1C*/,
    D3DDDIFMT_A8R3G3B2                = 29 /*0x1D*/,
    D3DDDIFMT_X4R4G4B4                = 30 /*0x1E*/,
    D3DDDIFMT_A2B10G10R10             = 31 /*0x1F*/,
    D3DDDIFMT_A8B8G8R8                = 32 /*0x20*/,
    D3DDDIFMT_X8B8G8R8                = 33 /*0x21*/,
    D3DDDIFMT_G16R16                  = 34 /*0x22*/,
    D3DDDIFMT_A2R10G10B10             = 35 /*0x23*/,
    D3DDDIFMT_A16B16G16R16            = 36 /*0x24*/,
    D3DDDIFMT_A8P8                    = 40 /*0x28*/,
    D3DDDIFMT_P8                      = 41 /*0x29*/,
    D3DDDIFMT_L8                      = 50 /*0x32*/,
    D3DDDIFMT_A8L8                    = 51 /*0x33*/,
    D3DDDIFMT_A4L4                    = 52 /*0x34*/,
    D3DDDIFMT_V8U8                    = 60 /*0x3C*/,
    D3DDDIFMT_L6V5U5                  = 61 /*0x3D*/,
    D3DDDIFMT_X8L8V8U8                = 62 /*0x3E*/,
    D3DDDIFMT_Q8W8V8U8                = 63 /*0x3F*/,
    D3DDDIFMT_V16U16                  = 64 /*0x40*/,
    D3DDDIFMT_W11V11U10               = 65 /*0x41*/,
    D3DDDIFMT_A2W10V10U10             = 67 /*0x43*/,
    D3DDDIFMT_UYVY                    = 1498831189 /*0x59565955*/  /*UYVY*/,
    D3DDDIFMT_R8G8_B8G8               = 1195525970 /*0x47424752*/  /*RGBG*/,
    D3DDDIFMT_YUY2                    = 844715353 /*0x32595559*/  /*YUY2*/,
    D3DDDIFMT_G8R8_G8B8               = 1111970375 /*0x42475247*/  /*GRGB*/,
    D3DDDIFMT_DXT1                    = 827611204 /*0x31545844*/  /*DXT1*/,
    D3DDDIFMT_DXT2                    = 844388420 /*0x32545844*/  /*DXT2*/,
    D3DDDIFMT_DXT3                    = 861165636 /*0x33545844*/  /*DXT3*/,
    D3DDDIFMT_DXT4                    = 877942852 /*0x34545844*/  /*DXT4*/,
    D3DDDIFMT_DXT5                    = 894720068 /*0x35545844*/  /*DXT5*/,
    D3DDDIFMT_D16_LOCKABLE            = 70 /*0x46*/,
    D3DDDIFMT_D32                     = 71 /*0x47*/,
    D3DDDIFMT_D15S1                   = 73 /*0x49*/,
    D3DDDIFMT_D24S8                   = 75 /*0x4B*/,
    D3DDDIFMT_D24X8                   = 77 /*0x4D*/,
    D3DDDIFMT_D24X4S4                 = 79 /*0x4F*/,
    D3DDDIFMT_D16                     = 80 /*0x50*/,
    D3DDDIFMT_D32F_LOCKABLE           = 82 /*0x52*/,
    D3DDDIFMT_D24FS8                  = 83 /*0x53*/,
    D3DDDIFMT_D32_LOCKABLE            = 84 /*0x54*/,
    D3DDDIFMT_S8_LOCKABLE             = 85 /*0x55*/,
    D3DDDIFMT_S1D15                   = 72 /*0x48*/,
    D3DDDIFMT_S8D24                   = 74 /*0x4A*/,
    D3DDDIFMT_X8D24                   = 76 /*0x4C*/,
    D3DDDIFMT_X4S4D24                 = 78 /*0x4E*/,
    D3DDDIFMT_L16                     = 81 /*0x51*/,
    D3DDDIFMT_VERTEXDATA              = 100 /*0x64*/,
    D3DDDIFMT_INDEX16                 = 101 /*0x65*/,
    D3DDDIFMT_INDEX32                 = 102 /*0x66*/,
    D3DDDIFMT_Q16W16V16U16            = 110 /*0x6E*/,
    D3DDDIFMT_MULTI2_ARGB8            = 827606349 /*0x3154454D*/  /*MET1*/,
    D3DDDIFMT_R16F                    = 111 /*0x6F*/,
    D3DDDIFMT_G16R16F                 = 112 /*0x70*/,
    D3DDDIFMT_A16B16G16R16F           = 113 /*0x71*/,
    D3DDDIFMT_R32F                    = 114 /*0x72*/,
    D3DDDIFMT_G32R32F                 = 115 /*0x73*/,
    D3DDDIFMT_A32B32G32R32F           = 116 /*0x74*/,
    D3DDDIFMT_CxV8U8                  = 117 /*0x75*/,
    D3DDDIFMT_A1                      = 118 /*0x76*/,
    D3DDDIFMT_A2B10G10R10_XR_BIAS     = 119 /*0x77*/,
    D3DDDIFMT_DXVACOMPBUFFER_BASE     = 150 /*0x96*/,
    D3DDDIFMT_PICTUREPARAMSDATA       = 150 /*0x96*/,
    D3DDDIFMT_MACROBLOCKDATA          = 151 /*0x97*/,
    D3DDDIFMT_RESIDUALDIFFERENCEDATA  = 152 /*0x98*/,
    D3DDDIFMT_DEBLOCKINGDATA          = 153 /*0x99*/,
    D3DDDIFMT_INVERSEQUANTIZATIONDATA = 154 /*0x9A*/,
    D3DDDIFMT_SLICECONTROLDATA        = 155 /*0x9B*/,
    D3DDDIFMT_BITSTREAMDATA           = 156 /*0x9C*/,
    D3DDDIFMT_MOTIONVECTORBUFFER      = 157 /*0x9D*/,
    D3DDDIFMT_FILMGRAINBUFFER         = 158 /*0x9E*/,
    D3DDDIFMT_DXVA_RESERVED9          = 159 /*0x9F*/,
    D3DDDIFMT_DXVA_RESERVED10         = 160 /*0xA0*/,
    D3DDDIFMT_DXVA_RESERVED11         = 161 /*0xA1*/,
    D3DDDIFMT_DXVA_RESERVED12         = 162 /*0xA2*/,
    D3DDDIFMT_DXVA_RESERVED13         = 163 /*0xA3*/,
    D3DDDIFMT_DXVA_RESERVED14         = 164 /*0xA4*/,
    D3DDDIFMT_DXVA_RESERVED15         = 165 /*0xA5*/,
    D3DDDIFMT_DXVA_RESERVED16         = 166 /*0xA6*/,
    D3DDDIFMT_DXVA_RESERVED17         = 167 /*0xA7*/,
    D3DDDIFMT_DXVA_RESERVED18         = 168 /*0xA8*/,
    D3DDDIFMT_DXVA_RESERVED19         = 169 /*0xA9*/,
    D3DDDIFMT_DXVA_RESERVED20         = 170 /*0xAA*/,
    D3DDDIFMT_DXVA_RESERVED21         = 171 /*0xAB*/,
    D3DDDIFMT_DXVA_RESERVED22         = 172 /*0xAC*/,
    D3DDDIFMT_DXVA_RESERVED23         = 173 /*0xAD*/,
    D3DDDIFMT_DXVA_RESERVED24         = 174 /*0xAE*/,
    D3DDDIFMT_DXVA_RESERVED25         = 175 /*0xAF*/,
    D3DDDIFMT_DXVA_RESERVED26         = 176 /*0xB0*/,
    D3DDDIFMT_DXVA_RESERVED27         = 177 /*0xB1*/,
    D3DDDIFMT_DXVA_RESERVED28         = 178 /*0xB2*/,
    D3DDDIFMT_DXVA_RESERVED29         = 179 /*0xB3*/,
    D3DDDIFMT_DXVA_RESERVED30         = 180 /*0xB4*/,
    D3DDDIFMT_DXVA_RESERVED31         = 181 /*0xB5*/,
    D3DDDIFMT_DXVACOMPBUFFER_MAX      = 181 /*0xB5*/,
    D3DDDIFMT_BINARYBUFFER            = 199 /*0xC7*/,
    D3DDDIFMT_FORCE_UINT              = 2147483647 /*0x7FFFFFFF*/
}D3DDDIFORMAT, *PD3DDDIFORMAT;

typedef enum _D3DKMDT_COLOR_BASIS  // 7 elements, 0x4 bytes
{
    D3DKMDT_CB_UNINITIALIZED = 0 /*0x0*/,
    D3DKMDT_CB_INTENSITY     = 1 /*0x1*/,
    D3DKMDT_CB_SRGB          = 2 /*0x2*/,
    D3DKMDT_CB_SCRGB         = 3 /*0x3*/,
    D3DKMDT_CB_YCBCR         = 4 /*0x4*/,
    D3DKMDT_CB_YPBPR         = 5 /*0x5*/,
    D3DKMDT_CB_MAXVALID      = 5 /*0x5*/
}D3DKMDT_COLOR_BASIS, *PD3DKMDT_COLOR_BASIS;

typedef enum _D3DKMDT_MODE_PREFERENCE  // 4 elements, 0x4 bytes
{
    D3DKMDT_MP_UNINITIALIZED = 0 /*0x0*/,
    D3DKMDT_MP_PREFERRED     = 1 /*0x1*/,
    D3DKMDT_MP_NOTPREFERRED  = 2 /*0x2*/,
    D3DKMDT_MP_MAXVALID      = 2 /*0x2*/
}D3DKMDT_MODE_PREFERENCE, *PD3DKMDT_MODE_PREFERENCE;

typedef enum _D3DKMDT_MONITOR_CAPABILITIES_ORIGIN  // 7 elements, 0x4 bytes
{
    D3DKMDT_MCO_UNINITIALIZED                      = 0 /*0x0*/,
    D3DKMDT_MCO_DEFAULTMONITORPROFILE              = 1 /*0x1*/,
    D3DKMDT_MCO_MONITORDESCRIPTOR                  = 2 /*0x2*/,
    D3DKMDT_MCO_MONITORDESCRIPTOR_REGISTRYOVERRIDE = 3 /*0x3*/,
    D3DKMDT_MCO_SPECIFICCAP_REGISTRYOVERRIDE       = 4 /*0x4*/,
    D3DKMDT_MCO_DRIVER                             = 5 /*0x5*/,
    D3DKMDT_MCO_MAXVALID                           = 5 /*0x5*/
}D3DKMDT_MONITOR_CAPABILITIES_ORIGIN, *PD3DKMDT_MONITOR_CAPABILITIES_ORIGIN;

typedef enum _D3DKMDT_MONITOR_DESCRIPTOR_TYPE  // 4 elements, 0x4 bytes
{
    D3DKMDT_MDT_UNINITIALIZED          = 0 /*0x0*/,
    D3DKMDT_MDT_VESA_EDID_V1_BASEBLOCK = 1 /*0x1*/,
    D3DKMDT_MDT_VESA_EDID_V1_BLOCKMAP  = 2 /*0x2*/,
    D3DKMDT_MDT_OTHER                  = 255 /*0xFF*/
}D3DKMDT_MONITOR_DESCRIPTOR_TYPE, *PD3DKMDT_MONITOR_DESCRIPTOR_TYPE;

typedef enum _D3DKMDT_MONITOR_FREQUENCY_RANGE_CONSTRAINT  // 3 elements, 0x4 bytes
{
    D3DKMDT_MFRC_UNINITIALIZED = 0 /*0x0*/,
    D3DKMDT_MFRC_ACTIVESIZE    = 1 /*0x1*/,
    D3DKMDT_MFRC_MAXPIXELRATE  = 2 /*0x2*/
}D3DKMDT_MONITOR_FREQUENCY_RANGE_CONSTRAINT, *PD3DKMDT_MONITOR_FREQUENCY_RANGE_CONSTRAINT;

typedef enum _D3DKMDT_MONITOR_ORIENTATION  // 5 elements, 0x4 bytes
{
    D3DKMDT_MO_UNINITIALIZED = 0 /*0x0*/,
    D3DKMDT_MO_0DEG          = 1 /*0x1*/,
    D3DKMDT_MO_90DEG         = 2 /*0x2*/,
    D3DKMDT_MO_180DEG        = 3 /*0x3*/,
    D3DKMDT_MO_270DEG        = 4 /*0x4*/
}D3DKMDT_MONITOR_ORIENTATION, *PD3DKMDT_MONITOR_ORIENTATION;

typedef enum _D3DKMDT_MONITOR_TIMING_TYPE  // 8 elements, 0x4 bytes
{
    D3DKMDT_MTT_UNINITIALIZED         = 0 /*0x0*/,
    D3DKMDT_MTT_ESTABLISHED           = 1 /*0x1*/,
    D3DKMDT_MTT_STANDARD              = 2 /*0x2*/,
    D3DKMDT_MTT_EXTRASTANDARD         = 3 /*0x3*/,
    D3DKMDT_MTT_DETAILED              = 4 /*0x4*/,
    D3DKMDT_MTT_DEFAULTMONITORPROFILE = 5 /*0x5*/,
    D3DKMDT_MTT_DRIVER                = 6 /*0x6*/,
    D3DKMDT_MTT_MAXVALID              = 6 /*0x6*/
}D3DKMDT_MONITOR_TIMING_TYPE, *PD3DKMDT_MONITOR_TIMING_TYPE;

typedef enum _D3DKMDT_PIXEL_VALUE_ACCESS_MODE  // 5 elements, 0x4 bytes
{
    D3DKMDT_PVAM_UNINITIALIZED   = 0 /*0x0*/,
    D3DKMDT_PVAM_DIRECT          = 1 /*0x1*/,
    D3DKMDT_PVAM_PRESETPALETTE   = 2 /*0x2*/,
    D3DKMDT_PVAM_SETTABLEPALETTE = 3 /*0x3*/,
    D3DKMDT_PVAM_MAXVALID        = 3 /*0x3*/
}D3DKMDT_PIXEL_VALUE_ACCESS_MODE, *PD3DKMDT_PIXEL_VALUE_ACCESS_MODE;

typedef enum _D3DKMDT_TEXT_RENDERING_FORMAT  // 1 elements, 0x4 bytes
{
    D3DKMDT_TRF_UNINITIALIZED = 0 /*0x0*/
}D3DKMDT_TEXT_RENDERING_FORMAT, *PD3DKMDT_TEXT_RENDERING_FORMAT;

typedef enum _D3DKMDT_VIDEO_OUTPUT_TECHNOLOGY  // 22 elements, 0x4 bytes
{
    D3DKMDT_VOT_UNINITIALIZED        = -2 /*0xFE*/,
    D3DKMDT_VOT_OTHER                = -1 /*0xFF*/,
    D3DKMDT_VOT_HD15                 = 0 /*0x0*/,
    D3DKMDT_VOT_SVIDEO               = 1 /*0x1*/,
    D3DKMDT_VOT_COMPOSITE_VIDEO      = 2 /*0x2*/,
    D3DKMDT_VOT_COMPONENT_VIDEO      = 3 /*0x3*/,
    D3DKMDT_VOT_DVI                  = 4 /*0x4*/,
    D3DKMDT_VOT_HDMI                 = 5 /*0x5*/,
    D3DKMDT_VOT_LVDS                 = 6 /*0x6*/,
    D3DKMDT_VOT_D_JPN                = 8 /*0x8*/,
    D3DKMDT_VOT_SDI                  = 9 /*0x9*/,
    D3DKMDT_VOT_DISPLAYPORT_EXTERNAL = 10 /*0xA*/,
    D3DKMDT_VOT_DISPLAYPORT_EMBEDDED = 11 /*0xB*/,
    D3DKMDT_VOT_UDI_EXTERNAL         = 12 /*0xC*/,
    D3DKMDT_VOT_UDI_EMBEDDED         = 13 /*0xD*/,
    D3DKMDT_VOT_SDTVDONGLE           = 14 /*0xE*/,
    D3DKMDT_VOT_INTERNAL             = -2147483648 /*0x80000000*/,
    D3DKMDT_VOT_SVIDEO_4PIN          = 1 /*0x1*/,
    D3DKMDT_VOT_SVIDEO_7PIN          = 1 /*0x1*/,
    D3DKMDT_VOT_RF                   = 2 /*0x2*/,
    D3DKMDT_VOT_RCA_3COMPONENT       = 3 /*0x3*/,
    D3DKMDT_VOT_BNC                  = 3 /*0x3*/
}D3DKMDT_VIDEO_OUTPUT_TECHNOLOGY, *PD3DKMDT_VIDEO_OUTPUT_TECHNOLOGY;

typedef enum _D3DKMDT_VIDEO_OUTPUT_TECHNOLOGY_DEPRECATED  // 14 elements, 0x4 bytes
{
    D3DKMDT_VOT_DEPRECATED_UNINITIALIZED  = 0 /*0x0*/,
    D3DKMDT_VOT_DEPRECATED_HD15           = 1 /*0x1*/,
    D3DKMDT_VOT_DEPRECATED_DVI            = 2 /*0x2*/,
    D3DKMDT_VOT_DEPRECATED_HDMI           = 3 /*0x3*/,
    D3DKMDT_VOT_DEPRECATED_HDMI2          = 4 /*0x4*/,
    D3DKMDT_VOT_DEPRECATED_SVIDEO_4PIN    = 5 /*0x5*/,
    D3DKMDT_VOT_DEPRECATED_SVIDEO_7PIN    = 6 /*0x6*/,
    D3DKMDT_VOT_DEPRECATED_RCA_COMPOSITE  = 7 /*0x7*/,
    D3DKMDT_VOT_DEPRECATED_RCA_3COMPONENT = 8 /*0x8*/,
    D3DKMDT_VOT_DEPRECATED_BNC            = 9 /*0x9*/,
    D3DKMDT_VOT_DEPRECATED_RF             = 10 /*0xA*/,
    D3DKMDT_VOT_DEPRECATED_SDTVDONGLE     = 11 /*0xB*/,
    D3DKMDT_VOT_DEPRECATED_INTERNAL       = 12 /*0xC*/,
    D3DKMDT_VOT_DEPRECATED_OTHER          = 255 /*0xFF*/
}D3DKMDT_VIDEO_OUTPUT_TECHNOLOGY_DEPRECATED, *PD3DKMDT_VIDEO_OUTPUT_TECHNOLOGY_DEPRECATED;

typedef enum _D3DKMDT_VIDEO_SIGNAL_STANDARD  // 33 elements, 0x4 bytes
{
    D3DKMDT_VSS_UNINITIALIZED = 0 /*0x0*/,
    D3DKMDT_VSS_VESA_DMT      = 1 /*0x1*/,
    D3DKMDT_VSS_VESA_GTF      = 2 /*0x2*/,
    D3DKMDT_VSS_VESA_CVT      = 3 /*0x3*/,
    D3DKMDT_VSS_IBM           = 4 /*0x4*/,
    D3DKMDT_VSS_APPLE         = 5 /*0x5*/,
    D3DKMDT_VSS_NTSC_M        = 6 /*0x6*/,
    D3DKMDT_VSS_NTSC_J        = 7 /*0x7*/,
    D3DKMDT_VSS_NTSC_443      = 8 /*0x8*/,
    D3DKMDT_VSS_PAL_B         = 9 /*0x9*/,
    D3DKMDT_VSS_PAL_B1        = 10 /*0xA*/,
    D3DKMDT_VSS_PAL_G         = 11 /*0xB*/,
    D3DKMDT_VSS_PAL_H         = 12 /*0xC*/,
    D3DKMDT_VSS_PAL_I         = 13 /*0xD*/,
    D3DKMDT_VSS_PAL_D         = 14 /*0xE*/,
    D3DKMDT_VSS_PAL_N         = 15 /*0xF*/,
    D3DKMDT_VSS_PAL_NC        = 16 /*0x10*/,
    D3DKMDT_VSS_SECAM_B       = 17 /*0x11*/,
    D3DKMDT_VSS_SECAM_D       = 18 /*0x12*/,
    D3DKMDT_VSS_SECAM_G       = 19 /*0x13*/,
    D3DKMDT_VSS_SECAM_H       = 20 /*0x14*/,
    D3DKMDT_VSS_SECAM_K       = 21 /*0x15*/,
    D3DKMDT_VSS_SECAM_K1      = 22 /*0x16*/,
    D3DKMDT_VSS_SECAM_L       = 23 /*0x17*/,
    D3DKMDT_VSS_SECAM_L1      = 24 /*0x18*/,
    D3DKMDT_VSS_EIA_861       = 25 /*0x19*/,
    D3DKMDT_VSS_EIA_861A      = 26 /*0x1A*/,
    D3DKMDT_VSS_EIA_861B      = 27 /*0x1B*/,
    D3DKMDT_VSS_PAL_K         = 28 /*0x1C*/,
    D3DKMDT_VSS_PAL_K1        = 29 /*0x1D*/,
    D3DKMDT_VSS_PAL_L         = 30 /*0x1E*/,
    D3DKMDT_VSS_PAL_M         = 31 /*0x1F*/,
    D3DKMDT_VSS_OTHER         = 255 /*0xFF*/
}D3DKMDT_VIDEO_SIGNAL_STANDARD, *PD3DKMDT_VIDEO_SIGNAL_STANDARD;

typedef enum _D3DKMDT_VIDPN_PRESENT_PATH_CONTENT  // 4 elements, 0x4 bytes
{
    D3DKMDT_VPPC_UNINITIALIZED = 0 /*0x0*/,
    D3DKMDT_VPPC_GRAPHICS      = 1 /*0x1*/,
    D3DKMDT_VPPC_VIDEO         = 2 /*0x2*/,
    D3DKMDT_VPPC_NOTSPECIFIED  = 255 /*0xFF*/
}D3DKMDT_VIDPN_PRESENT_PATH_CONTENT, *PD3DKMDT_VIDPN_PRESENT_PATH_CONTENT;

typedef enum _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_TYPE  // 5 elements, 0x4 bytes
{
    D3DKMDT_VPPMT_UNINITIALIZED           = 0 /*0x0*/,
    D3DKMDT_VPPMT_NOPROTECTION            = 1 /*0x1*/,
    D3DKMDT_VPPMT_MACROVISION_APSTRIGGER  = 2 /*0x2*/,
    D3DKMDT_VPPMT_MACROVISION_FULLSUPPORT = 3 /*0x3*/,
    D3DKMDT_VPPMT_NOTSPECIFIED            = 255 /*0xFF*/
}D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_TYPE, *PD3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_TYPE;

typedef enum _D3DKMDT_VIDPN_PRESENT_PATH_IMPORTANCE  // 13 elements, 0x4 bytes
{
    D3DKMDT_VPPI_UNINITIALIZED = 0 /*0x0*/,
    D3DKMDT_VPPI_PRIMARY       = 1 /*0x1*/,
    D3DKMDT_VPPI_SECONDARY     = 2 /*0x2*/,
    D3DKMDT_VPPI_TERTIARY      = 3 /*0x3*/,
    D3DKMDT_VPPI_QUATERNARY    = 4 /*0x4*/,
    D3DKMDT_VPPI_QUINARY       = 5 /*0x5*/,
    D3DKMDT_VPPI_SENARY        = 6 /*0x6*/,
    D3DKMDT_VPPI_SEPTENARY     = 7 /*0x7*/,
    D3DKMDT_VPPI_OCTONARY      = 8 /*0x8*/,
    D3DKMDT_VPPI_NONARY        = 9 /*0x9*/,
    D3DKMDT_VPPI_DENARY        = 10 /*0xA*/,
    D3DKMDT_VPPI_MAX           = 32 /*0x20*/,
    D3DKMDT_VPPI_NOTSPECIFIED  = 255 /*0xFF*/
}D3DKMDT_VIDPN_PRESENT_PATH_IMPORTANCE, *PD3DKMDT_VIDPN_PRESENT_PATH_IMPORTANCE;

typedef enum _D3DKMDT_VIDPN_PRESENT_PATH_ROTATION  // 7 elements, 0x4 bytes
{
    D3DKMDT_VPPR_UNINITIALIZED = 0 /*0x0*/,
    D3DKMDT_VPPR_IDENTITY      = 1 /*0x1*/,
    D3DKMDT_VPPR_ROTATE90      = 2 /*0x2*/,
    D3DKMDT_VPPR_ROTATE180     = 3 /*0x3*/,
    D3DKMDT_VPPR_ROTATE270     = 4 /*0x4*/,
    D3DKMDT_VPPR_UNPINNED      = 254 /*0xFE*/,
    D3DKMDT_VPPR_NOTSPECIFIED  = 255 /*0xFF*/
}D3DKMDT_VIDPN_PRESENT_PATH_ROTATION, *PD3DKMDT_VIDPN_PRESENT_PATH_ROTATION;

typedef enum _D3DKMDT_VIDPN_PRESENT_PATH_SCALING  // 9 elements, 0x4 bytes
{
    D3DKMDT_VPPS_UNINITIALIZED          = 0 /*0x0*/,
    D3DKMDT_VPPS_IDENTITY               = 1 /*0x1*/,
    D3DKMDT_VPPS_CENTERED               = 2 /*0x2*/,
    D3DKMDT_VPPS_STRETCHED              = 3 /*0x3*/,
    D3DKMDT_VPPS_ASPECTRATIOCENTEREDMAX = 4 /*0x4*/,
    D3DKMDT_VPPS_CUSTOM                 = 5 /*0x5*/,
    D3DKMDT_VPPS_RESERVED1              = 253 /*0xFD*/,
    D3DKMDT_VPPS_UNPINNED               = 254 /*0xFE*/,
    D3DKMDT_VPPS_NOTSPECIFIED           = 255 /*0xFF*/
}D3DKMDT_VIDPN_PRESENT_PATH_SCALING, *PD3DKMDT_VIDPN_PRESENT_PATH_SCALING;

typedef enum _D3DKMDT_VIDPN_SOURCE_MODE_TYPE  // 3 elements, 0x4 bytes
{
    D3DKMDT_RMT_UNINITIALIZED = 0 /*0x0*/,
    D3DKMDT_RMT_GRAPHICS      = 1 /*0x1*/,
    D3DKMDT_RMT_TEXT          = 2 /*0x2*/
}D3DKMDT_VIDPN_SOURCE_MODE_TYPE, *PD3DKMDT_VIDPN_SOURCE_MODE_TYPE;

typedef enum _D3DKMT_QUERYRESULT_PREEMPTION_ATTEMPT_RESULT  // 17 elements, 0x4 bytes
{
    D3DKMT_PreemptionAttempt                               = 0 /*0x0*/,
    D3DKMT_PreemptionAttemptSuccess                        = 1 /*0x1*/,
    D3DKMT_PreemptionAttemptMissNoCommand                  = 2 /*0x2*/,
    D3DKMT_PreemptionAttemptMissNotEnabled                 = 3 /*0x3*/,
    D3DKMT_PreemptionAttemptMissNextFence                  = 4 /*0x4*/,
    D3DKMT_PreemptionAttemptMissPagingCommand              = 5 /*0x5*/,
    D3DKMT_PreemptionAttemptMissSplittedCommand            = 6 /*0x6*/,
    D3DKMT_PreemptionAttemptMissFenceCommand               = 7 /*0x7*/,
    D3DKMT_PreemptionAttemptMissRenderPendingFlip          = 8 /*0x8*/,
    D3DKMT_PreemptionAttemptMissNotMakingProgress          = 9 /*0x9*/,
    D3DKMT_PreemptionAttemptMissLessPriority               = 10 /*0xA*/,
    D3DKMT_PreemptionAttemptMissRemainingQuantum           = 11 /*0xB*/,
    D3DKMT_PreemptionAttemptMissRemainingPreemptionQuantum = 12 /*0xC*/,
    D3DKMT_PreemptionAttemptMissAlreadyPreempting          = 13 /*0xD*/,
    D3DKMT_PreemptionAttemptMissGlobalBlock                = 14 /*0xE*/,
    D3DKMT_PreemptionAttemptMissAlreadyRunning             = 15 /*0xF*/,
    D3DKMT_PreemptionAttemptStatisticsMax                  = 16 /*0x10*/
}D3DKMT_QUERYRESULT_PREEMPTION_ATTEMPT_RESULT, *PD3DKMT_QUERYRESULT_PREEMPTION_ATTEMPT_RESULT;

typedef enum _D3DKMT_QUERYSTATISTICS_ALLOCATION_PRIORITY_CLASS  // 6 elements, 0x4 bytes
{
    D3DKMT_AllocationPriorityClassMinimum = 0 /*0x0*/,
    D3DKMT_AllocationPriorityClassLow     = 1 /*0x1*/,
    D3DKMT_AllocationPriorityClassNormal  = 2 /*0x2*/,
    D3DKMT_AllocationPriorityClassHigh    = 3 /*0x3*/,
    D3DKMT_AllocationPriorityClassMaximum = 4 /*0x4*/,
    D3DKMT_MaxAllocationPriorityClass     = 5 /*0x5*/
}D3DKMT_QUERYSTATISTICS_ALLOCATION_PRIORITY_CLASS, *PD3DKMT_QUERYSTATISTICS_ALLOCATION_PRIORITY_CLASS;

typedef enum _D3DKMT_QUERYSTATISTICS_DMA_PACKET_TYPE  // 5 elements, 0x4 bytes
{
    D3DKMT_ClientRenderBuffer     = 0 /*0x0*/,
    D3DKMT_ClientPagingBuffer     = 1 /*0x1*/,
    D3DKMT_SystemPagingBuffer     = 2 /*0x2*/,
    D3DKMT_SystemPreemptionBuffer = 3 /*0x3*/,
    D3DKMT_DmaPacketTypeMax       = 4 /*0x4*/
}D3DKMT_QUERYSTATISTICS_DMA_PACKET_TYPE, *PD3DKMT_QUERYSTATISTICS_DMA_PACKET_TYPE;

typedef enum _D3DKMT_QUERYSTATISTICS_QUEUE_PACKET_TYPE  // 9 elements, 0x4 bytes
{
    D3DKMT_RenderCommandBuffer   = 0 /*0x0*/,
    D3DKMT_DeferredCommandBuffer = 1 /*0x1*/,
    D3DKMT_SystemCommandBuffer   = 2 /*0x2*/,
    D3DKMT_MmIoFlipCommandBuffer = 3 /*0x3*/,
    D3DKMT_WaitCommandBuffer     = 4 /*0x4*/,
    D3DKMT_SignalCommandBuffer   = 5 /*0x5*/,
    D3DKMT_DeviceCommandBuffer   = 6 /*0x6*/,
    D3DKMT_SoftwareCommandBuffer = 7 /*0x7*/,
    D3DKMT_QueuePacketTypeMax    = 8 /*0x8*/
}D3DKMT_QUERYSTATISTICS_QUEUE_PACKET_TYPE, *PD3DKMT_QUERYSTATISTICS_QUEUE_PACKET_TYPE;

typedef enum _DEVICE_POWER_STATE  // 6 elements, 0x4 bytes
{
    PowerDeviceUnspecified = 0 /*0x0*/,
    PowerDeviceD0          = 1 /*0x1*/,
    PowerDeviceD1          = 2 /*0x2*/,
    PowerDeviceD2          = 3 /*0x3*/,
    PowerDeviceD3          = 4 /*0x4*/,
    PowerDeviceMaximum     = 5 /*0x5*/
}DEVICE_POWER_STATE, *PDEVICE_POWER_STATE;

typedef enum _DEVICE_RELATION_TYPE  // 7 elements, 0x4 bytes
{
    BusRelations         = 0 /*0x0*/,
    EjectionRelations    = 1 /*0x1*/,
    PowerRelations       = 2 /*0x2*/,
    RemovalRelations     = 3 /*0x3*/,
    TargetDeviceRelation = 4 /*0x4*/,
    SingleBusRelations   = 5 /*0x5*/,
    TransportRelations   = 6 /*0x6*/
}DEVICE_RELATION_TYPE, *PDEVICE_RELATION_TYPE;

typedef enum _DEVICE_TEXT_TYPE  // 2 elements, 0x4 bytes
{
    DeviceTextDescription         = 0 /*0x0*/,
    DeviceTextLocationInformation = 1 /*0x1*/
}DEVICE_TEXT_TYPE, *PDEVICE_TEXT_TYPE;

typedef enum _DEVICE_USAGE_NOTIFICATION_TYPE  // 4 elements, 0x4 bytes
{
    DeviceUsageTypeUndefined   = 0 /*0x0*/,
    DeviceUsageTypePaging      = 1 /*0x1*/,
    DeviceUsageTypeHibernation = 2 /*0x2*/,
    DeviceUsageTypeDumpFile    = 3 /*0x3*/
}DEVICE_USAGE_NOTIFICATION_TYPE, *PDEVICE_USAGE_NOTIFICATION_TYPE;

typedef enum _DISPLAYCONFIG_SCANLINE_ORDERING  // 6 elements, 0x4 bytes
{
    DISPLAYCONFIG_SCANLINE_ORDERING_UNSPECIFIED                = 0 /*0x0*/,
    DISPLAYCONFIG_SCANLINE_ORDERING_PROGRESSIVE                = 1 /*0x1*/,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED                 = 2 /*0x2*/,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_UPPERFIELDFIRST = 2 /*0x2*/,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_LOWERFIELDFIRST = 3 /*0x3*/,
    DISPLAYCONFIG_SCANLINE_ORDERING_FORCE_UINT32               = -1 /*0xFF*/
}DISPLAYCONFIG_SCANLINE_ORDERING, *PDISPLAYCONFIG_SCANLINE_ORDERING;

typedef enum _DMM_CLIENT_TYPE  // 5 elements, 0x4 bytes
{
    DMM_CT_UNINITIALIZED  = 0 /*0x0*/,
    DMM_CT_CDD_NOPATHDATA = 1 /*0x1*/,
    DMM_CT_USERMODE       = 2 /*0x2*/,
    DMM_CT_CDD_PATHDATA   = 3 /*0x3*/,
    DMM_CT_DXGPORT        = 4 /*0x4*/
}DMM_CLIENT_TYPE, *PDMM_CLIENT_TYPE;

typedef enum _DMM_MODE_PRUNING_ALGORITHM  // 5 elements, 0x4 bytes
{
    DMM_MPA_UNINITIALIZED   = 0 /*0x0*/,
    DMM_MPA_GDI             = 1 /*0x1*/,
    DMM_MPA_VISTA           = 2 /*0x2*/,
    DMM_MPA_GDI_VISTA_UNION = 3 /*0x3*/,
    DMM_MPA_MAXVALID        = 3 /*0x3*/
}DMM_MODE_PRUNING_ALGORITHM, *PDMM_MODE_PRUNING_ALGORITHM;

typedef enum _DMM_MONITOR_PRESENCE_EVENT_TYPE  // 17 elements, 0x4 bytes
{
    DMM_MPET_UNINITIALIZED          = 0 /*0x0*/,
    DMM_MPET_ADDMONITOR             = 1 /*0x1*/,
    DMM_MPET_REMOVEMONITOR          = 2 /*0x2*/,
    DMM_MPET_DRIVERARRIVAL          = 3 /*0x3*/,
    DMM_MPET_DRIVERQUERYREMOVE      = 4 /*0x4*/,
    DMM_MPET_DRIVERREMOVECANCELLED  = 5 /*0x5*/,
    DMM_MPET_DRIVERREMOVECOMPLETE   = 6 /*0x6*/,
    DMM_MPET_DEVICENODEREADY        = 7 /*0x7*/,
    DMM_MPET_EDIDCHANGE             = 8 /*0x8*/,
    DMM_MPET_MONITORDISABLE         = 9 /*0x9*/,
    DMM_MPET_MONITORENABLE          = 10 /*0xA*/,
    DMM_MPET_ADAPTERADD             = 11 /*0xB*/,
    DMM_MPET_ADAPTERREMOVAL         = 12 /*0xC*/,
    DMM_MPET_INVALIDATION           = 13 /*0xD*/,
    DMM_MPET_ADDSIMULATEDMONITOR    = 1073741825 /*0x40000001*/,
    DMM_MPET_REMOVESIMULATEDMONITOR = 1073741826 /*0x40000002*/,
    DMM_MPET_MAXVALID               = 1073741826 /*0x40000002*/
}DMM_MONITOR_PRESENCE_EVENT_TYPE, *PDMM_MONITOR_PRESENCE_EVENT_TYPE;

typedef enum _DMM_VIDPN_MONITOR_TYPE  // 6 elements, 0x4 bytes
{
    DMM_VMT_UNINITIALIZED           = 0 /*0x0*/,
    DMM_VMT_PHYSICAL_MONITOR        = 1 /*0x1*/,
    DMM_VMT_BOOT_PERSISTENT_MONITOR = 2 /*0x2*/,
    DMM_VMT_PERSISTENT_MONITOR      = 3 /*0x3*/,
    DMM_VMT_TEMPORARY_MONITOR       = 4 /*0x4*/,
    DMM_VMT_SIMULATED_MONITOR       = 5 /*0x5*/
}DMM_VIDPN_MONITOR_TYPE, *PDMM_VIDPN_MONITOR_TYPE;

typedef enum _DMM_VIDPNCHANGE_TYPE  // 6 elements, 0x4 bytes
{
    DMM_CVR_UNINITIALIZED  = 0 /*0x0*/,
    DMM_CVR_UPDATEMODALITY = 1 /*0x1*/,
    DMM_CVR_ADDPATH        = 2 /*0x2*/,
    DMM_CVR_ADDPATHS       = 3 /*0x3*/,
    DMM_CVR_REMOVEPATH     = 4 /*0x4*/,
    DMM_CVR_REMOVEALLPATHS = 5 /*0x5*/
}DMM_VIDPNCHANGE_TYPE, *PDMM_VIDPNCHANGE_TYPE;

typedef enum _DXGK_DIAG_CODE_POINT_TYPE  // 66 elements, 0x4 bytes
{
    DXGK_DIAG_CODE_POINT_TYPE_NONE                                           = 0 /*0x0*/,
    DXGK_DIAG_CODE_POINT_TYPE_RECOMMEND_FUNC_VIDPN                           = 1 /*0x1*/,
    DXGK_DIAG_CODE_POINT_TYPE_OS_RECOMMENDED_VIDPN                           = 2 /*0x2*/,
    DXGK_DIAG_CODE_POINT_TYPE_SDC_LOG_FAILURE                                = 3 /*0x3*/,
    DXGK_DIAG_CODE_POINT_TYPE_SDC_INVALIDATE_ERROR                           = 4 /*0x4*/,
    DXGK_DIAG_CODE_POINT_TYPE_CDS_LOG_FAILURE                                = 5 /*0x5*/,
    DXGK_DIAG_CODE_POINT_TYPE_CDS_FAILURE_DB                                 = 7 /*0x7*/,
    DXGK_DIAG_CODE_POINT_TYPE_RETRIEVE_BTL                                   = 8 /*0x8*/,
    DXGK_DIAG_CODE_POINT_TYPE_RETRIEVE_DB                                    = 9 /*0x9*/,
    DXGK_DIAG_CODE_POINT_TYPE_QDC_LOG_FAILURE                                = 10 /*0xA*/,
    DXGK_DIAG_CODE_POINT_TYPE_POWER_ON_GDI                                   = 11 /*0xB*/,
    DXGK_DIAG_CODE_POINT_TYPE_POWER_OFF_GDI                                  = 12 /*0xC*/,
    DXGK_DIAG_CODE_POINT_TYPE_POWER_ON_MONITOR                               = 13 /*0xD*/,
    DXGK_DIAG_CODE_POINT_TYPE_POWER_OFF_MONITOR                              = 14 /*0xE*/,
    DXGK_DIAG_CODE_POINT_TYPE_POWER_DIM_MONITOR                              = 15 /*0xF*/,
    DXGK_DIAG_CODE_POINT_TYPE_POWER_UNDIM_MONITOR                            = 16 /*0x10*/,
    DXGK_DIAG_CODE_POINT_TYPE_BML_BACKTRACK                                  = 17 /*0x11*/,
    DXGK_DIAG_CODE_POINT_TYPE_BML_CLOSEST_TARGET_MODE                        = 18 /*0x12*/,
    DXGK_DIAG_CODE_POINT_TYPE_BML_NO_EXACT_SOURCE_MODE                       = 19 /*0x13*/,
    DXGK_DIAG_CODE_POINT_TYPE_BML_NO_EXACT_TARGET_MODE                       = 20 /*0x14*/,
    DXGK_DIAG_CODE_POINT_TYPE_BML_SOURCE_MODE_NOT_PINNED                     = 21 /*0x15*/,
    DXGK_DIAG_CODE_POINT_TYPE_BML_TARGET_MODE_NOT_PINNED                     = 22 /*0x16*/,
    DXGK_DIAG_CODE_POINT_TYPE_BML_RESTARTED                                  = 23 /*0x17*/,
    DXGK_DIAG_CODE_POINT_TYPE_TDR                                            = 24 /*0x18*/,
    DXGK_DIAG_CODE_POINT_TYPE_ACPI_EVENT_NOTIFICATION                        = 25 /*0x19*/,
    DXGK_DIAG_CODE_POINT_TYPE_CREATEMDEV_USE_DEFAULT_MODE                    = 26 /*0x1A*/,
    DXGK_DIAG_CODE_POINT_TYPE_CONNECTED_SET_LOG_FAILURE                      = 27 /*0x1B*/,
    DXGK_DIAG_CODE_POINT_TYPE_INVALIDATE_DXGK_MODE_CACHE                     = 28 /*0x1C*/,
    DXGK_DIAG_CODE_POINT_TYPE_REBUILD_DXGK_MODE_CACHE                        = 29 /*0x1D*/,
    DXGK_DIAG_CODE_POINT_TYPE_CREATEFUNVIDPN_RELAX_REFRESH_MATCH             = 30 /*0x1E*/,
    DXGK_DIAG_CODE_POINT_TYPE_CREATEFUNVIDPN_CCDBML_FAIL_VISTABML_SUCCESSED  = 31 /*0x1F*/,
    DXGK_DIAG_CODE_POINT_TYPE_BML_BEST_SOURCE_MODE                           = 32 /*0x20*/,
    DXGK_DIAG_CODE_POINT_TYPE_BML_BEST_TARGET_MODE                           = 33 /*0x21*/,
    DXGK_DIAG_CODE_POINT_TYPE_ADD_DEVICE                                     = 34 /*0x22*/,
    DXGK_DIAG_CODE_POINT_TYPE_START_ADAPTER                                  = 35 /*0x23*/,
    DXGK_DIAG_CODE_POINT_TYPE_STOP_ADAPTER                                   = 36 /*0x24*/,
    DXGK_DIAG_CODE_POINT_TYPE_CHILD_POLLING                                  = 37 /*0x25*/,
    DXGK_DIAG_CODE_POINT_TYPE_CHILD_POLLING_TARGET                           = 38 /*0x26*/,
    DXGK_DIAG_CODE_POINT_TYPE_INDICATE_CHILD_STATUS                          = 39 /*0x27*/,
    DXGK_DIAG_CODE_POINT_TYPE_HANDLE_IRP                                     = 40 /*0x28*/,
    DXGK_DIAG_CODE_POINT_TYPE_CHANGE_UNSUPPORTED_MONITOR_MODE_FLAG           = 41 /*0x29*/,
    DXGK_DIAG_CODE_POINT_TYPE_ACPI_NOTIFY_CALLBACK                           = 42 /*0x2A*/,
    DXGK_DIAG_CODE_POINT_TYPE_VIDEOPORTCALLOUT_EXCLUDE_EVICTALL_DISABLEGDI   = 43 /*0x2B*/,
    DXGK_DIAG_CODE_POINT_TYPE_VIDEOPORTCALLOUT_EXCLUDE_EVICTALL_ENABLEGDI    = 44 /*0x2C*/,
    DXGK_DIAG_CODE_POINT_TYPE_VIDEOPORTCALLOUT_EXCLUDE_MODESWITCH            = 45 /*0x2D*/,
    DXGK_DIAG_CODE_POINT_TYPE_VIDEOPORTCALLOUT_SYNC_MONITOR_EVENT            = 46 /*0x2E*/,
    DXGK_DIAG_CODE_POINT_TYPE_VIDEOPORTCALLOUT_PNP_NOTIFY_GDI                = 47 /*0x2F*/,
    DXGK_DIAG_CODE_POINT_TYPE_VIDEOPORTCALLOUT_PNP_ENABLE_VGA                = 48 /*0x30*/,
    DXGK_DIAG_CODE_POINT_TYPE_VIDEOPORTCALLOUT_TDR_SWITCH_GDI                = 49 /*0x31*/,
    DXGK_DIAG_CODE_POINT_TYPE_VIDEOPORTCALLOUT_CDD_CREATE_DEVICE_FAILED      = 50 /*0x32*/,
    DXGK_DIAG_CODE_POINT_TYPE_VIDEOPORTCALLOUT_CDD_DEVICE_REMOVED            = 51 /*0x33*/,
    DXGK_DIAG_CODE_POINT_TYPE_VIDEOPORTCALLOUT_CDD_DRVASSERTMODE_TRUE_FAILED = 52 /*0x34*/,
    DXGK_DIAG_CODE_POINT_TYPE_VIDEOPORTCALLOUT_CDD_RECREATE_DEVICE_FAILED    = 53 /*0x35*/,
    DXGK_DIAG_CODE_POINT_TYPE_CDD_MAPSHADOWBUFFER_FAILED                     = 54 /*0x36*/,
    DXGK_DIAG_CODE_POINT_TYPE_COMMIT_VIDPN_LOG_FAILURE                       = 55 /*0x37*/,
    DXGK_DIAG_CODE_POINT_TYPE_DRIVER_RECOMMEND_LOG_FAILURE                   = 56 /*0x38*/,
    DXGK_DIAG_CODE_POINT_TYPE_SDC_ENFORCED_CLONE_PATH_INVALID_SOURCE_IDX     = 57 /*0x39*/,
    DXGK_DIAG_CODE_POINT_TYPE_DRVPROBEANDCAPTURE_FAILED                      = 58 /*0x3A*/,
    DXGK_DIAG_CODE_POINT_TYPE_DXGKCDDENABLE_OPTIMIZED_MODE_CHANGE            = 59 /*0x3B*/,
    DXGK_DIAG_CODE_POINT_TYPE_DXGKSETDISPLAYMODE_OPTIMIZED_MODE_CHANGE       = 60 /*0x3C*/,
    DXGK_DIAG_CODE_POINT_TYPE_MON_DEPART_GETRECENTTOP_FAIL                   = 61 /*0x3D*/,
    DXGK_DIAG_CODE_POINT_TYPE_MON_ARRIVE_INC_ADD_FAIL                        = 62 /*0x3E*/,
    DXGK_DIAG_CODE_POINT_TYPE_CCD_DATABASE_PERSIST                           = 63 /*0x3F*/,
    DXGK_DIAG_CODE_POINT_TYPE_CCD_DATABASE_PERSIST_NO_CONNECTIVITY_HASH      = 64 /*0x40*/,
    DXGK_DIAG_CODE_POINT_TYPE_MAX                                            = 64 /*0x40*/,
    DXGK_DIAG_CODE_POINT_TYPE_FORCE_UINT32                                   = -1 /*0xFF*/
}DXGK_DIAG_CODE_POINT_TYPE, *PDXGK_DIAG_CODE_POINT_TYPE;

typedef enum _DXGK_DIAG_TYPE  // 17 elements, 0x4 bytes
{
    DXGK_DIAG_TYPE_NONE                   = 0 /*0x0*/,
    DXGK_DIAG_TYPE_SDC                    = 1 /*0x1*/,
    DXGK_DIAG_TYPE_HPD                    = 2 /*0x2*/,
    DXGK_DIAG_TYPE_DC_ORIGIN              = 3 /*0x3*/,
    DXGK_DIAG_TYPE_USER_CDS               = 4 /*0x4*/,
    DXGK_DIAG_TYPE_DRV_CDS                = 5 /*0x5*/,
    DXGK_DIAG_TYPE_CODE_POINT             = 6 /*0x6*/,
    DXGK_DIAG_TYPE_QDC                    = 7 /*0x7*/,
    DXGK_DIAG_TYPE_MONITOR_MGR            = 8 /*0x8*/,
    DXGK_DIAG_TYPE_CONNECTEDSET_NOT_FOUND = 9 /*0x9*/,
    DXGK_DIAG_TYPE_DISPDIAG_COLLECTED     = 10 /*0xA*/,
    DXGK_DIAG_TYPE_BML_PACKET             = 11 /*0xB*/,
    DXGK_DIAG_TYPE_BML_PACKET_EX          = 12 /*0xC*/,
    DXGK_DIAG_TYPE_COMMIT_VIDPN_FAILED    = 13 /*0xD*/,
    DXGK_DIAG_TYPE_DRIVER_RECOMMEND_VIDPN = 14 /*0xE*/,
    DXGK_DIAG_TYPE_MAX                    = 14 /*0xE*/,
    DXGK_DIAG_TYPE_FORCE_UINT32           = -1 /*0xFF*/
}DXGK_DIAG_TYPE, *PDXGK_DIAG_TYPE;

typedef enum _DXGK_RECOMMENDFUNCTIONALVIDPN_REASON  // 3 elements, 0x4 bytes
{
    DXGK_RFVR_UNINITIALIZED = 0 /*0x0*/,
    DXGK_RFVR_HOTKEY        = 1 /*0x1*/,
    DXGK_RFVR_USERMODE      = 2 /*0x2*/
}DXGK_RECOMMENDFUNCTIONALVIDPN_REASON, *PDXGK_RECOMMENDFUNCTIONALVIDPN_REASON;

typedef enum _eTHRESHOLD_MARGIN_DIRECTION  // 5 elements, 0x4 bytes
{
    ThresholdMarginTop    = 0 /*0x0*/,
    ThresholdMarginLeft   = 1 /*0x1*/,
    ThresholdMarginRight  = 2 /*0x2*/,
    ThresholdMarginBottom = 3 /*0x3*/,
    ThresholdMarginMax    = 4 /*0x4*/
}eTHRESHOLD_MARGIN_DIRECTION, *PeTHRESHOLD_MARGIN_DIRECTION;

typedef enum _ETW_THREAD_FLAG  // 4 elements, 0x4 bytes
{
    ETW_THREAD_FLAG_HAD_INPUT           = 0 /*0x0*/,
    ETW_THREAD_FLAG_HAD_VISIBLE_WINDOWS = 1 /*0x1*/,
    ETW_THREAD_FLAG_HAS_NEW_INPUT       = 2 /*0x2*/,
    ETW_THREAD_FLAG_MAX                 = 3 /*0x3*/
}ETW_THREAD_FLAG, *PETW_THREAD_FLAG;

typedef enum _EVENT_TYPE  // 2 elements, 0x4 bytes
{
    NotificationEvent    = 0 /*0x0*/,
    SynchronizationEvent = 1 /*0x1*/
}EVENT_TYPE, *PEVENT_TYPE;

typedef enum _EX_POOL_PRIORITY  // 9 elements, 0x4 bytes
{
    LowPoolPriority                       = 0 /*0x0*/,
    LowPoolPrioritySpecialPoolOverrun     = 8 /*0x8*/,
    LowPoolPrioritySpecialPoolUnderrun    = 9 /*0x9*/,
    NormalPoolPriority                    = 16 /*0x10*/,
    NormalPoolPrioritySpecialPoolOverrun  = 24 /*0x18*/,
    NormalPoolPrioritySpecialPoolUnderrun = 25 /*0x19*/,
    HighPoolPriority                      = 32 /*0x20*/,
    HighPoolPrioritySpecialPoolOverrun    = 40 /*0x28*/,
    HighPoolPrioritySpecialPoolUnderrun   = 41 /*0x29*/
}EX_POOL_PRIORITY, *PEX_POOL_PRIORITY;

typedef enum _EXCEPTION_DISPOSITION  // 4 elements, 0x4 bytes
{
    ExceptionContinueExecution = 0 /*0x0*/,
    ExceptionContinueSearch    = 1 /*0x1*/,
    ExceptionNestedException   = 2 /*0x2*/,
    ExceptionCollidedUnwind    = 3 /*0x3*/
}EXCEPTION_DISPOSITION, *PEXCEPTION_DISPOSITION;

typedef enum _FILE_INFORMATION_CLASS  // 56 elements, 0x4 bytes
{
    FileDirectoryInformation                = 1 /*0x1*/,
    FileFullDirectoryInformation            = 2 /*0x2*/,
    FileBothDirectoryInformation            = 3 /*0x3*/,
    FileBasicInformation                    = 4 /*0x4*/,
    FileStandardInformation                 = 5 /*0x5*/,
    FileInternalInformation                 = 6 /*0x6*/,
    FileEaInformation                       = 7 /*0x7*/,
    FileAccessInformation                   = 8 /*0x8*/,
    FileNameInformation                     = 9 /*0x9*/,
    FileRenameInformation                   = 10 /*0xA*/,
    FileLinkInformation                     = 11 /*0xB*/,
    FileNamesInformation                    = 12 /*0xC*/,
    FileDispositionInformation              = 13 /*0xD*/,
    FilePositionInformation                 = 14 /*0xE*/,
    FileFullEaInformation                   = 15 /*0xF*/,
    FileModeInformation                     = 16 /*0x10*/,
    FileAlignmentInformation                = 17 /*0x11*/,
    FileAllInformation                      = 18 /*0x12*/,
    FileAllocationInformation               = 19 /*0x13*/,
    FileEndOfFileInformation                = 20 /*0x14*/,
    FileAlternateNameInformation            = 21 /*0x15*/,
    FileStreamInformation                   = 22 /*0x16*/,
    FilePipeInformation                     = 23 /*0x17*/,
    FilePipeLocalInformation                = 24 /*0x18*/,
    FilePipeRemoteInformation               = 25 /*0x19*/,
    FileMailslotQueryInformation            = 26 /*0x1A*/,
    FileMailslotSetInformation              = 27 /*0x1B*/,
    FileCompressionInformation              = 28 /*0x1C*/,
    FileObjectIdInformation                 = 29 /*0x1D*/,
    FileCompletionInformation               = 30 /*0x1E*/,
    FileMoveClusterInformation              = 31 /*0x1F*/,
    FileQuotaInformation                    = 32 /*0x20*/,
    FileReparsePointInformation             = 33 /*0x21*/,
    FileNetworkOpenInformation              = 34 /*0x22*/,
    FileAttributeTagInformation             = 35 /*0x23*/,
    FileTrackingInformation                 = 36 /*0x24*/,
    FileIdBothDirectoryInformation          = 37 /*0x25*/,
    FileIdFullDirectoryInformation          = 38 /*0x26*/,
    FileValidDataLengthInformation          = 39 /*0x27*/,
    FileShortNameInformation                = 40 /*0x28*/,
    FileIoCompletionNotificationInformation = 41 /*0x29*/,
    FileIoStatusBlockRangeInformation       = 42 /*0x2A*/,
    FileIoPriorityHintInformation           = 43 /*0x2B*/,
    FileSfioReserveInformation              = 44 /*0x2C*/,
    FileSfioVolumeInformation               = 45 /*0x2D*/,
    FileHardLinkInformation                 = 46 /*0x2E*/,
    FileProcessIdsUsingFileInformation      = 47 /*0x2F*/,
    FileNormalizedNameInformation           = 48 /*0x30*/,
    FileNetworkPhysicalNameInformation      = 49 /*0x31*/,
    FileIdGlobalTxDirectoryInformation      = 50 /*0x32*/,
    FileIsRemoteDeviceInformation           = 51 /*0x33*/,
    FileAttributeCacheInformation           = 52 /*0x34*/,
    FileNumaNodeInformation                 = 53 /*0x35*/,
    FileStandardLinkInformation             = 54 /*0x36*/,
    FileRemoteProtocolInformation           = 55 /*0x37*/,
    FileMaximumInformation                  = 56 /*0x38*/
}FILE_INFORMATION_CLASS, *PFILE_INFORMATION_CLASS;

typedef enum _FSINFOCLASS  // 11 elements, 0x4 bytes
{
    FileFsVolumeInformation      = 1 /*0x1*/,
    FileFsLabelInformation       = 2 /*0x2*/,
    FileFsSizeInformation        = 3 /*0x3*/,
    FileFsDeviceInformation      = 4 /*0x4*/,
    FileFsAttributeInformation   = 5 /*0x5*/,
    FileFsControlInformation     = 6 /*0x6*/,
    FileFsFullSizeInformation    = 7 /*0x7*/,
    FileFsObjectIdInformation    = 8 /*0x8*/,
    FileFsDriverPathInformation  = 9 /*0x9*/,
    FileFsVolumeFlagsInformation = 10 /*0xA*/,
    FileFsMaximumInformation     = 11 /*0xB*/
}FSINFOCLASS, *PFSINFOCLASS;

typedef enum _INTERFACE_TYPE  // 19 elements, 0x4 bytes
{
    InterfaceTypeUndefined = -1 /*0xFF*/,
    Internal               = 0 /*0x0*/,
    Isa                    = 1 /*0x1*/,
    Eisa                   = 2 /*0x2*/,
    MicroChannel           = 3 /*0x3*/,
    TurboChannel           = 4 /*0x4*/,
    PCIBus                 = 5 /*0x5*/,
    VMEBus                 = 6 /*0x6*/,
    NuBus                  = 7 /*0x7*/,
    PCMCIABus              = 8 /*0x8*/,
    CBus                   = 9 /*0x9*/,
    MPIBus                 = 10 /*0xA*/,
    MPSABus                = 11 /*0xB*/,
    ProcessorInternal      = 12 /*0xC*/,
    InternalPowerBus       = 13 /*0xD*/,
    PNPISABus              = 14 /*0xE*/,
    PNPBus                 = 15 /*0xF*/,
    Vmcs                   = 16 /*0x10*/,
    MaximumInterfaceType   = 17 /*0x11*/
}INTERFACE_TYPE, *PINTERFACE_TYPE;

typedef enum _INTERLOCKED_RESULT  // 3 elements, 0x4 bytes
{
    ResultNegative = 1 /*0x1*/,
    ResultZero     = 0 /*0x0*/,
    ResultPositive = 2 /*0x2*/
}INTERLOCKED_RESULT, *PINTERLOCKED_RESULT;

typedef enum _IO_ALLOCATION_ACTION  // 3 elements, 0x4 bytes
{
    KeepObject                    = 1 /*0x1*/,
    DeallocateObject              = 2 /*0x2*/,
    DeallocateObjectKeepRegisters = 3 /*0x3*/
}IO_ALLOCATION_ACTION, *PIO_ALLOCATION_ACTION;

typedef enum _IRQ_PRIORITY  // 4 elements, 0x4 bytes
{
    IrqPriorityUndefined = 0 /*0x0*/,
    IrqPriorityLow       = 1 /*0x1*/,
    IrqPriorityNormal    = 2 /*0x2*/,
    IrqPriorityHigh      = 3 /*0x3*/
}IRQ_PRIORITY, *PIRQ_PRIORITY;

typedef enum _MEMORY_CACHING_TYPE_ORIG  // 1 elements, 0x4 bytes
{
    MmFrameBufferCached = 2 /*0x2*/
}MEMORY_CACHING_TYPE_ORIG, *PMEMORY_CACHING_TYPE_ORIG;

typedef enum _MODE  // 3 elements, 0x4 bytes
{
    KernelMode  = 0 /*0x0*/,
    UserMode    = 1 /*0x1*/,
    MaximumMode = 2 /*0x2*/
}MODE, *PMODE;

typedef enum _MOVERECT_STYLE  // 4 elements, 0x4 bytes
{
    MoveRectKeepPositionAtCursor         = 0 /*0x0*/,
    MoveRectMidTopAtCursor               = 1 /*0x1*/,
    MoveRectKeepAspectRatioAtCursor      = 2 /*0x2*/,
    MoveRectSidewiseKeepPositionAtCursor = 3 /*0x3*/
}MOVERECT_STYLE, *PMOVERECT_STYLE;

typedef enum _NT_PRODUCT_TYPE  // 3 elements, 0x4 bytes
{
    NtProductWinNt    = 1 /*0x1*/,
    NtProductLanManNt = 2 /*0x2*/,
    NtProductServer   = 3 /*0x3*/
}NT_PRODUCT_TYPE, *PNT_PRODUCT_TYPE;

typedef enum _OB_OPEN_REASON  // 5 elements, 0x4 bytes
{
    ObCreateHandle    = 0 /*0x0*/,
    ObOpenHandle      = 1 /*0x1*/,
    ObDuplicateHandle = 2 /*0x2*/,
    ObInheritHandle   = 3 /*0x3*/,
    ObMaxOpenReason   = 4 /*0x4*/
}OB_OPEN_REASON, *POB_OPEN_REASON;

typedef enum _POOL_TYPE  // 15 elements, 0x4 bytes
{
    NonPagedPool                         = 0 /*0x0*/,
    PagedPool                            = 1 /*0x1*/,
    NonPagedPoolMustSucceed              = 2 /*0x2*/,
    DontUseThisType                      = 3 /*0x3*/,
    NonPagedPoolCacheAligned             = 4 /*0x4*/,
    PagedPoolCacheAligned                = 5 /*0x5*/,
    NonPagedPoolCacheAlignedMustS        = 6 /*0x6*/,
    MaxPoolType                          = 7 /*0x7*/,
    NonPagedPoolSession                  = 32 /*0x20*/,
    PagedPoolSession                     = 33 /*0x21*/,
    NonPagedPoolMustSucceedSession       = 34 /*0x22*/,
    DontUseThisTypeSession               = 35 /*0x23*/,
    NonPagedPoolCacheAlignedSession      = 36 /*0x24*/,
    PagedPoolCacheAlignedSession         = 37 /*0x25*/,
    NonPagedPoolCacheAlignedMustSSession = 38 /*0x26*/
}POOL_TYPE, *PPOOL_TYPE;

typedef enum _POWER_ACTION  // 8 elements, 0x4 bytes
{
    PowerActionNone          = 0 /*0x0*/,
    PowerActionReserved      = 1 /*0x1*/,
    PowerActionSleep         = 2 /*0x2*/,
    PowerActionHibernate     = 3 /*0x3*/,
    PowerActionShutdown      = 4 /*0x4*/,
    PowerActionShutdownReset = 5 /*0x5*/,
    PowerActionShutdownOff   = 6 /*0x6*/,
    PowerActionWarmEject     = 7 /*0x7*/
}POWER_ACTION, *PPOWER_ACTION;

typedef enum _POWER_STATE_TYPE  // 2 elements, 0x4 bytes
{
    SystemPowerState = 0 /*0x0*/,
    DevicePowerState = 1 /*0x1*/
}POWER_STATE_TYPE, *PPOWER_STATE_TYPE;

typedef enum _PROFILE_MAP  // 51 elements, 0x4 bytes
{
    PMAP_COLORS                     = 0 /*0x0*/,
    PMAP_CURSORS                    = 1 /*0x1*/,
    PMAP_WINDOWSM                   = 2 /*0x2*/,
    PMAP_WINDOWSU                   = 3 /*0x3*/,
    PMAP_DESKTOP                    = 4 /*0x4*/,
    PMAP_ICONS                      = 5 /*0x5*/,
    PMAP_FONTS                      = 6 /*0x6*/,
    PMAP_TRUETYPE                   = 7 /*0x7*/,
    PMAP_KBDLAYOUT                  = 8 /*0x8*/,
    PMAP_INPUT                      = 9 /*0x9*/,
    PMAP_SUBSYSTEMS                 = 10 /*0xA*/,
    PMAP_BEEP                       = 11 /*0xB*/,
    PMAP_MOUSE                      = 12 /*0xC*/,
    PMAP_KEYBOARD                   = 13 /*0xD*/,
    PMAP_STICKYKEYS                 = 14 /*0xE*/,
    PMAP_KEYBOARDRESPONSE           = 15 /*0xF*/,
    PMAP_MOUSEKEYS                  = 16 /*0x10*/,
    PMAP_TOGGLEKEYS                 = 17 /*0x11*/,
    PMAP_TIMEOUT                    = 18 /*0x12*/,
    PMAP_SOUNDSENTRY                = 19 /*0x13*/,
    PMAP_SHOWSOUNDS                 = 20 /*0x14*/,
    PMAP_AEDEBUG                    = 21 /*0x15*/,
    PMAP_NETWORK                    = 22 /*0x16*/,
    PMAP_METRICS                    = 23 /*0x17*/,
    PMAP_UKBDLAYOUT                 = 24 /*0x18*/,
    PMAP_UKBDLAYOUTTOGGLE           = 25 /*0x19*/,
    PMAP_WINLOGON                   = 26 /*0x1A*/,
    PMAP_KEYBOARDPREF               = 27 /*0x1B*/,
    PMAP_SCREENREADER               = 28 /*0x1C*/,
    PMAP_HIGHCONTRAST               = 29 /*0x1D*/,
    PMAP_IMECOMPAT                  = 30 /*0x1E*/,
    PMAP_IMM                        = 31 /*0x1F*/,
    PMAP_POOLLIMITS                 = 32 /*0x20*/,
    PMAP_COMPAT32                   = 33 /*0x21*/,
    PMAP_SETUPPROGRAMNAMES          = 34 /*0x22*/,
    PMAP_INPUTMETHOD                = 35 /*0x23*/,
    PMAP_MOUCLASS_PARAMS            = 36 /*0x24*/,
    PMAP_KBDCLASS_PARAMS            = 37 /*0x25*/,
    PMAP_COMPUTERNAME               = 38 /*0x26*/,
    PMAP_TS                         = 39 /*0x27*/,
    PMAP_TABLETPC                   = 40 /*0x28*/,
    PMAP_MEDIACENTER                = 41 /*0x29*/,
    PMAP_TS_EXCLUDE_DESKTOP_VERSION = 42 /*0x2A*/,
    PMAP_WOW64_COMPAT32             = 43 /*0x2B*/,
    PMAP_WOW64_IMECOMPAT            = 44 /*0x2C*/,
    PMAP_SERVERR2                   = 45 /*0x2D*/,
    PMAP_STARTER                    = 46 /*0x2E*/,
    PMAP_ACCESS                     = 47 /*0x2F*/,
    PMAP_AUDIODESCRIPTION           = 48 /*0x30*/,
    PMAP_CONTROL                    = 49 /*0x31*/,
    PMAP_LAST                       = 49 /*0x31*/
}PROFILE_MAP, *PPROFILE_MAP;

typedef enum _PS_ATTRIBUTE_NUM  // 18 elements, 0x4 bytes
{
    PsAttributeParentProcess  = 0 /*0x0*/,
    PsAttributeDebugObject    = 1 /*0x1*/,
    PsAttributeToken          = 2 /*0x2*/,
    PsAttributeClientId       = 3 /*0x3*/,
    PsAttributeTebAddress     = 4 /*0x4*/,
    PsAttributeImageName      = 5 /*0x5*/,
    PsAttributeImageInfo      = 6 /*0x6*/,
    PsAttributeMemoryReserve  = 7 /*0x7*/,
    PsAttributePriorityClass  = 8 /*0x8*/,
    PsAttributeErrorMode      = 9 /*0x9*/,
    PsAttributeStdHandleInfo  = 10 /*0xA*/,
    PsAttributeHandleList     = 11 /*0xB*/,
    PsAttributeGroupAffinity  = 12 /*0xC*/,
    PsAttributePreferredNode  = 13 /*0xD*/,
    PsAttributeIdealProcessor = 14 /*0xE*/,
    PsAttributeUmsThread      = 15 /*0xF*/,
    PsAttributeExecuteOptions = 16 /*0x10*/,
    PsAttributeMax            = 17 /*0x11*/
}PS_ATTRIBUTE_NUM, *PPS_ATTRIBUTE_NUM;

typedef enum _PS_CREATE_STATE  // 8 elements, 0x4 bytes
{
    PsCreateInitialState        = 0 /*0x0*/,
    PsCreateFailOnFileOpen      = 1 /*0x1*/,
    PsCreateFailOnSectionCreate = 2 /*0x2*/,
    PsCreateFailExeFormat       = 3 /*0x3*/,
    PsCreateFailMachineMismatch = 4 /*0x4*/,
    PsCreateFailExeName         = 5 /*0x5*/,
    PsCreateSuccess             = 6 /*0x6*/,
    PsCreateMaximumStates       = 7 /*0x7*/
}PS_CREATE_STATE, *PPS_CREATE_STATE;

typedef enum _PS_IFEO_KEY_STATE  // 4 elements, 0x4 bytes
{
    PsReadIFEOAllValues = 0 /*0x0*/,
    PsSkipIFEODebugger  = 1 /*0x1*/,
    PsSkipAllIFEO       = 2 /*0x2*/,
    PsMaxIFEOKeyStates  = 3 /*0x3*/
}PS_IFEO_KEY_STATE, *PPS_IFEO_KEY_STATE;

typedef enum _PS_STD_HANDLE_STATE  // 4 elements, 0x4 bytes
{
    PsNeverDuplicate     = 0 /*0x0*/,
    PsRequestDuplicate   = 1 /*0x1*/,
    PsAlwaysDuplicate    = 2 /*0x2*/,
    PsMaxStdHandleStates = 3 /*0x3*/
}PS_STD_HANDLE_STATE, *PPS_STD_HANDLE_STATE;

typedef enum _REG_NOTIFY_CLASS  // 59 elements, 0x4 bytes
{
    RegNtDeleteKey                    = 0 /*0x0*/,
    RegNtPreDeleteKey                 = 0 /*0x0*/,
    RegNtSetValueKey                  = 1 /*0x1*/,
    RegNtPreSetValueKey               = 1 /*0x1*/,
    RegNtDeleteValueKey               = 2 /*0x2*/,
    RegNtPreDeleteValueKey            = 2 /*0x2*/,
    RegNtSetInformationKey            = 3 /*0x3*/,
    RegNtPreSetInformationKey         = 3 /*0x3*/,
    RegNtRenameKey                    = 4 /*0x4*/,
    RegNtPreRenameKey                 = 4 /*0x4*/,
    RegNtEnumerateKey                 = 5 /*0x5*/,
    RegNtPreEnumerateKey              = 5 /*0x5*/,
    RegNtEnumerateValueKey            = 6 /*0x6*/,
    RegNtPreEnumerateValueKey         = 6 /*0x6*/,
    RegNtQueryKey                     = 7 /*0x7*/,
    RegNtPreQueryKey                  = 7 /*0x7*/,
    RegNtQueryValueKey                = 8 /*0x8*/,
    RegNtPreQueryValueKey             = 8 /*0x8*/,
    RegNtQueryMultipleValueKey        = 9 /*0x9*/,
    RegNtPreQueryMultipleValueKey     = 9 /*0x9*/,
    RegNtPreCreateKey                 = 10 /*0xA*/,
    RegNtPostCreateKey                = 11 /*0xB*/,
    RegNtPreOpenKey                   = 12 /*0xC*/,
    RegNtPostOpenKey                  = 13 /*0xD*/,
    RegNtKeyHandleClose               = 14 /*0xE*/,
    RegNtPreKeyHandleClose            = 14 /*0xE*/,
    RegNtPostDeleteKey                = 15 /*0xF*/,
    RegNtPostSetValueKey              = 16 /*0x10*/,
    RegNtPostDeleteValueKey           = 17 /*0x11*/,
    RegNtPostSetInformationKey        = 18 /*0x12*/,
    RegNtPostRenameKey                = 19 /*0x13*/,
    RegNtPostEnumerateKey             = 20 /*0x14*/,
    RegNtPostEnumerateValueKey        = 21 /*0x15*/,
    RegNtPostQueryKey                 = 22 /*0x16*/,
    RegNtPostQueryValueKey            = 23 /*0x17*/,
    RegNtPostQueryMultipleValueKey    = 24 /*0x18*/,
    RegNtPostKeyHandleClose           = 25 /*0x19*/,
    RegNtPreCreateKeyEx               = 26 /*0x1A*/,
    RegNtPostCreateKeyEx              = 27 /*0x1B*/,
    RegNtPreOpenKeyEx                 = 28 /*0x1C*/,
    RegNtPostOpenKeyEx                = 29 /*0x1D*/,
    RegNtPreFlushKey                  = 30 /*0x1E*/,
    RegNtPostFlushKey                 = 31 /*0x1F*/,
    RegNtPreLoadKey                   = 32 /*0x20*/,
    RegNtPostLoadKey                  = 33 /*0x21*/,
    RegNtPreUnLoadKey                 = 34 /*0x22*/,
    RegNtPostUnLoadKey                = 35 /*0x23*/,
    RegNtPreQueryKeySecurity          = 36 /*0x24*/,
    RegNtPostQueryKeySecurity         = 37 /*0x25*/,
    RegNtPreSetKeySecurity            = 38 /*0x26*/,
    RegNtPostSetKeySecurity           = 39 /*0x27*/,
    RegNtCallbackObjectContextCleanup = 40 /*0x28*/,
    RegNtPreRestoreKey                = 41 /*0x29*/,
    RegNtPostRestoreKey               = 42 /*0x2A*/,
    RegNtPreSaveKey                   = 43 /*0x2B*/,
    RegNtPostSaveKey                  = 44 /*0x2C*/,
    RegNtPreReplaceKey                = 45 /*0x2D*/,
    RegNtPostReplaceKey               = 46 /*0x2E*/,
    MaxRegNtNotifyClass               = 47 /*0x2F*/
}REG_NOTIFY_CLASS, *PREG_NOTIFY_CLASS;

typedef enum _ReplacesCorHdrNumericDefines  // 24 elements, 0x4 bytes
{
    COMIMAGE_FLAGS_ILONLY                      = 1 /*0x1*/,
    COMIMAGE_FLAGS_32BITREQUIRED               = 2 /*0x2*/,
    COMIMAGE_FLAGS_IL_LIBRARY                  = 4 /*0x4*/,
    COMIMAGE_FLAGS_STRONGNAMESIGNED            = 8 /*0x8*/,
    COMIMAGE_FLAGS_NATIVE_ENTRYPOINT           = 16 /*0x10*/,
    COMIMAGE_FLAGS_TRACKDEBUGDATA              = 65536 /*0x10000*/,
    COR_VERSION_MAJOR_V2                       = 2 /*0x2*/,
    COR_VERSION_MAJOR                          = 2 /*0x2*/,
    COR_VERSION_MINOR                          = 0 /*0x0*/,
    COR_DELETED_NAME_LENGTH                    = 8 /*0x8*/,
    COR_VTABLEGAP_NAME_LENGTH                  = 8 /*0x8*/,
    NATIVE_TYPE_MAX_CB                         = 1 /*0x1*/,
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE       = 255 /*0xFF*/,
    IMAGE_COR_MIH_METHODRVA                    = 1 /*0x1*/,
    IMAGE_COR_MIH_EHRVA                        = 2 /*0x2*/,
    IMAGE_COR_MIH_BASICBLOCK                   = 8 /*0x8*/,
    COR_VTABLE_32BIT                           = 1 /*0x1*/,
    COR_VTABLE_64BIT                           = 2 /*0x2*/,
    COR_VTABLE_FROM_UNMANAGED                  = 4 /*0x4*/,
    COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN = 8 /*0x8*/,
    COR_VTABLE_CALL_MOST_DERIVED               = 16 /*0x10*/,
    IMAGE_COR_EATJ_THUNK_SIZE                  = 32 /*0x20*/,
    MAX_CLASS_NAME                             = 1024 /*0x400*/,
    MAX_PACKAGE_NAME                           = 1024 /*0x400*/
}ReplacesCorHdrNumericDefines, *PReplacesCorHdrNumericDefines;

typedef enum _RTL_GENERIC_COMPARE_RESULTS  // 3 elements, 0x4 bytes
{
    GenericLessThan    = 0 /*0x0*/,
    GenericGreaterThan = 1 /*0x1*/,
    GenericEqual       = 2 /*0x2*/
}RTL_GENERIC_COMPARE_RESULTS, *PRTL_GENERIC_COMPARE_RESULTS;

typedef enum _SECURITY_IMPERSONATION_LEVEL  // 4 elements, 0x4 bytes
{
    SecurityAnonymous      = 0 /*0x0*/,
    SecurityIdentification = 1 /*0x1*/,
    SecurityImpersonation  = 2 /*0x2*/,
    SecurityDelegation     = 3 /*0x3*/
}SECURITY_IMPERSONATION_LEVEL, *PSECURITY_IMPERSONATION_LEVEL;

typedef enum _SECURITY_OPERATION_CODE  // 4 elements, 0x4 bytes
{
    SetSecurityDescriptor    = 0 /*0x0*/,
    QuerySecurityDescriptor  = 1 /*0x1*/,
    DeleteSecurityDescriptor = 2 /*0x2*/,
    AssignSecurityDescriptor = 3 /*0x3*/
}SECURITY_OPERATION_CODE, *PSECURITY_OPERATION_CODE;

typedef enum _SM_RANGE_TYPES  // 3 elements, 0x4 bytes
{
    SmRangeSharedInfo    = 0 /*0x0*/,
    SmRangeNonSharedInfo = 1 /*0x1*/,
    SmRangeBool          = 2 /*0x2*/
}SM_RANGE_TYPES, *PSM_RANGE_TYPES;

typedef enum _SM_STORAGE_MODIFIER  // 2 elements, 0x4 bytes
{
    SmStorageActual    = 0 /*0x0*/,
    SmStorageNonActual = 1 /*0x1*/
}SM_STORAGE_MODIFIER, *PSM_STORAGE_MODIFIER;

typedef enum _SYSTEM_POWER_STATE  // 8 elements, 0x4 bytes
{
    PowerSystemUnspecified = 0 /*0x0*/,
    PowerSystemWorking     = 1 /*0x1*/,
    PowerSystemSleeping1   = 2 /*0x2*/,
    PowerSystemSleeping2   = 3 /*0x3*/,
    PowerSystemSleeping3   = 4 /*0x4*/,
    PowerSystemHibernate   = 5 /*0x5*/,
    PowerSystemShutdown    = 6 /*0x6*/,
    PowerSystemMaximum     = 7 /*0x7*/
}SYSTEM_POWER_STATE, *PSYSTEM_POWER_STATE;

typedef enum _THRESHOLD_SELECTOR  // 8 elements, 0x4 bytes
{
    ThresholdMouse         = 0 /*0x0*/,
    ThresholdPen           = 1 /*0x1*/,
    ThresholdMouseDragOut  = 2 /*0x2*/,
    ThresholdPenDragOut    = 3 /*0x3*/,
    ThresholdMouseSideMove = 4 /*0x4*/,
    ThresholdPenSideMove   = 5 /*0x5*/,
    ThresholdAlways        = 6 /*0x6*/,
    ThresholdLast          = 7 /*0x7*/
}THRESHOLD_SELECTOR, *PTHRESHOLD_SELECTOR;

typedef enum _TOUCHSTATE  // 9 elements, 0x4 bytes
{
    TOUCHSTATE_INVALID         = -1 /*0xFF*/,
    TOUCHSTATE_NONE            = 0 /*0x0*/,
    TOUCHSTATE_DOWN            = 1 /*0x1*/,
    TOUCHSTATE_MOVE            = 2 /*0x2*/,
    TOUCHSTATE_UPOUTOFRANGE    = 3 /*0x3*/,
    TOUCHSTATE_INAIR           = 4 /*0x4*/,
    TOUCHSTATE_INAIRMOVE       = 5 /*0x5*/,
    TOUCHSTATE_INAIROUTOFRANGE = 6 /*0x6*/,
    TOUCHSTATE_COUNT           = 7 /*0x7*/
}TOUCHSTATE, *PTOUCHSTATE;

typedef enum _TP_CALLBACK_PRIORITY  // 4 elements, 0x4 bytes
{
    TP_CALLBACK_PRIORITY_HIGH    = 0 /*0x0*/,
    TP_CALLBACK_PRIORITY_NORMAL  = 1 /*0x1*/,
    TP_CALLBACK_PRIORITY_LOW     = 2 /*0x2*/,
    TP_CALLBACK_PRIORITY_INVALID = 3 /*0x3*/
}TP_CALLBACK_PRIORITY, *PTP_CALLBACK_PRIORITY;

typedef enum _WHEA_ERROR_PACKET_DATA_FORMAT  // 9 elements, 0x4 bytes
{
    WheaDataFormatIPFSalRecord = 0 /*0x0*/,
    WheaDataFormatXPFMCA       = 1 /*0x1*/,
    WheaDataFormatMemory       = 2 /*0x2*/,
    WheaDataFormatPCIExpress   = 3 /*0x3*/,
    WheaDataFormatNMIPort      = 4 /*0x4*/,
    WheaDataFormatPCIXBus      = 5 /*0x5*/,
    WheaDataFormatPCIXDevice   = 6 /*0x6*/,
    WheaDataFormatGeneric      = 7 /*0x7*/,
    WheaDataFormatMax          = 8 /*0x8*/
}WHEA_ERROR_PACKET_DATA_FORMAT, *PWHEA_ERROR_PACKET_DATA_FORMAT;

typedef enum _WHEA_ERROR_SEVERITY  // 4 elements, 0x4 bytes
{
    WheaErrSevRecoverable   = 0 /*0x0*/,
    WheaErrSevFatal         = 1 /*0x1*/,
    WheaErrSevCorrected     = 2 /*0x2*/,
    WheaErrSevInformational = 3 /*0x3*/
}WHEA_ERROR_SEVERITY, *PWHEA_ERROR_SEVERITY;

typedef enum _WHEA_ERROR_SOURCE_TYPE  // 13 elements, 0x4 bytes
{
    WheaErrSrcTypeMCE        = 0 /*0x0*/,
    WheaErrSrcTypeCMC        = 1 /*0x1*/,
    WheaErrSrcTypeCPE        = 2 /*0x2*/,
    WheaErrSrcTypeNMI        = 3 /*0x3*/,
    WheaErrSrcTypePCIe       = 4 /*0x4*/,
    WheaErrSrcTypeGeneric    = 5 /*0x5*/,
    WheaErrSrcTypeINIT       = 6 /*0x6*/,
    WheaErrSrcTypeBOOT       = 7 /*0x7*/,
    WheaErrSrcTypeSCIGeneric = 8 /*0x8*/,
    WheaErrSrcTypeIPFMCA     = 9 /*0x9*/,
    WheaErrSrcTypeIPFCMC     = 10 /*0xA*/,
    WheaErrSrcTypeIPFCPE     = 11 /*0xB*/,
    WheaErrSrcTypeMax        = 12 /*0xC*/
}WHEA_ERROR_SOURCE_TYPE, *PWHEA_ERROR_SOURCE_TYPE;

typedef enum _WHEA_ERROR_TYPE  // 7 elements, 0x4 bytes
{
    WheaErrTypeProcessor  = 0 /*0x0*/,
    WheaErrTypeMemory     = 1 /*0x1*/,
    WheaErrTypePCIExpress = 2 /*0x2*/,
    WheaErrTypeNMI        = 3 /*0x3*/,
    WheaErrTypePCIXBus    = 4 /*0x4*/,
    WheaErrTypePCIXDevice = 5 /*0x5*/,
    WheaErrTypeGeneric    = 6 /*0x6*/
}WHEA_ERROR_TYPE, *PWHEA_ERROR_TYPE;

typedef enum _WINDOW_ARRANGEMENT_COMMAND  // 10 elements, 0x4 bytes
{
    WARR_MOVE_FIRST              = 10 /*0xA*/,
    WARR_RESTORE_UP              = 10 /*0xA*/,
    WARR_RESTORE_DOWN            = 11 /*0xB*/,
    WARR_VRESTORE_UP             = 12 /*0xC*/,
    WARR_VRESTORE_DOWN           = 13 /*0xD*/,
    WARR_VMAXIMIZE_RIGHT         = 14 /*0xE*/,
    WARR_VMAXIMIZE_LEFT          = 15 /*0xF*/,
    WARR_MOVE_NEXT_MONITOR_LEFT  = 16 /*0x10*/,
    WARR_MOVE_NEXT_MONITOR_RIGHT = 17 /*0x11*/,
    WARR_MOVE_LAST               = 18 /*0x12*/
}WINDOW_ARRANGEMENT_COMMAND, *PWINDOW_ARRANGEMENT_COMMAND;

typedef enum _WINDOWCOMPOSITIONATTRIB  // 19 elements, 0x4 bytes
{
    WCA_UNDEFINED                     = 0 /*0x0*/,
    WCA_NCRENDERING_ENABLED           = 1 /*0x1*/,
    WCA_NCRENDERING_POLICY            = 2 /*0x2*/,
    WCA_TRANSITIONS_FORCEDISABLED     = 3 /*0x3*/,
    WCA_ALLOW_NCPAINT                 = 4 /*0x4*/,
    WCA_CAPTION_BUTTON_BOUNDS         = 5 /*0x5*/,
    WCA_NONCLIENT_RTL_LAYOUT          = 6 /*0x6*/,
    WCA_FORCE_ICONIC_REPRESENTATION   = 7 /*0x7*/,
    WCA_FLIP3D_POLICY                 = 8 /*0x8*/,
    WCA_EXTENDED_FRAME_BOUNDS         = 9 /*0x9*/,
    WCA_HAS_ICONIC_BITMAP             = 10 /*0xA*/,
    WCA_THEME_ATTRIBUTES              = 11 /*0xB*/,
    WCA_NCRENDERING_EXILED            = 12 /*0xC*/,
    WCA_NCADORNMENTINFO               = 13 /*0xD*/,
    WCA_EXCLUDED_FROM_LIVEPREVIEW     = 14 /*0xE*/,
    WCA_VIDEO_OVERLAY_ACTIVE          = 15 /*0xF*/,
    WCA_FORCE_ACTIVEWINDOW_APPEARANCE = 16 /*0x10*/,
    WCA_DISALLOW_PEEK                 = 17 /*0x11*/,
    WCA_LAST                          = 18 /*0x12*/
}WINDOWCOMPOSITIONATTRIB, *PWINDOWCOMPOSITIONATTRIB;

typedef enum _WOW64_SHARED_INFORMATION  // 13 elements, 0x4 bytes
{
    SharedNtdll32LdrInitializeThunk                  = 0 /*0x0*/,
    SharedNtdll32KiUserExceptionDispatcher           = 1 /*0x1*/,
    SharedNtdll32KiUserApcDispatcher                 = 2 /*0x2*/,
    SharedNtdll32KiUserCallbackDispatcher            = 3 /*0x3*/,
    SharedNtdll32LdrHotPatchRoutine                  = 4 /*0x4*/,
    SharedNtdll32ExpInterlockedPopEntrySListFault    = 5 /*0x5*/,
    SharedNtdll32ExpInterlockedPopEntrySListResume   = 6 /*0x6*/,
    SharedNtdll32ExpInterlockedPopEntrySListEnd      = 7 /*0x7*/,
    SharedNtdll32RtlUserThreadStart                  = 8 /*0x8*/,
    SharedNtdll32pQueryProcessDebugInformationRemote = 9 /*0x9*/,
    SharedNtdll32EtwpNotificationThread              = 10 /*0xA*/,
    SharedNtdll32BaseAddress                         = 11 /*0xB*/,
    Wow64SharedPageEntriesCount                      = 12 /*0xC*/
}WOW64_SHARED_INFORMATION, *PWOW64_SHARED_INFORMATION;


//------------------------------------------------------------------------
//------------------------------------------------------------------------
// Declaration of Function types

typedef VOID (NEAR CDECL FUNCT_00A3_00A2_CleanupGroupCancelCallback_DeRefSecurityDescriptor) (VOID*, VOID*);
typedef VOID (NEAR CDECL FUNCT_00A3_00AA_FinalizationCallback) (struct _TP_CALLBACK_INSTANCE*, VOID*);
typedef VOID (NEAR CDECL FUNCT_00A3_00C7_ExecuteCallback) (struct _TP_CALLBACK_INSTANCE*, struct _TP_TASK*);
typedef VOID (NEAR CDECL FUNCT_00A3_00CC_Unposted) (struct _TP_TASK*, struct _TP_POOL*);
typedef VOID (NEAR CDECL FUNCT_00A3_00DF_Callback) (struct _TP_CALLBACK_INSTANCE*, struct _TP_DIRECT*, VOID*, struct _IO_STATUS_BLOCK*);
typedef enum _EXCEPTION_DISPOSITION (NEAR CDECL FUNCT_0160_015F_Handler) (struct _EXCEPTION_RECORD*, VOID*, struct _CONTEXT*, VOID*);
typedef VOID (NEAR CDECL FUNCT_00A3_0284_PostProcessInitRoutine) ();
typedef VOID* (NEAR CDECL FUNCT_00A6_0458_AllocateEx) (enum _POOL_TYPE, UINT64, ULONG32, struct _LOOKASIDE_LIST_EX*);
typedef VOID* (NEAR CDECL FUNCT_00A6_045F_Allocate) (enum _POOL_TYPE, UINT64, ULONG32);
typedef VOID (NEAR CDECL FUNCT_00A3_0464_FreeEx) (VOID*, struct _LOOKASIDE_LIST_EX*);
typedef VOID (NEAR CDECL FUNCT_00A3_0468_Free_InterfaceReference_InterfaceDereference_DeleteProcedure_pfnFree) (VOID*);
typedef VOID (NEAR CDECL FUNCT_00A3_04CA_UserApcRoutine) (VOID*, struct _IO_STATUS_BLOCK*, ULONG32);
typedef VOID (NEAR CDECL FUNCT_00A3_04CF_CancelRoutine_DriverStartIo) (struct _DEVICE_OBJECT*, struct _IRP*);
typedef LONG32 (NEAR CDECL FUNCT_005B_0505_AddDevice) (struct _DRIVER_OBJECT*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_0065_0528_FastIoCheckIfPossible) (struct _FILE_OBJECT*, union _LARGE_INTEGER*, ULONG32, UINT8, ULONG32, UINT8, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_0065_0568_FastIoRead_FastIoWrite) (struct _FILE_OBJECT*, union _LARGE_INTEGER*, ULONG32, UINT8, ULONG32, VOID*, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_0065_0572_FastIoQueryBasicInfo) (struct _FILE_OBJECT*, UINT8, struct _FILE_BASIC_INFORMATION*, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_0065_0580_FastIoQueryStandardInfo) (struct _FILE_OBJECT*, UINT8, struct _FILE_STANDARD_INFORMATION*, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_0065_058E_FastIoLock) (struct _FILE_OBJECT*, union _LARGE_INTEGER*, union _LARGE_INTEGER*, struct _EPROCESS*, ULONG32, UINT8, UINT8, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_0065_0599_FastIoUnlockSingle) (struct _FILE_OBJECT*, union _LARGE_INTEGER*, union _LARGE_INTEGER*, struct _EPROCESS*, ULONG32, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_0065_05A2_FastIoUnlockAll) (struct _FILE_OBJECT*, struct _EPROCESS*, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_0065_05A8_FastIoUnlockAllByKey) (struct _FILE_OBJECT*, VOID*, ULONG32, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_0065_05AF_FastIoDeviceControl) (struct _FILE_OBJECT*, UINT8, VOID*, ULONG32, VOID*, ULONG32, ULONG32, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef VOID (NEAR CDECL FUNCT_00A3_05BA_AcquireFileForNtCreateSection_ReleaseFileForNtCreateSection) (struct _FILE_OBJECT*);
typedef VOID (NEAR CDECL FUNCT_00A3_05BD_FastIoDetachDevice) (struct _DEVICE_OBJECT*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_0065_05C1_FastIoQueryNetworkOpenInfo) (struct _FILE_OBJECT*, UINT8, struct _FILE_NETWORK_OPEN_INFORMATION*, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef LONG32 (NEAR CDECL FUNCT_005B_05D1_AcquireForModWrite) (struct _FILE_OBJECT*, union _LARGE_INTEGER*, struct _ERESOURCE**, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_0065_05F4_MdlRead_PrepareMdlWrite) (struct _FILE_OBJECT*, union _LARGE_INTEGER*, ULONG32, ULONG32, struct _MDL**, struct _IO_STATUS_BLOCK*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_0065_05FE_MdlReadComplete_MdlReadCompleteCompressed) (struct _FILE_OBJECT*, struct _MDL*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_0065_0603_MdlWriteComplete_MdlWriteCompleteCompressed) (struct _FILE_OBJECT*, union _LARGE_INTEGER*, struct _MDL*, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_0065_0609_FastIoReadCompressed_FastIoWriteCompressed) (struct _FILE_OBJECT*, union _LARGE_INTEGER*, ULONG32, ULONG32, VOID*, struct _MDL**, struct _IO_STATUS_BLOCK*, struct _COMPRESSED_DATA_INFO*, ULONG32, struct _DEVICE_OBJECT*);
typedef UINT8 (NEAR CDECL FUNCT_0065_061E_FastIoQueryOpen) (struct _IRP*, struct _FILE_NETWORK_OPEN_INFORMATION*, struct _DEVICE_OBJECT*);
typedef LONG32 (NEAR CDECL FUNCT_005B_0623_ReleaseForModWrite) (struct _FILE_OBJECT*, struct _ERESOURCE*, struct _DEVICE_OBJECT*);
typedef LONG32 (NEAR CDECL FUNCT_005B_0628_AcquireForCcFlush_ReleaseForCcFlush) (struct _FILE_OBJECT*, struct _DEVICE_OBJECT*);
typedef LONG32 (NEAR CDECL FUNCT_005B_062C_DriverInit) (struct _DRIVER_OBJECT*, struct _UNICODE_STRING*);
typedef VOID (NEAR CDECL FUNCT_00A3_0630_DriverUnload) (struct _DRIVER_OBJECT*);
typedef LONG32 (NEAR CDECL FUNCT_005B_0634_MajorFunction) (struct _DEVICE_OBJECT*, struct _IRP*);
typedef enum _IO_ALLOCATION_ACTION (NEAR CDECL FUNCT_0648_0647_DeviceRoutine) (struct _DEVICE_OBJECT*, struct _IRP*, VOID*, VOID*);
typedef VOID (NEAR CDECL FUNCT_00A3_065C_DeferredRoutine) (struct _KDPC*, VOID*, VOID*, VOID*);
typedef LONG32 (NEAR CDECL FUNCT_005B_08DA_CompletionRoutine) (struct _DEVICE_OBJECT*, struct _IRP*, VOID*);
typedef VOID (NEAR CDECL FUNCT_00A3_08F9_NormalRoutine) (VOID*, VOID*, VOID*);
typedef VOID (NEAR CDECL FUNCT_00A3_08F0_KernelRoutine) (struct _KAPC*, FUNCT_00A3_08F9_NormalRoutine**, VOID**, VOID**, VOID**);
typedef VOID (NEAR CDECL FUNCT_00A3_08F9_NormalRoutine) (VOID*, VOID*, VOID*);
typedef VOID (NEAR CDECL FUNCT_00A3_08FE_RundownRoutine) (struct _KAPC*);
typedef VOID (NEAR CDECL FUNCT_00A3_0928_PutDmaAdapter_FreeAdapterChannel) (struct _DMA_ADAPTER*);
typedef VOID* (NEAR CDECL FUNCT_00A6_092C_AllocateCommonBuffer) (struct _DMA_ADAPTER*, ULONG32, union _LARGE_INTEGER*, UINT8);
typedef VOID (NEAR CDECL FUNCT_00A3_0932_FreeCommonBuffer) (struct _DMA_ADAPTER*, ULONG32, union _LARGE_INTEGER, VOID*, UINT8);
typedef LONG32 (NEAR CDECL FUNCT_005B_0939_AllocateAdapterChannel) (struct _DMA_ADAPTER*, struct _DEVICE_OBJECT*, ULONG32, FUNCT_0648_0647_DeviceRoutine*, VOID*);
typedef UINT8 (NEAR CDECL FUNCT_0065_0940_FlushAdapterBuffers) (struct _DMA_ADAPTER*, struct _MDL*, VOID*, VOID*, ULONG32, UINT8);
typedef VOID (NEAR CDECL FUNCT_00A3_0948_FreeMapRegisters) (struct _DMA_ADAPTER*, VOID*, ULONG32);
typedef union _LARGE_INTEGER (NEAR CDECL FUNCT_006D_094D_MapTransfer) (struct _DMA_ADAPTER*, struct _MDL*, VOID*, VOID*, ULONG32*, UINT8);
typedef ULONG32 (NEAR CDECL FUNCT_0009_0955_GetDmaAlignment_ReadDmaCounter) (struct _DMA_ADAPTER*);
typedef VOID (NEAR CDECL FUNCT_00A3_0961) (struct _DEVICE_OBJECT*, struct _IRP*, struct _SCATTER_GATHER_LIST*, VOID*);
typedef LONG32 (NEAR CDECL FUNCT_005B_0957_GetScatterGatherList) (struct _DMA_ADAPTER*, struct _DEVICE_OBJECT*, struct _MDL*, VOID*, ULONG32, FUNCT_00A3_0961*, VOID*, UINT8);
typedef VOID (NEAR CDECL FUNCT_00A3_0961) (struct _DEVICE_OBJECT*, struct _IRP*, struct _SCATTER_GATHER_LIST*, VOID*);
typedef VOID (NEAR CDECL FUNCT_00A3_0971_PutScatterGatherList) (struct _DMA_ADAPTER*, struct _SCATTER_GATHER_LIST*, UINT8);
typedef LONG32 (NEAR CDECL FUNCT_005B_0976_CalculateScatterGatherList) (struct _DMA_ADAPTER*, struct _MDL*, VOID*, ULONG32, ULONG32*, ULONG32*);
typedef LONG32 (NEAR CDECL FUNCT_005B_097E_BuildScatterGatherList) (struct _DMA_ADAPTER*, struct _DEVICE_OBJECT*, struct _MDL*, VOID*, ULONG32, FUNCT_00A3_0961*, VOID*, UINT8, VOID*, ULONG32);
typedef LONG32 (NEAR CDECL FUNCT_005B_098A_BuildMdlFromScatterGatherList) (struct _DMA_ADAPTER*, struct _SCATTER_GATHER_LIST*, struct _MDL*, struct _MDL**);
typedef VOID (NEAR CDECL FUNCT_00A3_09D1_DumpProcedure) (VOID*, struct _OBJECT_DUMP_CONTROL*);
typedef LONG32 (NEAR CDECL FUNCT_005B_09D9_OpenProcedure) (enum _OB_OPEN_REASON, CHAR, struct _EPROCESS*, VOID*, ULONG32*, ULONG32);
typedef VOID (NEAR CDECL FUNCT_00A3_09E7_CloseProcedure) (struct _EPROCESS*, VOID*, UINT64, UINT64);
typedef LONG32 (NEAR CDECL FUNCT_005B_09ED_ParseProcedure) (VOID*, VOID*, struct _ACCESS_STATE*, CHAR, ULONG32, struct _UNICODE_STRING*, struct _UNICODE_STRING*, VOID*, struct _SECURITY_QUALITY_OF_SERVICE*, VOID**);
typedef LONG32 (NEAR CDECL FUNCT_005B_09F9_SecurityProcedure) (VOID*, enum _SECURITY_OPERATION_CODE, ULONG32*, VOID*, ULONG32*, VOID**, enum _POOL_TYPE, struct _GENERIC_MAPPING*, CHAR);
typedef LONG32 (NEAR CDECL FUNCT_005B_0A0A_QueryNameProcedure) (VOID*, UINT8, struct _OBJECT_NAME_INFORMATION*, ULONG32, ULONG32*, CHAR);
typedef UINT8 (NEAR CDECL FUNCT_0065_0A15_OkayToCloseProcedure) (struct _EPROCESS*, VOID*, VOID*, CHAR);
typedef enum _RTL_GENERIC_COMPARE_RESULTS (NEAR CDECL FUNCT_0EBB_0EBA_CompareRoutine) (struct _RTL_AVL_TABLE*, VOID*, VOID*);
typedef VOID* (NEAR CDECL FUNCT_00A6_0EC4_AllocateRoutine) (struct _RTL_AVL_TABLE*, ULONG32);
typedef VOID (NEAR CDECL FUNCT_00A3_0EC8_FreeRoutine) (struct _RTL_AVL_TABLE*, VOID*);
typedef INT64 (NEAR CDECL FUNCT_0075_0FAD_lpfnWndProc_aStoCidPfn) (struct _tagWND*, UINT32, UINT64, INT64);
typedef VOID (NEAR CDECL FUNCT_00A3_1255_lpResultCallBack) (struct _HWND__*, UINT32, UINT64, INT64);
typedef VOID (NEAR CDECL FUNCT_00A3_1310_xxxpfnSB) (struct _tagWND*, UINT32, UINT64, INT64, struct _tagSBCALC*);
typedef INT64 (NEAR CDECL FUNCT_0075_144C_mpFnidPfn) (struct _tagWND*, UINT32, UINT64, INT64, UINT64);
typedef INT64 (NEAR CDECL FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc) (/*NoType*/);

//------------------------------------------------------------------------
//------------------------------------------------------------------------
// Declaration of Structure types

          typedef struct _ACCESS_REASONS // 1 elements, 0x80 bytes (sizeof) 
          {                                                                 
/*0x000*/     ULONG32      Data[32];                                        
          }ACCESS_REASONS, *PACCESS_REASONS;                                   
                                                                            
          typedef struct _LUID       // 2 elements, 0x8 bytes (sizeof) 
          {                                                            
/*0x000*/     ULONG32      LowPart;                                    
/*0x004*/     LONG32       HighPart;                                   
          }LUID, *PLUID;                                               
                                                                       
          typedef struct _SECURITY_SUBJECT_CONTEXT                   // 4 elements, 0x20 bytes (sizeof) 
          {                                                                                             
/*0x000*/     VOID*        ClientToken;                                                                 
/*0x008*/     enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;                                    
/*0x00C*/     UINT8        _PADDING0_[0x4];                                                             
/*0x010*/     VOID*        PrimaryToken;                                                                
/*0x018*/     VOID*        ProcessAuditId;                                                              
          }SECURITY_SUBJECT_CONTEXT, *PSECURITY_SUBJECT_CONTEXT;                                        
                                                                                                        
          typedef struct _LUID_AND_ATTRIBUTES // 2 elements, 0xC bytes (sizeof) 
          {                                                                     
/*0x000*/     struct _LUID Luid;              // 2 elements, 0x8 bytes (sizeof) 
/*0x008*/     ULONG32      Attributes;                                          
          }LUID_AND_ATTRIBUTES, *PLUID_AND_ATTRIBUTES;                                  
                                                                                
          typedef struct _INITIAL_PRIVILEGE_SET         // 3 elements, 0x2C bytes (sizeof) 
          {                                                                                
/*0x000*/     ULONG32      PrivilegeCount;                                                 
/*0x004*/     ULONG32      Control;                                                        
/*0x008*/     struct _LUID_AND_ATTRIBUTES Privilege[3];                                    
          }INITIAL_PRIVILEGE_SET, *PINITIAL_PRIVILEGE_SET;                                   
                                                                                           
          typedef struct _PRIVILEGE_SET                 // 3 elements, 0x14 bytes (sizeof) 
          {                                                                                
/*0x000*/     ULONG32      PrivilegeCount;                                                 
/*0x004*/     ULONG32      Control;                                                        
/*0x008*/     struct _LUID_AND_ATTRIBUTES Privilege[1];                                    
          }PRIVILEGE_SET, *PPRIVILEGE_SET;                                                 
                                                                                           
          typedef struct _UNICODE_STRING    // 3 elements, 0x10 bytes (sizeof) 
          {                                                                    
/*0x000*/     UINT16       Length;                                             
/*0x002*/     UINT16       MaximumLength;                                      
/*0x004*/     UINT8        _PADDING0_[0x4];                                    
/*0x008*/     UINT16*      Buffer;                                             
          }UNICODE_STRING, *PUNICODE_STRING;                                   
                                                                               
          typedef struct _ACCESS_STATE                                 // 16 elements, 0xA0 bytes (sizeof) 
          {                                                                                                
/*0x000*/     struct _LUID OperationID;                                // 2 elements, 0x8 bytes (sizeof)   
/*0x008*/     UINT8        SecurityEvaluated;                                                              
/*0x009*/     UINT8        GenerateAudit;                                                                  
/*0x00A*/     UINT8        GenerateOnClose;                                                                
/*0x00B*/     UINT8        PrivilegesAllocated;                                                            
/*0x00C*/     ULONG32      Flags;                                                                          
/*0x010*/     ULONG32      RemainingDesiredAccess;                                                         
/*0x014*/     ULONG32      PreviouslyGrantedAccess;                                                        
/*0x018*/     ULONG32      OriginalDesiredAccess;                                                          
/*0x01C*/     UINT8        _PADDING0_[0x4];                                                                
/*0x020*/     struct _SECURITY_SUBJECT_CONTEXT SubjectSecurityContext; // 4 elements, 0x20 bytes (sizeof)  
/*0x040*/     VOID*        SecurityDescriptor;                                                             
/*0x048*/     VOID*        AuxData;                                                                        
              union                                                    // 2 elements, 0x2C bytes (sizeof)  
              {                                                                                            
/*0x050*/         struct _INITIAL_PRIVILEGE_SET InitialPrivilegeSet;   // 3 elements, 0x2C bytes (sizeof)  
/*0x050*/         struct _PRIVILEGE_SET PrivilegeSet;                  // 3 elements, 0x14 bytes (sizeof)  
              }Privileges;                                                                                 
/*0x07C*/     UINT8        AuditPrivileges;                                                                
/*0x07D*/     UINT8        _PADDING1_[0x3];                                                                
/*0x080*/     struct _UNICODE_STRING ObjectName;                       // 3 elements, 0x10 bytes (sizeof)  
/*0x090*/     struct _UNICODE_STRING ObjectTypeName;                   // 3 elements, 0x10 bytes (sizeof)  
          }ACCESS_STATE, *PACCESS_STATE;                                                                   
                                                                                                           
typedef struct _ACTIVATION_CONTEXT // 0 elements, 0x0 bytes (sizeof) 
{                                                                    
}ACTIVATION_CONTEXT, *PACTIVATION_CONTEXT;                                  
                                                                     
typedef struct _ACTIVATION_CONTEXT_DATA // 0 elements, 0x0 bytes (sizeof) 
{                                                                         
}ACTIVATION_CONTEXT_DATA, *PACTIVATION_CONTEXT_DATA;                                  
                                                                          
          typedef struct _LIST_ENTRY     // 2 elements, 0x10 bytes (sizeof) 
          {                                                                 
/*0x000*/     struct _LIST_ENTRY* Flink;                                    
/*0x008*/     struct _LIST_ENTRY* Blink;                                    
          }LIST_ENTRY, *PLIST_ENTRY;                                        
                                                                            
          typedef struct _ACTIVATION_CONTEXT_STACK                     // 5 elements, 0x28 bytes (sizeof) 
          {                                                                                               
/*0x000*/     struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME* ActiveFrame;                                    
/*0x008*/     struct _LIST_ENTRY FrameListCache;                       // 2 elements, 0x10 bytes (sizeof) 
/*0x018*/     ULONG32      Flags;                                                                         
/*0x01C*/     ULONG32      NextCookieSequenceNumber;                                                      
/*0x020*/     ULONG32      StackId;                                                                       
/*0x024*/     UINT8        _PADDING0_[0x4];                                                               
          }ACTIVATION_CONTEXT_STACK, *PACTIVATION_CONTEXT_STACK;                                          
                                                                                                          
typedef struct _ASSEMBLY_STORAGE_MAP // 0 elements, 0x0 bytes (sizeof) 
{                                                                      
}ASSEMBLY_STORAGE_MAP, *PASSEMBLY_STORAGE_MAP;                                  
                                                                       
          typedef struct _GENERIC_MAPPING  // 4 elements, 0x10 bytes (sizeof) 
          {                                                                   
/*0x000*/     ULONG32      GenericRead;                                       
/*0x004*/     ULONG32      GenericWrite;                                      
/*0x008*/     ULONG32      GenericExecute;                                    
/*0x00C*/     ULONG32      GenericAll;                                        
          }GENERIC_MAPPING, *PGENERIC_MAPPING;                                   
                                                                              
          typedef struct _GUID       // 4 elements, 0x10 bytes (sizeof) 
          {                                                             
/*0x000*/     ULONG32      Data1;                                       
/*0x004*/     UINT16       Data2;                                       
/*0x006*/     UINT16       Data3;                                       
/*0x008*/     UINT8        Data4[8];                                    
          }GUID, *PGUID;                                                
                                                                        
          typedef struct _AUX_ACCESS_DATA                                                                  // 11 elements, 0xD8 bytes (sizeof) 
          {                                                                                                                                    
/*0x000*/     struct _PRIVILEGE_SET* PrivilegesUsed;                                                                                           
/*0x008*/     struct _GENERIC_MAPPING GenericMapping;                                                      // 4 elements, 0x10 bytes (sizeof)  
/*0x018*/     ULONG32      AccessesToAudit;                                                                                                    
/*0x01C*/     ULONG32      MaximumAuditMask;                                                                                                   
/*0x020*/     struct _GUID TransactionId;                                                                  // 4 elements, 0x10 bytes (sizeof)  
/*0x030*/     VOID*        NewSecurityDescriptor;                                                                                              
/*0x038*/     VOID*        ExistingSecurityDescriptor;                                                                                         
/*0x040*/     VOID*        ParentSecurityDescriptor;                                                                                           
/*0x048*/     FUNCT_00A3_00A2_CleanupGroupCancelCallback_DeRefSecurityDescriptor* DeRefSecurityDescriptor;                                     
/*0x050*/     VOID*        SDLock;                                                                                                             
/*0x058*/     struct _ACCESS_REASONS AccessReasons;                                                        // 1 elements, 0x80 bytes (sizeof)  
          }AUX_ACCESS_DATA, *PAUX_ACCESS_DATA;                                                                                                 
                                                                                                                                               
          typedef struct _CALLBACKWND              // 3 elements, 0x18 bytes (sizeof) 
          {                                                                           
/*0x000*/     struct _HWND__* hwnd;                                                   
/*0x008*/     struct _tagWND* pwnd;                                                   
/*0x010*/     struct _ACTIVATION_CONTEXT* pActCtx;                                    
          }CALLBACKWND, *PCALLBACKWND;                                                
                                                                                      
          typedef struct _PROCDESKHEAD      // 5 elements, 0x28 bytes (sizeof) 
          {                                                                    
/*0x000*/     VOID*        h;                                                  
/*0x008*/     ULONG32      cLockObj;                                           
/*0x00C*/     UINT8        _PADDING0_[0x4];                                    
/*0x010*/     ULONG32      hTaskWow;                                           
/*0x014*/     UINT8        _PADDING1_[0x4];                                    
/*0x018*/     struct _tagDESKTOP* rpdesk;                                      
/*0x020*/     UINT8*       pSelf;                                              
          }PROCDESKHEAD, *PPROCDESKHEAD;                                       
                                                                               
          typedef struct _CALLPROCDATA         // 4 elements, 0x40 bytes (sizeof) 
          {                                                                       
/*0x000*/     struct _PROCDESKHEAD head;       // 5 elements, 0x28 bytes (sizeof) 
/*0x028*/     struct _CALLPROCDATA* spcpdNext;                                    
/*0x030*/     UINT64       pfnClientPrevious;                                     
/*0x038*/     UINT16       wType;                                                 
/*0x03A*/     UINT8        _PADDING0_[0x6];                                       
          }CALLPROCDATA, *PCALLPROCDATA;                                          
                                                                                  
          typedef struct _CLIENT_ID       // 2 elements, 0x10 bytes (sizeof) 
          {                                                                  
/*0x000*/     VOID*        UniqueProcess;                                    
/*0x008*/     VOID*        UniqueThread;                                     
          }CLIENT_ID, *PCLIENT_ID;                                           
                                                                             
          typedef union _LARGE_INTEGER   // 4 elements, 0x8 bytes (sizeof) 
          {                                                                
              struct                     // 2 elements, 0x8 bytes (sizeof) 
              {                                                            
/*0x000*/         ULONG32      LowPart;                                    
/*0x004*/         LONG32       HighPart;                                   
              };                                                           
              struct                     // 2 elements, 0x8 bytes (sizeof) 
              {                                                            
/*0x000*/         ULONG32      LowPart;                                    
/*0x004*/         LONG32       HighPart;                                   
              }u;                                                          
/*0x000*/     INT64        QuadPart;                                       
          }LARGE_INTEGER, *PLARGE_INTEGER;                                  
                                                                           
          typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR // 4 elements, 0x14 bytes (sizeof)  
          {                                                                                  
/*0x000*/     UINT8        Type;                                                             
/*0x001*/     UINT8        ShareDisposition;                                                 
/*0x002*/     UINT16       Flags;                                                            
              union                                      // 12 elements, 0x10 bytes (sizeof) 
              {                                                                              
                  struct                                 // 2 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             union _LARGE_INTEGER Start;        // 4 elements, 0x8 bytes (sizeof)   
/*0x00C*/             ULONG32      Length;                                                   
                  }Generic;                                                                  
                  struct                                 // 2 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             union _LARGE_INTEGER Start;        // 4 elements, 0x8 bytes (sizeof)   
/*0x00C*/             ULONG32      Length;                                                   
                  }Port;                                                                     
                  struct                                 // 4 elements, 0x10 bytes (sizeof)  
                  {                                                                          
/*0x004*/             UINT16       Level;                                                    
/*0x006*/             UINT16       Group;                                                    
/*0x008*/             ULONG32      Vector;                                                   
/*0x00C*/             UINT64       Affinity;                                                 
                  }Interrupt;                                                                
                  struct                                 // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                          
                      union                              // 2 elements, 0x10 bytes (sizeof)  
                      {                                                                      
                          struct                         // 4 elements, 0x10 bytes (sizeof)  
                          {                                                                  
/*0x004*/                     UINT16       Group;                                            
/*0x006*/                     UINT16       MessageCount;                                     
/*0x008*/                     ULONG32      Vector;                                           
/*0x00C*/                     UINT64       Affinity;                                         
                          }Raw;                                                              
                          struct                         // 4 elements, 0x10 bytes (sizeof)  
                          {                                                                  
/*0x004*/                     UINT16       Level;                                            
/*0x006*/                     UINT16       Group;                                            
/*0x008*/                     ULONG32      Vector;                                           
/*0x00C*/                     UINT64       Affinity;                                         
                          }Translated;                                                       
                      };                                                                     
                  }MessageInterrupt;                                                         
                  struct                                 // 2 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             union _LARGE_INTEGER Start;        // 4 elements, 0x8 bytes (sizeof)   
/*0x00C*/             ULONG32      Length;                                                   
                  }Memory;                                                                   
                  struct                                 // 3 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             ULONG32      Channel;                                                  
/*0x008*/             ULONG32      Port;                                                     
/*0x00C*/             ULONG32      Reserved1;                                                
                  }Dma;                                                                      
                  struct                                 // 1 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             ULONG32      Data[3];                                                  
                  }DevicePrivate;                                                            
                  struct                                 // 3 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             ULONG32      Start;                                                    
/*0x008*/             ULONG32      Length;                                                   
/*0x00C*/             ULONG32      Reserved;                                                 
                  }BusNumber;                                                                
                  struct                                 // 3 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             ULONG32      DataSize;                                                 
/*0x008*/             ULONG32      Reserved1;                                                
/*0x00C*/             ULONG32      Reserved2;                                                
                  }DeviceSpecificData;                                                       
                  struct                                 // 2 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             union _LARGE_INTEGER Start;        // 4 elements, 0x8 bytes (sizeof)   
/*0x00C*/             ULONG32      Length40;                                                 
                  }Memory40;                                                                 
                  struct                                 // 2 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             union _LARGE_INTEGER Start;        // 4 elements, 0x8 bytes (sizeof)   
/*0x00C*/             ULONG32      Length48;                                                 
                  }Memory48;                                                                 
                  struct                                 // 2 elements, 0xC bytes (sizeof)   
                  {                                                                          
/*0x004*/             union _LARGE_INTEGER Start;        // 4 elements, 0x8 bytes (sizeof)   
/*0x00C*/             ULONG32      Length64;                                                 
                  }Memory64;                                                                 
              }u;                                                                            
          }CM_PARTIAL_RESOURCE_DESCRIPTOR, *PCM_PARTIAL_RESOURCE_DESCRIPTOR;                                    
                                                                                             
          typedef struct _CM_PARTIAL_RESOURCE_LIST                          // 4 elements, 0x1C bytes (sizeof) 
          {                                                                                                    
/*0x000*/     UINT16       Version;                                                                            
/*0x002*/     UINT16       Revision;                                                                           
/*0x004*/     ULONG32      Count;                                                                              
/*0x008*/     struct _CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];                                    
          }CM_PARTIAL_RESOURCE_LIST, *PCM_PARTIAL_RESOURCE_LIST;                                               
                                                                                                               
          typedef struct _CM_FULL_RESOURCE_DESCRIPTOR               // 3 elements, 0x24 bytes (sizeof) 
          {                                                                                            
/*0x000*/     enum _INTERFACE_TYPE InterfaceType;                                                      
/*0x004*/     ULONG32      BusNumber;                                                                  
/*0x008*/     struct _CM_PARTIAL_RESOURCE_LIST PartialResourceList; // 4 elements, 0x1C bytes (sizeof) 
          }CM_FULL_RESOURCE_DESCRIPTOR, *PCM_FULL_RESOURCE_DESCRIPTOR;                                   
                                                                                                       
          typedef struct _CM_RESOURCE_LIST                 // 2 elements, 0x28 bytes (sizeof) 
          {                                                                                   
/*0x000*/     ULONG32      Count;                                                             
/*0x004*/     struct _CM_FULL_RESOURCE_DESCRIPTOR List[1];                                    
          }CM_RESOURCE_LIST, *PCM_RESOURCE_LIST;                                              
                                                                                              
          typedef struct _COMPRESSED_DATA_INFO         // 7 elements, 0xC bytes (sizeof) 
          {                                                                              
/*0x000*/     UINT16       CompressionFormatAndEngine;                                   
/*0x002*/     UINT8        CompressionUnitShift;                                         
/*0x003*/     UINT8        ChunkShift;                                                   
/*0x004*/     UINT8        ClusterShift;                                                 
/*0x005*/     UINT8        Reserved;                                                     
/*0x006*/     UINT16       NumberOfChunks;                                               
/*0x008*/     ULONG32      CompressedChunkSizes[1];                                      
          }COMPRESSED_DATA_INFO, *PCOMPRESSED_DATA_INFO;                                  
                                                                                         
          typedef struct _tagRECT  // 4 elements, 0x10 bytes (sizeof) 
          {                                                           
/*0x000*/     LONG32       left;                                      
/*0x004*/     LONG32       top;                                       
/*0x008*/     LONG32       right;                                     
/*0x00C*/     LONG32       bottom;                                    
          }tagRECT, *PtagRECT;                                        
                                                                      
          typedef struct _CONSOLE_CARET_INFO // 2 elements, 0x18 bytes (sizeof) 
          {                                                                     
/*0x000*/     struct _HWND__* hwnd;                                             
/*0x008*/     struct _tagRECT rc;            // 4 elements, 0x10 bytes (sizeof) 
          }CONSOLE_CARET_INFO, *PCONSOLE_CARET_INFO;                                   
                                                                                
          typedef struct _M128A  // 2 elements, 0x10 bytes (sizeof) 
          {                                                         
/*0x000*/     UINT64       Low;                                     
/*0x008*/     INT64        High;                                    
          }M128A, *PM128A;                                          
                                                                    
          typedef struct _XSAVE_FORMAT         // 16 elements, 0x200 bytes (sizeof) 
          {                                                                         
/*0x000*/     UINT16       ControlWord;                                             
/*0x002*/     UINT16       StatusWord;                                              
/*0x004*/     UINT8        TagWord;                                                 
/*0x005*/     UINT8        Reserved1;                                               
/*0x006*/     UINT16       ErrorOpcode;                                             
/*0x008*/     ULONG32      ErrorOffset;                                             
/*0x00C*/     UINT16       ErrorSelector;                                           
/*0x00E*/     UINT16       Reserved2;                                               
/*0x010*/     ULONG32      DataOffset;                                              
/*0x014*/     UINT16       DataSelector;                                            
/*0x016*/     UINT16       Reserved3;                                               
/*0x018*/     ULONG32      MxCsr;                                                   
/*0x01C*/     ULONG32      MxCsr_Mask;                                              
/*0x020*/     struct _M128A FloatRegisters[8];                                      
/*0x0A0*/     struct _M128A XmmRegisters[16];                                       
/*0x1A0*/     UINT8        Reserved4[96];                                           
          }XSAVE_FORMAT, *PXSAVE_FORMAT;                                            
                                                                                    
          typedef struct _CONTEXT                    // 64 elements, 0x4D0 bytes (sizeof) 
          {                                                                               
/*0x000*/     UINT64       P1Home;                                                        
/*0x008*/     UINT64       P2Home;                                                        
/*0x010*/     UINT64       P3Home;                                                        
/*0x018*/     UINT64       P4Home;                                                        
/*0x020*/     UINT64       P5Home;                                                        
/*0x028*/     UINT64       P6Home;                                                        
/*0x030*/     ULONG32      ContextFlags;                                                  
/*0x034*/     ULONG32      MxCsr;                                                         
/*0x038*/     UINT16       SegCs;                                                         
/*0x03A*/     UINT16       SegDs;                                                         
/*0x03C*/     UINT16       SegEs;                                                         
/*0x03E*/     UINT16       SegFs;                                                         
/*0x040*/     UINT16       SegGs;                                                         
/*0x042*/     UINT16       SegSs;                                                         
/*0x044*/     ULONG32      EFlags;                                                        
/*0x048*/     UINT64       Dr0;                                                           
/*0x050*/     UINT64       Dr1;                                                           
/*0x058*/     UINT64       Dr2;                                                           
/*0x060*/     UINT64       Dr3;                                                           
/*0x068*/     UINT64       Dr6;                                                           
/*0x070*/     UINT64       Dr7;                                                           
/*0x078*/     UINT64       Rax;                                                           
/*0x080*/     UINT64       Rcx;                                                           
/*0x088*/     UINT64       Rdx;                                                           
/*0x090*/     UINT64       Rbx;                                                           
/*0x098*/     UINT64       Rsp;                                                           
/*0x0A0*/     UINT64       Rbp;                                                           
/*0x0A8*/     UINT64       Rsi;                                                           
/*0x0B0*/     UINT64       Rdi;                                                           
/*0x0B8*/     UINT64       R8;                                                            
/*0x0C0*/     UINT64       R9;                                                            
/*0x0C8*/     UINT64       R10;                                                           
/*0x0D0*/     UINT64       R11;                                                           
/*0x0D8*/     UINT64       R12;                                                           
/*0x0E0*/     UINT64       R13;                                                           
/*0x0E8*/     UINT64       R14;                                                           
/*0x0F0*/     UINT64       R15;                                                           
/*0x0F8*/     UINT64       Rip;                                                           
              union                                  // 2 elements, 0x200 bytes (sizeof)  
              {                                                                           
/*0x100*/         struct _XSAVE_FORMAT FltSave;      // 16 elements, 0x200 bytes (sizeof) 
                  struct                             // 18 elements, 0x200 bytes (sizeof) 
                  {                                                                       
/*0x100*/             struct _M128A Header[2];                                            
/*0x120*/             struct _M128A Legacy[8];                                            
/*0x1A0*/             struct _M128A Xmm0;            // 2 elements, 0x10 bytes (sizeof)   
/*0x1B0*/             struct _M128A Xmm1;            // 2 elements, 0x10 bytes (sizeof)   
/*0x1C0*/             struct _M128A Xmm2;            // 2 elements, 0x10 bytes (sizeof)   
/*0x1D0*/             struct _M128A Xmm3;            // 2 elements, 0x10 bytes (sizeof)   
/*0x1E0*/             struct _M128A Xmm4;            // 2 elements, 0x10 bytes (sizeof)   
/*0x1F0*/             struct _M128A Xmm5;            // 2 elements, 0x10 bytes (sizeof)   
/*0x200*/             struct _M128A Xmm6;            // 2 elements, 0x10 bytes (sizeof)   
/*0x210*/             struct _M128A Xmm7;            // 2 elements, 0x10 bytes (sizeof)   
/*0x220*/             struct _M128A Xmm8;            // 2 elements, 0x10 bytes (sizeof)   
/*0x230*/             struct _M128A Xmm9;            // 2 elements, 0x10 bytes (sizeof)   
/*0x240*/             struct _M128A Xmm10;           // 2 elements, 0x10 bytes (sizeof)   
/*0x250*/             struct _M128A Xmm11;           // 2 elements, 0x10 bytes (sizeof)   
/*0x260*/             struct _M128A Xmm12;           // 2 elements, 0x10 bytes (sizeof)   
/*0x270*/             struct _M128A Xmm13;           // 2 elements, 0x10 bytes (sizeof)   
/*0x280*/             struct _M128A Xmm14;           // 2 elements, 0x10 bytes (sizeof)   
/*0x290*/             struct _M128A Xmm15;           // 2 elements, 0x10 bytes (sizeof)   
/*0x2A0*/             UINT8        _PADDING0_[0x60];                                      
                  };                                                                      
              };                                                                          
/*0x300*/     struct _M128A VectorRegister[26];                                           
/*0x4A0*/     UINT64       VectorControl;                                                 
/*0x4A8*/     UINT64       DebugControl;                                                  
/*0x4B0*/     UINT64       LastBranchToRip;                                               
/*0x4B8*/     UINT64       LastBranchFromRip;                                             
/*0x4C0*/     UINT64       LastExceptionToRip;                                            
/*0x4C8*/     UINT64       LastExceptionFromRip;                                          
          }CONTEXT, *PCONTEXT;                                                            
                                                                                          
          typedef struct _CONTEXT32_UPDATE // 1 elements, 0x4 bytes (sizeof) 
          {                                                                  
/*0x000*/     ULONG32      NumberEntries;                                    
          }CONTEXT32_UPDATE, *PCONTEXT32_UPDATE;                                  
                                                                             
          typedef struct _CURDIR              // 2 elements, 0x18 bytes (sizeof) 
          {                                                                      
/*0x000*/     struct _UNICODE_STRING DosPath; // 3 elements, 0x10 bytes (sizeof) 
/*0x010*/     VOID*        Handle;                                               
          }CURDIR, *PCURDIR;                                                     
                                                                                 
          typedef struct _D3DDDI_DXGI_RGB // 3 elements, 0xC bytes (sizeof) 
          {                                                                 
/*0x000*/     FLOAT32      Red;                                             
/*0x004*/     FLOAT32      Green;                                           
/*0x008*/     FLOAT32      Blue;                                            
          }D3DDDI_DXGI_RGB, *PD3DDDI_DXGI_RGB;                                  
                                                                            
          typedef struct _D3DDDI_GAMMA_RAMP_DXGI_1      // 3 elements, 0x3024 bytes (sizeof) 
          {                                                                                  
/*0x000*/     struct _D3DDDI_DXGI_RGB Scale;            // 3 elements, 0xC bytes (sizeof)    
/*0x00C*/     struct _D3DDDI_DXGI_RGB Offset;           // 3 elements, 0xC bytes (sizeof)    
/*0x018*/     struct _D3DDDI_DXGI_RGB GammaCurve[1025];                                      
          }D3DDDI_GAMMA_RAMP_DXGI_1, *PD3DDDI_GAMMA_RAMP_DXGI_1;                                     
                                                                                             
          typedef struct _D3DDDI_GAMMA_RAMP_RGB256x3x16 // 3 elements, 0x600 bytes (sizeof) 
          {                                                                                 
/*0x000*/     UINT16       Red[256];                                                        
/*0x200*/     UINT16       Green[256];                                                      
/*0x400*/     UINT16       Blue[256];                                                       
          }D3DDDI_GAMMA_RAMP_RGB256x3x16, *PD3DDDI_GAMMA_RAMP_RGB256x3x16;                                    
                                                                                            
          typedef struct _D3DDDI_RATIONAL // 2 elements, 0x8 bytes (sizeof) 
          {                                                                 
/*0x000*/     UINT32       Numerator;                                       
/*0x004*/     UINT32       Denominator;                                     
          }D3DDDI_RATIONAL, *PD3DDDI_RATIONAL;                                  
                                                                            
          typedef struct _D3DKMDT_2DREGION // 2 elements, 0x8 bytes (sizeof) 
          {                                                                  
/*0x000*/     UINT32       cx;                                               
/*0x004*/     UINT32       cy;                                               
          }D3DKMDT_2DREGION, *PD3DKMDT_2DREGION;                                  
                                                                             
          typedef struct _D3DKMDT_COLOR_COEFF_DYNAMIC_RANGES // 4 elements, 0x10 bytes (sizeof) 
          {                                                                                     
/*0x000*/     UINT32       FirstChannel;                                                        
/*0x004*/     UINT32       SecondChannel;                                                       
/*0x008*/     UINT32       ThirdChannel;                                                        
/*0x00C*/     UINT32       FourthChannel;                                                       
          }D3DKMDT_COLOR_COEFF_DYNAMIC_RANGES, *PD3DKMDT_COLOR_COEFF_DYNAMIC_RANGES;                                   
                                                                                                
          typedef struct _D3DKMDT_FREQUENCY_RANGE   // 4 elements, 0x20 bytes (sizeof) 
          {                                                                            
/*0x000*/     struct _D3DDDI_RATIONAL MinVSyncFreq; // 2 elements, 0x8 bytes (sizeof)  
/*0x008*/     struct _D3DDDI_RATIONAL MaxVSyncFreq; // 2 elements, 0x8 bytes (sizeof)  
/*0x010*/     struct _D3DDDI_RATIONAL MinHSyncFreq; // 2 elements, 0x8 bytes (sizeof)  
/*0x018*/     struct _D3DDDI_RATIONAL MaxHSyncFreq; // 2 elements, 0x8 bytes (sizeof)  
          }D3DKMDT_FREQUENCY_RANGE, *PD3DKMDT_FREQUENCY_RANGE;                                   
                                                                                       
          typedef struct _D3DKMDT_GAMMA_RAMP                           // 3 elements, 0x18 bytes (sizeof) 
          {                                                                                               
/*0x000*/     enum _D3DDDI_GAMMARAMP_TYPE Type;                                                           
/*0x004*/     UINT8        _PADDING0_[0x4];                                                               
/*0x008*/     UINT64       DataSize;                                                                      
              union                                                    // 3 elements, 0x8 bytes (sizeof)  
              {                                                                                           
/*0x010*/         struct _D3DDDI_GAMMA_RAMP_RGB256x3x16* pRgb256x3x16;                                    
/*0x010*/         struct _D3DDDI_GAMMA_RAMP_DXGI_1* pDxgi1;                                               
/*0x010*/         VOID*        pRaw;                                                                      
              }Data;                                                                                      
          }D3DKMDT_GAMMA_RAMP, *PD3DKMDT_GAMMA_RAMP;                                                      
                                                                                                          
          typedef struct _D3DKMDT_GRAPHICS_RENDERING_FORMAT               // 6 elements, 0x20 bytes (sizeof) 
          {                                                                                                  
/*0x000*/     struct _D3DKMDT_2DREGION PrimSurfSize;                      // 2 elements, 0x8 bytes (sizeof)  
/*0x008*/     struct _D3DKMDT_2DREGION VisibleRegionSize;                 // 2 elements, 0x8 bytes (sizeof)  
/*0x010*/     ULONG32      Stride;                                                                           
/*0x014*/     enum _D3DDDIFORMAT PixelFormat;                                                                
/*0x018*/     enum _D3DKMDT_COLOR_BASIS ColorBasis;                                                          
/*0x01C*/     enum _D3DKMDT_PIXEL_VALUE_ACCESS_MODE PixelValueAccessMode;                                    
          }D3DKMDT_GRAPHICS_RENDERING_FORMAT, *PD3DKMDT_GRAPHICS_RENDERING_FORMAT;                                   
                                                                                                             
          typedef struct _D3DKMDT_MONITOR_FREQUENCY_RANGE                      // 4 elements, 0x30 bytes (sizeof) 
          {                                                                                                       
/*0x000*/     enum _D3DKMDT_MONITOR_CAPABILITIES_ORIGIN Origin;                                                   
/*0x004*/     struct _D3DKMDT_FREQUENCY_RANGE RangeLimits;                     // 4 elements, 0x20 bytes (sizeof) 
/*0x024*/     enum _D3DKMDT_MONITOR_FREQUENCY_RANGE_CONSTRAINT ConstraintType;                                    
              union                                                            // 2 elements, 0x8 bytes (sizeof)  
              {                                                                                                   
/*0x028*/         struct _D3DKMDT_2DREGION ActiveSize;                         // 2 elements, 0x8 bytes (sizeof)  
/*0x028*/         UINT64       MaxPixelRate;                                                                      
              }Constraint;                                                                                        
          }D3DKMDT_MONITOR_FREQUENCY_RANGE, *PD3DKMDT_MONITOR_FREQUENCY_RANGE;                                    
                                                                                                                  
          typedef struct _D3DKMDT_VIDEO_SIGNAL_INFO                         // 7 elements, 0x38 bytes (sizeof) 
          {                                                                                                    
/*0x000*/     enum _D3DKMDT_VIDEO_SIGNAL_STANDARD VideoStandard;                                               
/*0x004*/     struct _D3DKMDT_2DREGION TotalSize;                           // 2 elements, 0x8 bytes (sizeof)  
/*0x00C*/     struct _D3DKMDT_2DREGION ActiveSize;                          // 2 elements, 0x8 bytes (sizeof)  
/*0x014*/     struct _D3DDDI_RATIONAL VSyncFreq;                            // 2 elements, 0x8 bytes (sizeof)  
/*0x01C*/     struct _D3DDDI_RATIONAL HSyncFreq;                            // 2 elements, 0x8 bytes (sizeof)  
/*0x024*/     UINT8        _PADDING0_[0x4];                                                                    
/*0x028*/     UINT64       PixelRate;                                                                          
/*0x030*/     enum _D3DDDI_VIDEO_SIGNAL_SCANLINE_ORDERING ScanLineOrdering;                                    
/*0x034*/     UINT8        _PADDING1_[0x4];                                                                    
          }D3DKMDT_VIDEO_SIGNAL_INFO, *PD3DKMDT_VIDEO_SIGNAL_INFO;                                             
                                                                                                               
          typedef struct _D3DKMDT_MONITOR_SOURCE_MODE                             // 6 elements, 0x60 bytes (sizeof) 
          {                                                                                                          
/*0x000*/     UINT32       Id;                                                                                       
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                          
/*0x008*/     struct _D3DKMDT_VIDEO_SIGNAL_INFO VideoSignalInfo;                  // 7 elements, 0x38 bytes (sizeof) 
/*0x040*/     enum _D3DKMDT_COLOR_BASIS ColorBasis;                                                                  
/*0x044*/     struct _D3DKMDT_COLOR_COEFF_DYNAMIC_RANGES ColorCoeffDynamicRanges; // 4 elements, 0x10 bytes (sizeof) 
/*0x054*/     enum _D3DKMDT_MONITOR_CAPABILITIES_ORIGIN Origin;                                                      
/*0x058*/     enum _D3DKMDT_MODE_PREFERENCE Preference;                                                              
/*0x05C*/     UINT8        _PADDING1_[0x4];                                                                          
          }D3DKMDT_MONITOR_SOURCE_MODE, *PD3DKMDT_MONITOR_SOURCE_MODE;                                               
                                                                                                                     
          typedef struct _D3DKMDT_VIDPN_PRESENT_PATH_SCALING_SUPPORT // 5 elements, 0x4 bytes (sizeof) 
          {                                                                                            
/*0x000*/     UINT32       Identity : 1;                             // 0 BitPosition                  
/*0x000*/     UINT32       Centered : 1;                             // 1 BitPosition                  
/*0x000*/     UINT32       Stretched : 1;                            // 2 BitPosition                  
/*0x000*/     UINT32       AspectRatioCenteredMax : 1;               // 3 BitPosition                  
/*0x000*/     UINT32       Custom : 1;                               // 4 BitPosition                  
          }D3DKMDT_VIDPN_PRESENT_PATH_SCALING_SUPPORT, *PD3DKMDT_VIDPN_PRESENT_PATH_SCALING_SUPPORT;                                  
                                                                                                       
          typedef struct _D3DKMDT_VIDPN_PRESENT_PATH_ROTATION_SUPPORT // 4 elements, 0x4 bytes (sizeof) 
          {                                                                                             
/*0x000*/     UINT32       Identity : 1;                              // 0 BitPosition                  
/*0x000*/     UINT32       Rotate90 : 1;                              // 1 BitPosition                  
/*0x000*/     UINT32       Rotate180 : 1;                             // 2 BitPosition                  
/*0x000*/     UINT32       Rotate270 : 1;                             // 3 BitPosition                  
          }D3DKMDT_VIDPN_PRESENT_PATH_ROTATION_SUPPORT, *PD3DKMDT_VIDPN_PRESENT_PATH_ROTATION_SUPPORT;                                  
                                                                                                        
          typedef struct _D3DKMDT_VIDPN_PRESENT_PATH_TRANSFORMATION                // 4 elements, 0x10 bytes (sizeof) 
          {                                                                                                           
/*0x000*/     enum _D3DKMDT_VIDPN_PRESENT_PATH_SCALING Scaling;                                                       
/*0x004*/     struct _D3DKMDT_VIDPN_PRESENT_PATH_SCALING_SUPPORT ScalingSupport;   // 5 elements, 0x4 bytes (sizeof)  
/*0x008*/     enum _D3DKMDT_VIDPN_PRESENT_PATH_ROTATION Rotation;                                                     
/*0x00C*/     struct _D3DKMDT_VIDPN_PRESENT_PATH_ROTATION_SUPPORT RotationSupport; // 4 elements, 0x4 bytes (sizeof)  
          }D3DKMDT_VIDPN_PRESENT_PATH_TRANSFORMATION, *PD3DKMDT_VIDPN_PRESENT_PATH_TRANSFORMATION;                                   
                                                                                                                      
          typedef struct _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_SUPPORT // 4 elements, 0x4 bytes (sizeof) 
          {                                                                                                   
/*0x000*/     UINT32       NoProtection : 1;                                // 0 BitPosition                  
/*0x000*/     UINT32       MacroVisionApsTrigger : 1;                       // 1 BitPosition                  
/*0x000*/     UINT32       MacroVisionFull : 1;                             // 2 BitPosition                  
/*0x000*/     UINT32       Reserved : 29;                                   // 3 BitPosition                  
          }D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_SUPPORT, *PD3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_SUPPORT;                                  
                                                                                                              
          typedef struct _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION                            // 4 elements, 0x10C bytes (sizeof) 
          {                                                                                                                        
/*0x000*/     enum _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_TYPE CopyProtectionType;                                             
/*0x004*/     UINT32       APSTriggerBits;                                                                                         
/*0x008*/     UINT8        OEMCopyProtection[256];                                                                                 
/*0x108*/     struct _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_SUPPORT CopyProtectionSupport; // 4 elements, 0x4 bytes (sizeof)   
          }D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION, *PD3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION;                                    
                                                                                                                                   
          typedef struct _D3DKMDT_VIDPN_PRESENT_PATH                                         // 11 elements, 0x168 bytes (sizeof) 
          {                                                                                                                       
/*0x000*/     UINT32       VidPnSourceId;                                                                                         
/*0x004*/     UINT32       VidPnTargetId;                                                                                         
/*0x008*/     enum _D3DKMDT_VIDPN_PRESENT_PATH_IMPORTANCE ImportanceOrdinal;                                                      
/*0x00C*/     struct _D3DKMDT_VIDPN_PRESENT_PATH_TRANSFORMATION ContentTransformation;       // 4 elements, 0x10 bytes (sizeof)   
/*0x01C*/     struct _D3DKMDT_2DREGION VisibleFromActiveTLOffset;                            // 2 elements, 0x8 bytes (sizeof)    
/*0x024*/     struct _D3DKMDT_2DREGION VisibleFromActiveBROffset;                            // 2 elements, 0x8 bytes (sizeof)    
/*0x02C*/     enum _D3DKMDT_COLOR_BASIS VidPnTargetColorBasis;                                                                    
/*0x030*/     struct _D3DKMDT_COLOR_COEFF_DYNAMIC_RANGES VidPnTargetColorCoeffDynamicRanges; // 4 elements, 0x10 bytes (sizeof)   
/*0x040*/     enum _D3DKMDT_VIDPN_PRESENT_PATH_CONTENT Content;                                                                   
/*0x044*/     struct _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION CopyProtection;              // 4 elements, 0x10C bytes (sizeof)  
/*0x150*/     struct _D3DKMDT_GAMMA_RAMP GammaRamp;                                          // 3 elements, 0x18 bytes (sizeof)   
          }D3DKMDT_VIDPN_PRESENT_PATH, *PD3DKMDT_VIDPN_PRESENT_PATH;                                                              
                                                                                                                                  
          typedef struct _D3DKMDT_VIDPN_SOURCE_MODE                   // 3 elements, 0x28 bytes (sizeof) 
          {                                                                                              
/*0x000*/     UINT32       Id;                                                                           
/*0x004*/     enum _D3DKMDT_VIDPN_SOURCE_MODE_TYPE Type;                                                 
              union                                                   // 2 elements, 0x20 bytes (sizeof) 
              {                                                                                          
/*0x008*/         struct _D3DKMDT_GRAPHICS_RENDERING_FORMAT Graphics; // 6 elements, 0x20 bytes (sizeof) 
/*0x008*/         enum _D3DKMDT_TEXT_RENDERING_FORMAT Text;                                              
              }Format;                                                                                   
          }D3DKMDT_VIDPN_SOURCE_MODE, *PD3DKMDT_VIDPN_SOURCE_MODE;                                       
                                                                                                         
          typedef struct _D3DKMDT_VIDPN_TARGET_MODE              // 3 elements, 0x48 bytes (sizeof) 
          {                                                                                         
/*0x000*/     UINT32       Id;                                                                      
/*0x004*/     UINT8        _PADDING0_[0x4];                                                         
/*0x008*/     struct _D3DKMDT_VIDEO_SIGNAL_INFO VideoSignalInfo; // 7 elements, 0x38 bytes (sizeof) 
/*0x040*/     enum _D3DKMDT_MODE_PREFERENCE Preference;                                             
/*0x044*/     UINT8        _PADDING1_[0x4];                                                         
          }D3DKMDT_VIDPN_TARGET_MODE, *PD3DKMDT_VIDPN_TARGET_MODE;                                   
                                                                                                    
          typedef struct _D3DMATRIX // 16 elements, 0x40 bytes (sizeof) 
          {                                                             
/*0x000*/     FLOAT32      _11;                                         
/*0x004*/     FLOAT32      _12;                                         
/*0x008*/     FLOAT32      _13;                                         
/*0x00C*/     FLOAT32      _14;                                         
/*0x010*/     FLOAT32      _21;                                         
/*0x014*/     FLOAT32      _22;                                         
/*0x018*/     FLOAT32      _23;                                         
/*0x01C*/     FLOAT32      _24;                                         
/*0x020*/     FLOAT32      _31;                                         
/*0x024*/     FLOAT32      _32;                                         
/*0x028*/     FLOAT32      _33;                                         
/*0x02C*/     FLOAT32      _34;                                         
/*0x030*/     FLOAT32      _41;                                         
/*0x034*/     FLOAT32      _42;                                         
/*0x038*/     FLOAT32      _43;                                         
/*0x03C*/     FLOAT32      _44;                                         
          }D3DMATRIX, *PD3DMATRIX;                                      
                                                                        
          typedef struct _DEADKEY       // 3 elements, 0x8 bytes (sizeof) 
          {                                                               
/*0x000*/     ULONG32      dwBoth;                                        
/*0x004*/     WCHAR        wchComposed;                                   
/*0x006*/     UINT16       uFlags;                                        
          }DEADKEY, *PDEADKEY;                                            
                                                                          
          typedef struct _DEVICE_CAPABILITIES          // 30 elements, 0x40 bytes (sizeof) 
          {                                                                                
/*0x000*/     UINT16       Size;                                                           
/*0x002*/     UINT16       Version;                                                        
              struct                                   // 20 elements, 0x4 bytes (sizeof)  
              {                                                                            
/*0x004*/         ULONG32      DeviceD1 : 1;           // 0 BitPosition                    
/*0x004*/         ULONG32      DeviceD2 : 1;           // 1 BitPosition                    
/*0x004*/         ULONG32      LockSupported : 1;      // 2 BitPosition                    
/*0x004*/         ULONG32      EjectSupported : 1;     // 3 BitPosition                    
/*0x004*/         ULONG32      Removable : 1;          // 4 BitPosition                    
/*0x004*/         ULONG32      DockDevice : 1;         // 5 BitPosition                    
/*0x004*/         ULONG32      UniqueID : 1;           // 6 BitPosition                    
/*0x004*/         ULONG32      SilentInstall : 1;      // 7 BitPosition                    
/*0x004*/         ULONG32      RawDeviceOK : 1;        // 8 BitPosition                    
/*0x004*/         ULONG32      SurpriseRemovalOK : 1;  // 9 BitPosition                    
/*0x004*/         ULONG32      WakeFromD0 : 1;         // 10 BitPosition                   
/*0x004*/         ULONG32      WakeFromD1 : 1;         // 11 BitPosition                   
/*0x004*/         ULONG32      WakeFromD2 : 1;         // 12 BitPosition                   
/*0x004*/         ULONG32      WakeFromD3 : 1;         // 13 BitPosition                   
/*0x004*/         ULONG32      HardwareDisabled : 1;   // 14 BitPosition                   
/*0x004*/         ULONG32      NonDynamic : 1;         // 15 BitPosition                   
/*0x004*/         ULONG32      WarmEjectSupported : 1; // 16 BitPosition                   
/*0x004*/         ULONG32      NoDisplayInUI : 1;      // 17 BitPosition                   
/*0x004*/         ULONG32      Reserved1 : 1;          // 18 BitPosition                   
/*0x004*/         ULONG32      Reserved : 13;          // 19 BitPosition                   
              };                                                                           
/*0x008*/     ULONG32      Address;                                                        
/*0x00C*/     ULONG32      UINumber;                                                       
/*0x010*/     enum _DEVICE_POWER_STATE DeviceState[7];                                     
/*0x02C*/     enum _SYSTEM_POWER_STATE SystemWake;                                         
/*0x030*/     enum _DEVICE_POWER_STATE DeviceWake;                                         
/*0x034*/     ULONG32      D1Latency;                                                      
/*0x038*/     ULONG32      D2Latency;                                                      
/*0x03C*/     ULONG32      D3Latency;                                                      
          }DEVICE_CAPABILITIES, *PDEVICE_CAPABILITIES;                                     
                                                                                           
          typedef struct _KDEVICE_QUEUE_ENTRY     // 3 elements, 0x18 bytes (sizeof) 
          {                                                                          
/*0x000*/     struct _LIST_ENTRY DeviceListEntry; // 2 elements, 0x10 bytes (sizeof) 
/*0x010*/     ULONG32      SortKey;                                                  
/*0x014*/     UINT8        Inserted;                                                 
/*0x015*/     UINT8        _PADDING0_[0x3];                                          
          }KDEVICE_QUEUE_ENTRY, *PKDEVICE_QUEUE_ENTRY;                                   
                                                                                     
          typedef struct _WAIT_CONTEXT_BLOCK                // 7 elements, 0x48 bytes (sizeof) 
          {                                                                                    
/*0x000*/     struct _KDEVICE_QUEUE_ENTRY WaitQueueEntry;   // 3 elements, 0x18 bytes (sizeof) 
/*0x018*/     FUNCT_0648_0647_DeviceRoutine* DeviceRoutine;                                    
/*0x020*/     VOID*        DeviceContext;                                                      
/*0x028*/     ULONG32      NumberOfMapRegisters;                                               
/*0x02C*/     UINT8        _PADDING0_[0x4];                                                    
/*0x030*/     VOID*        DeviceObject;                                                       
/*0x038*/     VOID*        CurrentIrp;                                                         
/*0x040*/     struct _KDPC* BufferChainingDpc;                                                 
          }WAIT_CONTEXT_BLOCK, *PWAIT_CONTEXT_BLOCK;                                           
                                                                                               
          typedef struct _KDEVICE_QUEUE          // 7 elements, 0x28 bytes (sizeof) 
          {                                                                         
/*0x000*/     INT16        Type;                                                    
/*0x002*/     INT16        Size;                                                    
/*0x004*/     UINT8        _PADDING0_[0x4];                                         
/*0x008*/     struct _LIST_ENTRY DeviceListHead; // 2 elements, 0x10 bytes (sizeof) 
/*0x018*/     UINT64       Lock;                                                    
              union                              // 2 elements, 0x8 bytes (sizeof)  
              {                                                                     
/*0x020*/         UINT8        Busy;                                                
                  struct                         // 2 elements, 0x8 bytes (sizeof)  
                  {                                                                 
/*0x020*/             INT64        Reserved : 8; // 0 BitPosition                   
/*0x020*/             INT64        Hint : 56;    // 8 BitPosition                   
                  };                                                                
              };                                                                    
          }KDEVICE_QUEUE, *PKDEVICE_QUEUE;                                          
                                                                                    
          typedef struct _KDPC                                  // 9 elements, 0x40 bytes (sizeof) 
          {                                                                                        
/*0x000*/     UINT8        Type;                                                                   
/*0x001*/     UINT8        Importance;                                                             
/*0x002*/     UINT16       Number;                                                                 
/*0x004*/     UINT8        _PADDING0_[0x4];                                                        
/*0x008*/     struct _LIST_ENTRY DpcListEntry;                  // 2 elements, 0x10 bytes (sizeof) 
/*0x018*/     FUNCT_00A3_065C_DeferredRoutine* DeferredRoutine;                                    
/*0x020*/     VOID*        DeferredContext;                                                        
/*0x028*/     VOID*        SystemArgument1;                                                        
/*0x030*/     VOID*        SystemArgument2;                                                        
/*0x038*/     VOID*        DpcData;                                                                
          }KDPC, *PKDPC;                                                                           
                                                                                                   
          typedef struct _DISPATCHER_HEADER                           // 29 elements, 0x18 bytes (sizeof) 
          {                                                                                               
              union                                                   // 2 elements, 0x4 bytes (sizeof)   
              {                                                                                           
                  struct                                              // 4 elements, 0x4 bytes (sizeof)   
                  {                                                                                       
/*0x000*/             UINT8        Type;                                                                  
                      union                                           // 4 elements, 0x1 bytes (sizeof)   
                      {                                                                                   
/*0x001*/                 UINT8        TimerControlFlags;                                                 
                          struct                                      // 4 elements, 0x1 bytes (sizeof)   
                          {                                                                               
/*0x001*/                     UINT8        Absolute : 1;              // 0 BitPosition                    
/*0x001*/                     UINT8        Coalescable : 1;           // 1 BitPosition                    
/*0x001*/                     UINT8        KeepShifting : 1;          // 2 BitPosition                    
/*0x001*/                     UINT8        EncodedTolerableDelay : 5; // 3 BitPosition                    
                          };                                                                              
/*0x001*/                 UINT8        Abandoned;                                                         
/*0x001*/                 UINT8        Signalling;                                                        
                      };                                                                                  
                      union                                           // 4 elements, 0x1 bytes (sizeof)   
                      {                                                                                   
/*0x002*/                 UINT8        ThreadControlFlags;                                                
                          struct                                      // 4 elements, 0x1 bytes (sizeof)   
                          {                                                                               
/*0x002*/                     UINT8        CpuThrottled : 1;          // 0 BitPosition                    
/*0x002*/                     UINT8        CycleProfiling : 1;        // 1 BitPosition                    
/*0x002*/                     UINT8        CounterProfiling : 1;      // 2 BitPosition                    
/*0x002*/                     UINT8        Reserved : 5;              // 3 BitPosition                    
                          };                                                                              
/*0x002*/                 UINT8        Hand;                                                              
/*0x002*/                 UINT8        Size;                                                              
                      };                                                                                  
                      union                                           // 5 elements, 0x1 bytes (sizeof)   
                      {                                                                                   
/*0x003*/                 UINT8        TimerMiscFlags;                                                    
                          struct                                      // 3 elements, 0x1 bytes (sizeof)   
                          {                                                                               
/*0x003*/                     UINT8        Index : 6;                 // 0 BitPosition                    
/*0x003*/                     UINT8        Inserted : 1;              // 6 BitPosition                    
/*0x003*/                     UINT8        Expired : 1;               // 7 BitPosition                    
                          };                                                                              
/*0x003*/                 UINT8        DebugActive;                                                       
                          struct                                      // 5 elements, 0x1 bytes (sizeof)   
                          {                                                                               
/*0x003*/                     UINT8        ActiveDR7 : 1;             // 0 BitPosition                    
/*0x003*/                     UINT8        Instrumented : 1;          // 1 BitPosition                    
/*0x003*/                     UINT8        Reserved2 : 4;             // 2 BitPosition                    
/*0x003*/                     UINT8        UmsScheduled : 1;          // 6 BitPosition                    
/*0x003*/                     UINT8        UmsPrimary : 1;            // 7 BitPosition                    
                          };                                                                              
/*0x003*/                 UINT8        DpcActive;                                                         
                      };                                                                                  
                  };                                                                                      
/*0x000*/         LONG32       Lock;                                                                      
              };                                                                                          
/*0x004*/     LONG32       SignalState;                                                                   
/*0x008*/     struct _LIST_ENTRY WaitListHead;                        // 2 elements, 0x10 bytes (sizeof)  
          }DISPATCHER_HEADER, *PDISPATCHER_HEADER;                                                        
                                                                                                          
          typedef struct _KEVENT                // 1 elements, 0x18 bytes (sizeof)  
          {                                                                         
/*0x000*/     struct _DISPATCHER_HEADER Header; // 29 elements, 0x18 bytes (sizeof) 
          }KEVENT, *PKEVENT;                                                        
                                                                                    
          typedef struct _DEVICE_OBJECT                        // 25 elements, 0x150 bytes (sizeof) 
          {                                                                                         
/*0x000*/     INT16        Type;                                                                    
/*0x002*/     UINT16       Size;                                                                    
/*0x004*/     LONG32       ReferenceCount;                                                          
/*0x008*/     struct _DRIVER_OBJECT* DriverObject;                                                  
/*0x010*/     struct _DEVICE_OBJECT* NextDevice;                                                    
/*0x018*/     struct _DEVICE_OBJECT* AttachedDevice;                                                
/*0x020*/     struct _IRP* CurrentIrp;                                                              
/*0x028*/     struct _IO_TIMER* Timer;                                                              
/*0x030*/     ULONG32      Flags;                                                                   
/*0x034*/     ULONG32      Characteristics;                                                         
/*0x038*/     struct _VPB* Vpb;                                                                     
/*0x040*/     VOID*        DeviceExtension;                                                         
/*0x048*/     ULONG32      DeviceType;                                                              
/*0x04C*/     CHAR         StackSize;                                                               
/*0x04D*/     UINT8        _PADDING0_[0x3];                                                         
              union                                            // 2 elements, 0x48 bytes (sizeof)   
              {                                                                                     
/*0x050*/         struct _LIST_ENTRY ListEntry;                // 2 elements, 0x10 bytes (sizeof)   
/*0x050*/         struct _WAIT_CONTEXT_BLOCK Wcb;              // 7 elements, 0x48 bytes (sizeof)   
              }Queue;                                                                               
/*0x098*/     ULONG32      AlignmentRequirement;                                                    
/*0x09C*/     UINT8        _PADDING1_[0x4];                                                         
/*0x0A0*/     struct _KDEVICE_QUEUE DeviceQueue;               // 7 elements, 0x28 bytes (sizeof)   
/*0x0C8*/     struct _KDPC Dpc;                                // 9 elements, 0x40 bytes (sizeof)   
/*0x108*/     ULONG32      ActiveThreadCount;                                                       
/*0x10C*/     UINT8        _PADDING2_[0x4];                                                         
/*0x110*/     VOID*        SecurityDescriptor;                                                      
/*0x118*/     struct _KEVENT DeviceLock;                       // 1 elements, 0x18 bytes (sizeof)   
/*0x130*/     UINT16       SectorSize;                                                              
/*0x132*/     UINT16       Spare1;                                                                  
/*0x134*/     UINT8        _PADDING3_[0x4];                                                         
/*0x138*/     struct _DEVOBJ_EXTENSION* DeviceObjectExtension;                                      
/*0x140*/     VOID*        Reserved;                                                                
/*0x148*/     UINT8        _PADDING4_[0x8];                                                         
          }DEVICE_OBJECT, *PDEVICE_OBJECT;                                                          
                                                                                                    
typedef struct _DEVICE_OBJECT_POWER_EXTENSION // 0 elements, 0x0 bytes (sizeof) 
{                                                                               
}DEVICE_OBJECT_POWER_EXTENSION, *PDEVICE_OBJECT_POWER_EXTENSION;                                  
                                                                                
          typedef struct _DEVOBJ_EXTENSION                 // 14 elements, 0x70 bytes (sizeof) 
          {                                                                                    
/*0x000*/     INT16        Type;                                                               
/*0x002*/     UINT16       Size;                                                               
/*0x004*/     UINT8        _PADDING0_[0x4];                                                    
/*0x008*/     struct _DEVICE_OBJECT* DeviceObject;                                             
/*0x010*/     ULONG32      PowerFlags;                                                         
/*0x014*/     UINT8        _PADDING1_[0x4];                                                    
/*0x018*/     struct _DEVICE_OBJECT_POWER_EXTENSION* Dope;                                     
/*0x020*/     ULONG32      ExtensionFlags;                                                     
/*0x024*/     UINT8        _PADDING2_[0x4];                                                    
/*0x028*/     VOID*        DeviceNode;                                                         
/*0x030*/     struct _DEVICE_OBJECT* AttachedTo;                                               
/*0x038*/     LONG32       StartIoCount;                                                       
/*0x03C*/     LONG32       StartIoKey;                                                         
/*0x040*/     ULONG32      StartIoFlags;                                                       
/*0x044*/     UINT8        _PADDING3_[0x4];                                                    
/*0x048*/     struct _VPB* Vpb;                                                                
/*0x050*/     struct _LIST_ENTRY DependentList;            // 2 elements, 0x10 bytes (sizeof)  
/*0x060*/     struct _LIST_ENTRY ProviderList;             // 2 elements, 0x10 bytes (sizeof)  
          }DEVOBJ_EXTENSION, *PDEVOBJ_EXTENSION;                                               
                                                                                               
          typedef struct _DMA_ADAPTER                // 3 elements, 0x10 bytes (sizeof) 
          {                                                                             
/*0x000*/     UINT16       Version;                                                     
/*0x002*/     UINT16       Size;                                                        
/*0x004*/     UINT8        _PADDING0_[0x4];                                             
/*0x008*/     struct _DMA_OPERATIONS* DmaOperations;                                    
          }DMA_ADAPTER, *PDMA_ADAPTER;                                                  
                                                                                        
          typedef struct _DMA_OPERATIONS                                                    // 16 elements, 0x80 bytes (sizeof) 
          {                                                                                                                     
/*0x000*/     ULONG32      Size;                                                                                                
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                                     
/*0x008*/     FUNCT_00A3_0928_PutDmaAdapter_FreeAdapterChannel* PutDmaAdapter;                                                  
/*0x010*/     FUNCT_00A6_092C_AllocateCommonBuffer* AllocateCommonBuffer;                                                       
/*0x018*/     FUNCT_00A3_0932_FreeCommonBuffer* FreeCommonBuffer;                                                               
/*0x020*/     FUNCT_005B_0939_AllocateAdapterChannel* AllocateAdapterChannel;                                                   
/*0x028*/     FUNCT_0065_0940_FlushAdapterBuffers* FlushAdapterBuffers;                                                         
/*0x030*/     FUNCT_00A3_0928_PutDmaAdapter_FreeAdapterChannel* FreeAdapterChannel;                                             
/*0x038*/     FUNCT_00A3_0948_FreeMapRegisters* FreeMapRegisters;                                                               
/*0x040*/     FUNCT_006D_094D_MapTransfer* MapTransfer;                                                                         
/*0x048*/     FUNCT_0009_0955_GetDmaAlignment_ReadDmaCounter* GetDmaAlignment;                                                  
/*0x050*/     FUNCT_0009_0955_GetDmaAlignment_ReadDmaCounter* ReadDmaCounter;                                                   
/*0x058*/     FUNCT_005B_0957_GetScatterGatherList* GetScatterGatherList;                                                       
/*0x060*/     FUNCT_00A3_0971_PutScatterGatherList* PutScatterGatherList;                                                       
/*0x068*/     FUNCT_005B_0976_CalculateScatterGatherList* CalculateScatterGatherList;                                           
/*0x070*/     FUNCT_005B_097E_BuildScatterGatherList* BuildScatterGatherList;                                                   
/*0x078*/     FUNCT_005B_098A_BuildMdlFromScatterGatherList* BuildMdlFromScatterGatherList;                                     
          }DMA_OPERATIONS, *PDMA_OPERATIONS;                                                                                    
                                                                                                                                
          typedef struct _DMM_COFUNCPATHSMODALITY_SERIALIZATION // 2 elements, 0x8 bytes (sizeof) 
          {                                                                                       
/*0x000*/     UINT8        NumPathsFromSource;                                                    
/*0x001*/     UINT8        _PADDING0_[0x3];                                                       
/*0x004*/     ULONG32      PathAndTargetModeSetOffset[1];                                         
          }DMM_COFUNCPATHSMODALITY_SERIALIZATION, *PDMM_COFUNCPATHSMODALITY_SERIALIZATION;                                  
                                                                                                  
          typedef struct _DMM_COMMITVIDPNREQUEST_DIAGINFO                   // 6 elements, 0xC bytes (sizeof) 
          {                                                                                                   
/*0x000*/     enum _DMM_CLIENT_TYPE ClientType : 4;                         // 0 BitPosition                  
/*0x004*/     UINT8        _PADDING0_[4];                                                    
/*0x000*/     enum _DMM_VIDPNCHANGE_TYPE VidPnChange : 4;                   // 4 BitPosition                  
              struct                                                        // 3 elements, 0x1 bytes (sizeof) 
              {                                                                                               
/*0x004*/         UINT8        ReclaimClonedTarget : 1;                     // 0 BitPosition                  
/*0x004*/         UINT8        CleanupAfterFailedCommitVidPn : 1;           // 1 BitPosition                  
/*0x004*/         UINT8        ForceAllActiveVidPnModeListInvalidation : 1; // 2 BitPosition                  
              };                                                                                              
/*0x008*/     ULONG32      ModeChangeRequestId;                                                               
          }DMM_COMMITVIDPNREQUEST_DIAGINFO, *PDMM_COMMITVIDPNREQUEST_DIAGINFO;                                  
                                                                                                              
          typedef struct _DMM_VIDPN_SERIALIZATION                  // 3 elements, 0xC bytes (sizeof) 
          {                                                                                          
/*0x000*/     ULONG32      Size;                                                                     
/*0x004*/     UINT8        NumActiveSources;                                                         
/*0x005*/     UINT8        _PADDING0_[0x3];                                                          
/*0x008*/     ULONG32      PathsFromSourceSerializationOffsets[1];                                   
          }DMM_VIDPN_SERIALIZATION, *PDMM_VIDPN_SERIALIZATION;                                       
                                                                                                     
          typedef struct _DMM_COMMITVIDPNREQUEST_SERIALIZATION         // 3 elements, 0x1C bytes (sizeof) 
          {                                                                                               
/*0x000*/     UINT32       AffectedVidPnSourceId;                                                         
/*0x004*/     struct _DMM_COMMITVIDPNREQUEST_DIAGINFO RequestDiagInfo; // 6 elements, 0xC bytes (sizeof)  
/*0x010*/     struct _DMM_VIDPN_SERIALIZATION VidPnSerialization;      // 3 elements, 0xC bytes (sizeof)  
          }DMM_COMMITVIDPNREQUEST_SERIALIZATION, *PDMM_COMMITVIDPNREQUEST_SERIALIZATION;                                   
                                                                                                          
          typedef struct _DMM_COMMITVIDPNREQUESTSET_SERIALIZATION // 2 elements, 0x8 bytes (sizeof) 
          {                                                                                         
/*0x000*/     UINT8        NumCommitVidPnRequests;                                                  
/*0x001*/     UINT8        _PADDING0_[0x3];                                                         
/*0x004*/     ULONG32      CommitVidPnRequestOffset[1];                                             
          }DMM_COMMITVIDPNREQUESTSET_SERIALIZATION, *PDMM_COMMITVIDPNREQUESTSET_SERIALIZATION;                                  
                                                                                                    
          typedef struct _DMM_MONITOR_SERIALIZATION                  // 11 elements, 0x28 bytes (sizeof) 
          {                                                                                              
/*0x000*/     ULONG32      Size;                                                                         
/*0x004*/     UINT32       VideoPresentTargetId;                                                         
/*0x008*/     enum _D3DKMDT_MONITOR_ORIENTATION Orientation;                                             
/*0x00C*/     UINT8        IsSimulatedMonitor;                                                           
/*0x00D*/     UINT8        IsUsingDefaultProfile;                                                        
/*0x00E*/     UINT8        _PADDING0_[0x2];                                                              
/*0x010*/     enum _DMM_MODE_PRUNING_ALGORITHM ModePruningAlgorithm;                                     
/*0x014*/     enum _DEVICE_POWER_STATE MonitorPowerState;                                                
/*0x018*/     ULONG32      SourceModeSetOffset;                                                          
/*0x01C*/     ULONG32      FrequencyRangeSetOffset;                                                      
/*0x020*/     ULONG32      DescriptorSetOffset;                                                          
/*0x024*/     enum _DMM_VIDPN_MONITOR_TYPE MonitorType;                                                  
          }DMM_MONITOR_SERIALIZATION, *PDMM_MONITOR_SERIALIZATION;                                       
                                                                                                         
          typedef struct _DMM_MONITOR_SOURCE_MODE_SERIALIZATION // 2 elements, 0x68 bytes (sizeof) 
          {                                                                                        
/*0x000*/     struct _D3DKMDT_MONITOR_SOURCE_MODE Info;         // 6 elements, 0x60 bytes (sizeof) 
/*0x060*/     enum _D3DKMDT_MONITOR_TIMING_TYPE TimingType;                                        
/*0x064*/     UINT8        _PADDING0_[0x4];                                                        
          }DMM_MONITOR_SOURCE_MODE_SERIALIZATION, *PDMM_MONITOR_SOURCE_MODE_SERIALIZATION;                                   
                                                                                                   
          typedef struct _DMM_MONITORDESCRIPTOR_SERIALIZATION   // 4 elements, 0x8C bytes (sizeof) 
          {                                                                                        
/*0x000*/     UINT32       Id;                                                                     
/*0x004*/     enum _D3DKMDT_MONITOR_DESCRIPTOR_TYPE Type;                                          
/*0x008*/     enum _D3DKMDT_MONITOR_CAPABILITIES_ORIGIN Origin;                                    
/*0x00C*/     UINT8        Data[128];                                                              
          }DMM_MONITORDESCRIPTOR_SERIALIZATION, *PDMM_MONITORDESCRIPTOR_SERIALIZATION;                                   
                                                                                                   
          typedef struct _DMM_MONITORDESCRIPTORSET_SERIALIZATION                      // 2 elements, 0x90 bytes (sizeof) 
          {                                                                                                              
/*0x000*/     UINT8        NumDescriptors;                                                                               
/*0x001*/     UINT8        _PADDING0_[0x3];                                                                              
/*0x004*/     struct _DMM_MONITORDESCRIPTOR_SERIALIZATION DescriptorSerialization[1];                                    
          }DMM_MONITORDESCRIPTORSET_SERIALIZATION, *PDMM_MONITORDESCRIPTORSET_SERIALIZATION;                                   
                                                                                                                         
          typedef struct _DMM_MONITORFREQUENCYRANGESET_SERIALIZATION                  // 2 elements, 0x38 bytes (sizeof) 
          {                                                                                                              
/*0x000*/     UINT8        NumFrequencyRanges;                                                                           
/*0x001*/     UINT8        _PADDING0_[0x7];                                                                              
/*0x008*/     struct _D3DKMDT_MONITOR_FREQUENCY_RANGE FrequencyRangeSerialization[1];                                    
          }DMM_MONITORFREQUENCYRANGESET_SERIALIZATION, *PDMM_MONITORFREQUENCYRANGESET_SERIALIZATION;                                   
                                                                                                                         
          typedef struct _DMM_MONITORSOURCEMODESET_SERIALIZATION                  // 2 elements, 0x70 bytes (sizeof) 
          {                                                                                                          
/*0x000*/     UINT8        NumModes;                                                                                 
/*0x001*/     UINT8        _PADDING0_[0x7];                                                                          
/*0x008*/     struct _DMM_MONITOR_SOURCE_MODE_SERIALIZATION ModeSerialization[1];                                    
          }DMM_MONITORSOURCEMODESET_SERIALIZATION, *PDMM_MONITORSOURCEMODESET_SERIALIZATION;                                   
                                                                                                                     
          typedef struct _DMM_VIDPNPATHANDTARGETMODE_SERIALIZATION // 2 elements, 0x1B0 bytes (sizeof)  
          {                                                                                             
/*0x000*/     struct _D3DKMDT_VIDPN_PRESENT_PATH PathInfo;         // 11 elements, 0x168 bytes (sizeof) 
/*0x168*/     struct _D3DKMDT_VIDPN_TARGET_MODE TargetMode;        // 3 elements, 0x48 bytes (sizeof)   
          }DMM_VIDPNPATHANDTARGETMODE_SERIALIZATION, *PDMM_VIDPNPATHANDTARGETMODE_SERIALIZATION;                                     
                                                                                                        
          typedef struct _DMM_VIDPNTARGETMODESET_SERIALIZATION        // 2 elements, 0x50 bytes (sizeof) 
          {                                                                                              
/*0x000*/     UINT8        NumModes;                                                                     
/*0x001*/     UINT8        _PADDING0_[0x7];                                                              
/*0x008*/     struct _D3DKMDT_VIDPN_TARGET_MODE ModeSerialization[1];                                    
          }DMM_VIDPNTARGETMODESET_SERIALIZATION, *PDMM_VIDPNTARGETMODESET_SERIALIZATION;                                   
                                                                                                         
          typedef struct _DMM_VIDPNPATHANDTARGETMODESET_SERIALIZATION     // 2 elements, 0x1B8 bytes (sizeof)  
          {                                                                                                    
/*0x000*/     struct _D3DKMDT_VIDPN_PRESENT_PATH PathInfo;                // 11 elements, 0x168 bytes (sizeof) 
/*0x168*/     struct _DMM_VIDPNTARGETMODESET_SERIALIZATION TargetModeSet; // 2 elements, 0x50 bytes (sizeof)   
          }DMM_VIDPNPATHANDTARGETMODESET_SERIALIZATION, *PDMM_VIDPNPATHANDTARGETMODESET_SERIALIZATION;                                     
                                                                                                               
          typedef struct _DMM_VIDPNPATHSFROMSOURCE_SERIALIZATION                                  // 3 elements, 0x1E0 bytes (sizeof) 
          {                                                                                                                           
/*0x000*/     struct _D3DKMDT_VIDPN_SOURCE_MODE SourceMode;                                       // 3 elements, 0x28 bytes (sizeof)  
/*0x028*/     UINT8        NumPathsFromSource;                                                                                        
/*0x029*/     UINT8        _PADDING0_[0x7];                                                                                           
/*0x030*/     struct _DMM_VIDPNPATHANDTARGETMODE_SERIALIZATION PathAndTargetModeSerialization[1];                                     
          }DMM_VIDPNPATHSFROMSOURCE_SERIALIZATION, *PDMM_VIDPNPATHSFROMSOURCE_SERIALIZATION;                                          
                                                                                                                                      
          typedef struct _DMM_VIDPNSET_SERIALIZATION // 2 elements, 0x8 bytes (sizeof) 
          {                                                                            
/*0x000*/     UINT8        NumVidPns;                                                  
/*0x001*/     UINT8        _PADDING0_[0x3];                                            
/*0x004*/     ULONG32      VidPnOffset[1];                                             
          }DMM_VIDPNSET_SERIALIZATION, *PDMM_VIDPNSET_SERIALIZATION;                                  
                                                                                       
          typedef struct _DRIVER_EXTENSION           // 4 elements, 0x28 bytes (sizeof) 
          {                                                                             
/*0x000*/     struct _DRIVER_OBJECT* DriverObject;                                      
/*0x008*/     FUNCT_005B_0505_AddDevice* AddDevice;                                     
/*0x010*/     ULONG32      Count;                                                       
/*0x014*/     UINT8        _PADDING0_[0x4];                                             
/*0x018*/     struct _UNICODE_STRING ServiceKeyName; // 3 elements, 0x10 bytes (sizeof) 
          }DRIVER_EXTENSION, *PDRIVER_EXTENSION;                                        
                                                                                        
          typedef struct _DRIVER_OBJECT                                   // 15 elements, 0x150 bytes (sizeof) 
          {                                                                                                    
/*0x000*/     INT16        Type;                                                                               
/*0x002*/     INT16        Size;                                                                               
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                    
/*0x008*/     struct _DEVICE_OBJECT* DeviceObject;                                                             
/*0x010*/     ULONG32      Flags;                                                                              
/*0x014*/     UINT8        _PADDING1_[0x4];                                                                    
/*0x018*/     VOID*        DriverStart;                                                                        
/*0x020*/     ULONG32      DriverSize;                                                                         
/*0x024*/     UINT8        _PADDING2_[0x4];                                                                    
/*0x028*/     VOID*        DriverSection;                                                                      
/*0x030*/     struct _DRIVER_EXTENSION* DriverExtension;                                                       
/*0x038*/     struct _UNICODE_STRING DriverName;                          // 3 elements, 0x10 bytes (sizeof)   
/*0x048*/     struct _UNICODE_STRING* HardwareDatabase;                                                        
/*0x050*/     struct _FAST_IO_DISPATCH* FastIoDispatch;                                                        
/*0x058*/     FUNCT_005B_062C_DriverInit* DriverInit;                                                          
/*0x060*/     FUNCT_00A3_04CF_CancelRoutine_DriverStartIo* DriverStartIo;                                      
/*0x068*/     FUNCT_00A3_0630_DriverUnload* DriverUnload;                                                      
/*0x070*/     FUNCT_005B_0634_MajorFunction* MajorFunction[28];                                                
          }DRIVER_OBJECT, *PDRIVER_OBJECT;                                                                     
                                                                                                               
          typedef struct _DXGK_DIAG_HEADER  // 7 elements, 0x30 bytes (sizeof) 
          {                                                                    
/*0x000*/     enum _DXGK_DIAG_TYPE Type;                                       
/*0x004*/     UINT32       Size;                                               
/*0x008*/     UINT64       LogTimestamp;                                       
/*0x010*/     UINT8        ProcessName[16];                                    
/*0x020*/     UINT64       ThreadId;                                           
/*0x028*/     UINT32       Index;                                              
/*0x02C*/     UINT32       WdLogIdx;                                           
          }DXGK_DIAG_HEADER, *PDXGK_DIAG_HEADER;                                   
                                                                               
          typedef struct _DXGK_DIAG_CODE_POINT_PACKET        // 5 elements, 0x40 bytes (sizeof) 
          {                                                                                     
/*0x000*/     struct _DXGK_DIAG_HEADER Header;               // 7 elements, 0x30 bytes (sizeof) 
/*0x030*/     enum _DXGK_DIAG_CODE_POINT_TYPE CodePointType;                                    
/*0x034*/     UINT32       Param1;                                                              
/*0x038*/     UINT32       Param2;                                                              
/*0x03C*/     UINT32       Param3;                                                              
          }DXGK_DIAG_CODE_POINT_PACKET, *PDXGK_DIAG_CODE_POINT_PACKET;                                   
                                                                                                
typedef struct _ECP_LIST // 0 elements, 0x0 bytes (sizeof) 
{                                                          
}ECP_LIST, *PECP_LIST;                                     
                                                           
typedef struct _EJOB // 0 elements, 0x0 bytes (sizeof) 
{                                                      
}EJOB, *PEJOB;                                         
                                                       
typedef struct _EPROCESS // 0 elements, 0x0 bytes (sizeof) 
{                                                          
}EPROCESS, *PEPROCESS;                                     
                                                           
          typedef struct _OWNER_ENTRY                     // 5 elements, 0x10 bytes (sizeof) 
          {                                                                                  
/*0x000*/     UINT64       OwnerThread;                                                      
              union                                       // 2 elements, 0x8 bytes (sizeof)  
              {                                                                              
                  struct                                  // 3 elements, 0x4 bytes (sizeof)  
                  {                                                                          
/*0x008*/             ULONG32      IoPriorityBoosted : 1; // 0 BitPosition                   
/*0x008*/             ULONG32      OwnerReferenced : 1;   // 1 BitPosition                   
/*0x008*/             ULONG32      OwnerCount : 30;       // 2 BitPosition                   
                  };                                                                         
/*0x008*/         ULONG32      TableSize;                                                    
              };                                                                             
          }OWNER_ENTRY, *POWNER_ENTRY;                                                       
                                                                                             
          typedef struct _ERESOURCE                   // 15 elements, 0x68 bytes (sizeof) 
          {                                                                               
/*0x000*/     struct _LIST_ENTRY SystemResourcesList; // 2 elements, 0x10 bytes (sizeof)  
/*0x010*/     struct _OWNER_ENTRY* OwnerTable;                                            
/*0x018*/     INT16        ActiveCount;                                                   
/*0x01A*/     UINT16       Flag;                                                          
/*0x01C*/     UINT8        _PADDING0_[0x4];                                               
/*0x020*/     struct _KSEMAPHORE* SharedWaiters;                                          
/*0x028*/     struct _KEVENT* ExclusiveWaiters;                                           
/*0x030*/     struct _OWNER_ENTRY OwnerEntry;         // 5 elements, 0x10 bytes (sizeof)  
/*0x040*/     ULONG32      ActiveEntries;                                                 
/*0x044*/     ULONG32      ContentionCount;                                               
/*0x048*/     ULONG32      NumberOfSharedWaiters;                                         
/*0x04C*/     ULONG32      NumberOfExclusiveWaiters;                                      
/*0x050*/     VOID*        Reserved2;                                                     
              union                                   // 2 elements, 0x8 bytes (sizeof)   
              {                                                                           
/*0x058*/         VOID*        Address;                                                   
/*0x058*/         UINT64       CreatorBackTraceIndex;                                     
              };                                                                          
/*0x060*/     UINT64       SpinLock;                                                      
          }ERESOURCE, *PERESOURCE;                                                        
                                                                                          
typedef struct _ETHREAD // 0 elements, 0x0 bytes (sizeof) 
{                                                         
}ETHREAD, *PETHREAD;                                      
                                                          
          typedef struct _EVENT_DATA_DESCRIPTOR // 3 elements, 0x10 bytes (sizeof) 
          {                                                                        
/*0x000*/     UINT64       Ptr;                                                    
/*0x008*/     ULONG32      Size;                                                   
/*0x00C*/     ULONG32      Reserved;                                               
          }EVENT_DATA_DESCRIPTOR, *PEVENT_DATA_DESCRIPTOR;                                   
                                                                                   
          typedef struct _EVENT_DESCRIPTOR // 7 elements, 0x10 bytes (sizeof) 
          {                                                                   
/*0x000*/     UINT16       Id;                                                
/*0x002*/     UINT8        Version;                                           
/*0x003*/     UINT8        Channel;                                           
/*0x004*/     UINT8        Level;                                             
/*0x005*/     UINT8        Opcode;                                            
/*0x006*/     UINT16       Task;                                              
/*0x008*/     UINT64       Keyword;                                           
          }EVENT_DESCRIPTOR, *PEVENT_DESCRIPTOR;                                   
                                                                              
          typedef struct _EX_PUSH_LOCK                 // 7 elements, 0x8 bytes (sizeof) 
          {                                                                              
              union                                    // 3 elements, 0x8 bytes (sizeof) 
              {                                                                          
                  struct                               // 5 elements, 0x8 bytes (sizeof) 
                  {                                                                      
/*0x000*/             UINT64       Locked : 1;         // 0 BitPosition                  
/*0x000*/             UINT64       Waiting : 1;        // 1 BitPosition                  
/*0x000*/             UINT64       Waking : 1;         // 2 BitPosition                  
/*0x000*/             UINT64       MultipleShared : 1; // 3 BitPosition                  
/*0x000*/             UINT64       Shared : 60;        // 4 BitPosition                  
                  };                                                                     
/*0x000*/         UINT64       Value;                                                    
/*0x000*/         VOID*        Ptr;                                                      
              };                                                                         
          }EX_PUSH_LOCK, *PEX_PUSH_LOCK;                                                 
                                                                                         
          typedef struct _EX_PUSH_LOCK_CACHE_AWARE // 1 elements, 0x8 bytes (sizeof) 
          {                                                                          
/*0x000*/     struct _EX_PUSH_LOCK* Locks[1];                                        
          }EX_PUSH_LOCK_CACHE_AWARE, *PEX_PUSH_LOCK_CACHE_AWARE;                                  
                                                                                     
          typedef struct _EXCEPTION_RECORD               // 6 elements, 0x98 bytes (sizeof) 
          {                                                                                 
/*0x000*/     LONG32       ExceptionCode;                                                   
/*0x004*/     ULONG32      ExceptionFlags;                                                  
/*0x008*/     struct _EXCEPTION_RECORD* ExceptionRecord;                                    
/*0x010*/     VOID*        ExceptionAddress;                                                
/*0x018*/     ULONG32      NumberParameters;                                                
/*0x01C*/     UINT8        _PADDING0_[0x4];                                                 
/*0x020*/     UINT64       ExceptionInformation[15];                                        
          }EXCEPTION_RECORD, *PEXCEPTION_RECORD;                                            
                                                                                            
          typedef struct _EXCEPTION_REGISTRATION_RECORD    // 2 elements, 0x10 bytes (sizeof) 
          {                                                                                   
/*0x000*/     struct _EXCEPTION_REGISTRATION_RECORD* Next;                                    
/*0x008*/     FUNCT_0160_015F_Handler* Handler;                                               
          }EXCEPTION_REGISTRATION_RECORD, *PEXCEPTION_REGISTRATION_RECORD;                                   
                                                                                              
          typedef struct _FAST_IO_DISPATCH                                                                                // 28 elements, 0xE0 bytes (sizeof) 
          {                                                                                                                                                   
/*0x000*/     ULONG32      SizeOfFastIoDispatch;                                                                                                              
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                                                                   
/*0x008*/     FUNCT_0065_0528_FastIoCheckIfPossible* FastIoCheckIfPossible;                                                                                   
/*0x010*/     FUNCT_0065_0568_FastIoRead_FastIoWrite* FastIoRead;                                                                                             
/*0x018*/     FUNCT_0065_0568_FastIoRead_FastIoWrite* FastIoWrite;                                                                                            
/*0x020*/     FUNCT_0065_0572_FastIoQueryBasicInfo* FastIoQueryBasicInfo;                                                                                     
/*0x028*/     FUNCT_0065_0580_FastIoQueryStandardInfo* FastIoQueryStandardInfo;                                                                               
/*0x030*/     FUNCT_0065_058E_FastIoLock* FastIoLock;                                                                                                         
/*0x038*/     FUNCT_0065_0599_FastIoUnlockSingle* FastIoUnlockSingle;                                                                                         
/*0x040*/     FUNCT_0065_05A2_FastIoUnlockAll* FastIoUnlockAll;                                                                                               
/*0x048*/     FUNCT_0065_05A8_FastIoUnlockAllByKey* FastIoUnlockAllByKey;                                                                                     
/*0x050*/     FUNCT_0065_05AF_FastIoDeviceControl* FastIoDeviceControl;                                                                                       
/*0x058*/     FUNCT_00A3_05BA_AcquireFileForNtCreateSection_ReleaseFileForNtCreateSection* AcquireFileForNtCreateSection;                                     
/*0x060*/     FUNCT_00A3_05BA_AcquireFileForNtCreateSection_ReleaseFileForNtCreateSection* ReleaseFileForNtCreateSection;                                     
/*0x068*/     FUNCT_00A3_05BD_FastIoDetachDevice* FastIoDetachDevice;                                                                                         
/*0x070*/     FUNCT_0065_05C1_FastIoQueryNetworkOpenInfo* FastIoQueryNetworkOpenInfo;                                                                         
/*0x078*/     FUNCT_005B_05D1_AcquireForModWrite* AcquireForModWrite;                                                                                         
/*0x080*/     FUNCT_0065_05F4_MdlRead_PrepareMdlWrite* MdlRead;                                                                                               
/*0x088*/     FUNCT_0065_05FE_MdlReadComplete_MdlReadCompleteCompressed* MdlReadComplete;                                                                     
/*0x090*/     FUNCT_0065_05F4_MdlRead_PrepareMdlWrite* PrepareMdlWrite;                                                                                       
/*0x098*/     FUNCT_0065_0603_MdlWriteComplete_MdlWriteCompleteCompressed* MdlWriteComplete;                                                                  
/*0x0A0*/     FUNCT_0065_0609_FastIoReadCompressed_FastIoWriteCompressed* FastIoReadCompressed;                                                               
/*0x0A8*/     FUNCT_0065_0609_FastIoReadCompressed_FastIoWriteCompressed* FastIoWriteCompressed;                                                              
/*0x0B0*/     FUNCT_0065_05FE_MdlReadComplete_MdlReadCompleteCompressed* MdlReadCompleteCompressed;                                                           
/*0x0B8*/     FUNCT_0065_0603_MdlWriteComplete_MdlWriteCompleteCompressed* MdlWriteCompleteCompressed;                                                        
/*0x0C0*/     FUNCT_0065_061E_FastIoQueryOpen* FastIoQueryOpen;                                                                                               
/*0x0C8*/     FUNCT_005B_0623_ReleaseForModWrite* ReleaseForModWrite;                                                                                         
/*0x0D0*/     FUNCT_005B_0628_AcquireForCcFlush_ReleaseForCcFlush* AcquireForCcFlush;                                                                         
/*0x0D8*/     FUNCT_005B_0628_AcquireForCcFlush_ReleaseForCcFlush* ReleaseForCcFlush;                                                                         
          }FAST_IO_DISPATCH, *PFAST_IO_DISPATCH;                                                                                                              
                                                                                                                                                              
          typedef struct _FAST_MUTEX        // 5 elements, 0x38 bytes (sizeof) 
          {                                                                    
/*0x000*/     LONG32       Count;                                              
/*0x004*/     UINT8        _PADDING0_[0x4];                                    
/*0x008*/     struct _KTHREAD* Owner;                                          
/*0x010*/     ULONG32      Contention;                                         
/*0x014*/     UINT8        _PADDING1_[0x4];                                    
/*0x018*/     struct _KEVENT Event;         // 1 elements, 0x18 bytes (sizeof) 
/*0x030*/     ULONG32      OldIrql;                                            
/*0x034*/     UINT8        _PADDING2_[0x4];                                    
          }FAST_MUTEX, *PFAST_MUTEX;                                           
                                                                               
          typedef struct _FILE_BASIC_INFORMATION   // 5 elements, 0x28 bytes (sizeof) 
          {                                                                           
/*0x000*/     union _LARGE_INTEGER CreationTime;   // 4 elements, 0x8 bytes (sizeof)  
/*0x008*/     union _LARGE_INTEGER LastAccessTime; // 4 elements, 0x8 bytes (sizeof)  
/*0x010*/     union _LARGE_INTEGER LastWriteTime;  // 4 elements, 0x8 bytes (sizeof)  
/*0x018*/     union _LARGE_INTEGER ChangeTime;     // 4 elements, 0x8 bytes (sizeof)  
/*0x020*/     ULONG32      FileAttributes;                                            
/*0x024*/     UINT8        _PADDING0_[0x4];                                           
          }FILE_BASIC_INFORMATION, *PFILE_BASIC_INFORMATION;                                   
                                                                                      
          typedef struct _FILE_NETWORK_OPEN_INFORMATION // 7 elements, 0x38 bytes (sizeof) 
          {                                                                                
/*0x000*/     union _LARGE_INTEGER CreationTime;        // 4 elements, 0x8 bytes (sizeof)  
/*0x008*/     union _LARGE_INTEGER LastAccessTime;      // 4 elements, 0x8 bytes (sizeof)  
/*0x010*/     union _LARGE_INTEGER LastWriteTime;       // 4 elements, 0x8 bytes (sizeof)  
/*0x018*/     union _LARGE_INTEGER ChangeTime;          // 4 elements, 0x8 bytes (sizeof)  
/*0x020*/     union _LARGE_INTEGER AllocationSize;      // 4 elements, 0x8 bytes (sizeof)  
/*0x028*/     union _LARGE_INTEGER EndOfFile;           // 4 elements, 0x8 bytes (sizeof)  
/*0x030*/     ULONG32      FileAttributes;                                                 
/*0x034*/     UINT8        _PADDING0_[0x4];                                                
          }FILE_NETWORK_OPEN_INFORMATION, *PFILE_NETWORK_OPEN_INFORMATION;                                   
                                                                                           
          typedef struct _FILE_OBJECT                                // 30 elements, 0xD8 bytes (sizeof) 
          {                                                                                              
/*0x000*/     INT16        Type;                                                                         
/*0x002*/     INT16        Size;                                                                         
/*0x004*/     UINT8        _PADDING0_[0x4];                                                              
/*0x008*/     struct _DEVICE_OBJECT* DeviceObject;                                                       
/*0x010*/     struct _VPB* Vpb;                                                                          
/*0x018*/     VOID*        FsContext;                                                                    
/*0x020*/     VOID*        FsContext2;                                                                   
/*0x028*/     struct _SECTION_OBJECT_POINTERS* SectionObjectPointer;                                     
/*0x030*/     VOID*        PrivateCacheMap;                                                              
/*0x038*/     LONG32       FinalStatus;                                                                  
/*0x03C*/     UINT8        _PADDING1_[0x4];                                                              
/*0x040*/     struct _FILE_OBJECT* RelatedFileObject;                                                    
/*0x048*/     UINT8        LockOperation;                                                                
/*0x049*/     UINT8        DeletePending;                                                                
/*0x04A*/     UINT8        ReadAccess;                                                                   
/*0x04B*/     UINT8        WriteAccess;                                                                  
/*0x04C*/     UINT8        DeleteAccess;                                                                 
/*0x04D*/     UINT8        SharedRead;                                                                   
/*0x04E*/     UINT8        SharedWrite;                                                                  
/*0x04F*/     UINT8        SharedDelete;                                                                 
/*0x050*/     ULONG32      Flags;                                                                        
/*0x054*/     UINT8        _PADDING2_[0x4];                                                              
/*0x058*/     struct _UNICODE_STRING FileName;                       // 3 elements, 0x10 bytes (sizeof)  
/*0x068*/     union _LARGE_INTEGER CurrentByteOffset;                // 4 elements, 0x8 bytes (sizeof)   
/*0x070*/     ULONG32      Waiters;                                                                      
/*0x074*/     ULONG32      Busy;                                                                         
/*0x078*/     VOID*        LastLock;                                                                     
/*0x080*/     struct _KEVENT Lock;                                   // 1 elements, 0x18 bytes (sizeof)  
/*0x098*/     struct _KEVENT Event;                                  // 1 elements, 0x18 bytes (sizeof)  
/*0x0B0*/     struct _IO_COMPLETION_CONTEXT* CompletionContext;                                          
/*0x0B8*/     UINT64       IrpListLock;                                                                  
/*0x0C0*/     struct _LIST_ENTRY IrpList;                            // 2 elements, 0x10 bytes (sizeof)  
/*0x0D0*/     VOID*        FileObjectExtension;                                                          
          }FILE_OBJECT, *PFILE_OBJECT;                                                                   
                                                                                                         
          typedef struct _FILE_STANDARD_INFORMATION // 5 elements, 0x18 bytes (sizeof) 
          {                                                                            
/*0x000*/     union _LARGE_INTEGER AllocationSize;  // 4 elements, 0x8 bytes (sizeof)  
/*0x008*/     union _LARGE_INTEGER EndOfFile;       // 4 elements, 0x8 bytes (sizeof)  
/*0x010*/     ULONG32      NumberOfLinks;                                              
/*0x014*/     UINT8        DeletePending;                                              
/*0x015*/     UINT8        Directory;                                                  
/*0x016*/     UINT8        _PADDING0_[0x2];                                            
          }FILE_STANDARD_INFORMATION, *PFILE_STANDARD_INFORMATION;                                   
                                                                                       
typedef struct _FLS_CALLBACK_INFO // 0 elements, 0x0 bytes (sizeof) 
{                                                                   
}FLS_CALLBACK_INFO, *PFLS_CALLBACK_INFO;                                  
                                                                    
          typedef struct _GDI_TEB_BATCH     // 3 elements, 0x4E8 bytes (sizeof) 
          {                                                                     
/*0x000*/     ULONG32      Offset;                                              
/*0x004*/     UINT8        _PADDING0_[0x4];                                     
/*0x008*/     UINT64       HDC;                                                 
/*0x010*/     ULONG32      Buffer[310];                                         
          }GDI_TEB_BATCH, *PGDI_TEB_BATCH;                                      
                                                                                
          typedef union _SLIST_HEADER              // 5 elements, 0x10 bytes (sizeof) 
          {                                                                           
              struct                               // 2 elements, 0x10 bytes (sizeof) 
              {                                                                       
/*0x000*/         UINT64       Alignment;                                             
/*0x008*/         UINT64       Region;                                                
              };                                                                      
              struct                               // 7 elements, 0x10 bytes (sizeof) 
              {                                                                       
                  struct                           // 3 elements, 0x8 bytes (sizeof)  
                  {                                                                   
/*0x000*/             UINT64       Depth : 16;     // 0 BitPosition                   
/*0x000*/             UINT64       Sequence : 9;   // 16 BitPosition                  
/*0x000*/             UINT64       NextEntry : 39; // 25 BitPosition                  
                  };                                                                  
                  struct                           // 4 elements, 0x8 bytes (sizeof)  
                  {                                                                   
/*0x008*/             UINT64       HeaderType : 1; // 0 BitPosition                   
/*0x008*/             UINT64       Init : 1;       // 1 BitPosition                   
/*0x008*/             UINT64       Reserved : 59;  // 2 BitPosition                   
/*0x008*/             UINT64       Region : 3;     // 61 BitPosition                  
                  };                                                                  
              }Header8;                                                               
              struct                               // 6 elements, 0x10 bytes (sizeof) 
              {                                                                       
                  struct                           // 2 elements, 0x8 bytes (sizeof)  
                  {                                                                   
/*0x000*/             UINT64       Depth : 16;     // 0 BitPosition                   
/*0x000*/             UINT64       Sequence : 48;  // 16 BitPosition                  
                  };                                                                  
                  struct                           // 4 elements, 0x8 bytes (sizeof)  
                  {                                                                   
/*0x008*/             UINT64       HeaderType : 1; // 0 BitPosition                   
/*0x008*/             UINT64       Init : 1;       // 1 BitPosition                   
/*0x008*/             UINT64       Reserved : 2;   // 2 BitPosition                   
/*0x008*/             UINT64       NextEntry : 60; // 4 BitPosition                   
                  };                                                                  
              }Header16;                                                              
              struct                               // 5 elements, 0x10 bytes (sizeof) 
              {                                                                       
                  struct                           // 2 elements, 0x8 bytes (sizeof)  
                  {                                                                   
/*0x000*/             UINT64       Depth : 16;     // 0 BitPosition                   
/*0x000*/             UINT64       Sequence : 48;  // 16 BitPosition                  
                  };                                                                  
                  struct                           // 3 elements, 0x8 bytes (sizeof)  
                  {                                                                   
/*0x008*/             UINT64       HeaderType : 1; // 0 BitPosition                   
/*0x008*/             UINT64       Reserved : 3;   // 1 BitPosition                   
/*0x008*/             UINT64       NextEntry : 60; // 4 BitPosition                   
                  };                                                                  
              }HeaderX64;                                                             
          }SLIST_HEADER, *PSLIST_HEADER;                                              
                                                                                      
          typedef struct _SINGLE_LIST_ENTRY    // 1 elements, 0x8 bytes (sizeof) 
          {                                                                      
/*0x000*/     struct _SINGLE_LIST_ENTRY* Next;                                   
          }SINGLE_LIST_ENTRY, *PSINGLE_LIST_ENTRY;                                  
                                                                                 
          typedef struct _GENERAL_LOOKASIDE                                                                   // 22 elements, 0x80 bytes (sizeof) 
          {                                                                                                                                       
              union                                                                                           // 2 elements, 0x10 bytes (sizeof)  
              {                                                                                                                                   
/*0x000*/         union _SLIST_HEADER ListHead;                                                               // 5 elements, 0x10 bytes (sizeof)  
/*0x000*/         struct _SINGLE_LIST_ENTRY SingleListHead;                                                   // 1 elements, 0x8 bytes (sizeof)   
              };                                                                                                                                  
/*0x010*/     UINT16       Depth;                                                                                                                 
/*0x012*/     UINT16       MaximumDepth;                                                                                                          
/*0x014*/     ULONG32      TotalAllocates;                                                                                                        
              union                                                                                           // 2 elements, 0x4 bytes (sizeof)   
              {                                                                                                                                   
/*0x018*/         ULONG32      AllocateMisses;                                                                                                    
/*0x018*/         ULONG32      AllocateHits;                                                                                                      
              };                                                                                                                                  
/*0x01C*/     ULONG32      TotalFrees;                                                                                                            
              union                                                                                           // 2 elements, 0x4 bytes (sizeof)   
              {                                                                                                                                   
/*0x020*/         ULONG32      FreeMisses;                                                                                                        
/*0x020*/         ULONG32      FreeHits;                                                                                                          
              };                                                                                                                                  
/*0x024*/     enum _POOL_TYPE Type;                                                                                                               
/*0x028*/     ULONG32      Tag;                                                                                                                   
/*0x02C*/     ULONG32      Size;                                                                                                                  
              union                                                                                           // 2 elements, 0x8 bytes (sizeof)   
              {                                                                                                                                   
/*0x030*/         FUNCT_00A6_0458_AllocateEx* AllocateEx;                                                                                         
/*0x030*/         FUNCT_00A6_045F_Allocate* Allocate;                                                                                             
              };                                                                                                                                  
              union                                                                                           // 2 elements, 0x8 bytes (sizeof)   
              {                                                                                                                                   
/*0x038*/         FUNCT_00A3_0464_FreeEx* FreeEx;                                                                                                 
/*0x038*/         FUNCT_00A3_0468_Free_InterfaceReference_InterfaceDereference_DeleteProcedure_pfnFree* Free;                                     
              };                                                                                                                                  
/*0x040*/     struct _LIST_ENTRY ListEntry;                                                                   // 2 elements, 0x10 bytes (sizeof)  
/*0x050*/     ULONG32      LastTotalAllocates;                                                                                                    
              union                                                                                           // 2 elements, 0x4 bytes (sizeof)   
              {                                                                                                                                   
/*0x054*/         ULONG32      LastAllocateMisses;                                                                                                
/*0x054*/         ULONG32      LastAllocateHits;                                                                                                  
              };                                                                                                                                  
/*0x058*/     ULONG32      Future[2];                                                                                                             
/*0x060*/     UINT8        _PADDING0_[0x20];                                                                                                      
          }GENERAL_LOOKASIDE, *PGENERAL_LOOKASIDE;                                                                                                
                                                                                                                                                  
          typedef struct _GENERAL_LOOKASIDE_POOL                                                              // 22 elements, 0x60 bytes (sizeof) 
          {                                                                                                                                       
              union                                                                                           // 2 elements, 0x10 bytes (sizeof)  
              {                                                                                                                                   
/*0x000*/         union _SLIST_HEADER ListHead;                                                               // 5 elements, 0x10 bytes (sizeof)  
/*0x000*/         struct _SINGLE_LIST_ENTRY SingleListHead;                                                   // 1 elements, 0x8 bytes (sizeof)   
              };                                                                                                                                  
/*0x010*/     UINT16       Depth;                                                                                                                 
/*0x012*/     UINT16       MaximumDepth;                                                                                                          
/*0x014*/     ULONG32      TotalAllocates;                                                                                                        
              union                                                                                           // 2 elements, 0x4 bytes (sizeof)   
              {                                                                                                                                   
/*0x018*/         ULONG32      AllocateMisses;                                                                                                    
/*0x018*/         ULONG32      AllocateHits;                                                                                                      
              };                                                                                                                                  
/*0x01C*/     ULONG32      TotalFrees;                                                                                                            
              union                                                                                           // 2 elements, 0x4 bytes (sizeof)   
              {                                                                                                                                   
/*0x020*/         ULONG32      FreeMisses;                                                                                                        
/*0x020*/         ULONG32      FreeHits;                                                                                                          
              };                                                                                                                                  
/*0x024*/     enum _POOL_TYPE Type;                                                                                                               
/*0x028*/     ULONG32      Tag;                                                                                                                   
/*0x02C*/     ULONG32      Size;                                                                                                                  
              union                                                                                           // 2 elements, 0x8 bytes (sizeof)   
              {                                                                                                                                   
/*0x030*/         FUNCT_00A6_0458_AllocateEx* AllocateEx;                                                                                         
/*0x030*/         FUNCT_00A6_045F_Allocate* Allocate;                                                                                             
              };                                                                                                                                  
              union                                                                                           // 2 elements, 0x8 bytes (sizeof)   
              {                                                                                                                                   
/*0x038*/         FUNCT_00A3_0464_FreeEx* FreeEx;                                                                                                 
/*0x038*/         FUNCT_00A3_0468_Free_InterfaceReference_InterfaceDereference_DeleteProcedure_pfnFree* Free;                                     
              };                                                                                                                                  
/*0x040*/     struct _LIST_ENTRY ListEntry;                                                                   // 2 elements, 0x10 bytes (sizeof)  
/*0x050*/     ULONG32      LastTotalAllocates;                                                                                                    
              union                                                                                           // 2 elements, 0x4 bytes (sizeof)   
              {                                                                                                                                   
/*0x054*/         ULONG32      LastAllocateMisses;                                                                                                
/*0x054*/         ULONG32      LastAllocateHits;                                                                                                  
              };                                                                                                                                  
/*0x058*/     ULONG32      Future[2];                                                                                                             
          }GENERAL_LOOKASIDE_POOL, *PGENERAL_LOOKASIDE_POOL;                                                                                      
                                                                                                                                                  
          typedef struct _HANDLEENTRY       // 5 elements, 0x18 bytes (sizeof) 
          {                                                                    
/*0x000*/     struct _HEAD* phead;                                             
/*0x008*/     VOID*        pOwner;                                             
/*0x010*/     UINT8        bType;                                              
/*0x011*/     UINT8        bFlags;                                             
/*0x012*/     UINT16       wUniq;                                              
/*0x014*/     UINT8        _PADDING0_[0x4];                                    
          }HANDLEENTRY, *PHANDLEENTRY;                                         
                                                                               
          typedef struct _HBITMAP__ // 1 elements, 0x4 bytes (sizeof) 
          {                                                           
/*0x000*/     INT32        unused;                                    
          }HBITMAP__, *PHBITMAP__;                                    
                                                                      
          typedef struct _HBRUSH__ // 1 elements, 0x4 bytes (sizeof) 
          {                                                          
/*0x000*/     INT32        unused;                                   
          }HBRUSH__, *PHBRUSH__;                                     
                                                                     
          typedef struct _HDC__    // 1 elements, 0x4 bytes (sizeof) 
          {                                                          
/*0x000*/     INT32        unused;                                   
          }HDC__, *PHDC__;                                           
                                                                     
          typedef struct _HDESK__  // 1 elements, 0x4 bytes (sizeof) 
          {                                                          
/*0x000*/     INT32        unused;                                   
          }HDESK__, *PHDESK__;                                       
                                                                     
          typedef struct _HEAD              // 2 elements, 0x10 bytes (sizeof) 
          {                                                                    
/*0x000*/     VOID*        h;                                                  
/*0x008*/     ULONG32      cLockObj;                                           
/*0x00C*/     UINT8        _PADDING0_[0x4];                                    
          }HEAD, *PHEAD;                                                       
                                                                               
          typedef struct _HFONT__  // 1 elements, 0x4 bytes (sizeof) 
          {                                                          
/*0x000*/     INT32        unused;                                   
          }HFONT__, *PHFONT__;                                       
                                                                     
          typedef struct _HGESTUREINFO__ // 1 elements, 0x4 bytes (sizeof) 
          {                                                                
/*0x000*/     INT32        unused;                                         
          }HGESTUREINFO__, *PHGESTUREINFO__;                                  
                                                                           
          typedef struct _HICON__  // 1 elements, 0x4 bytes (sizeof) 
          {                                                          
/*0x000*/     INT32        unused;                                   
          }HICON__, *PHICON__;                                       
                                                                     
          typedef struct _HIMC__   // 1 elements, 0x4 bytes (sizeof) 
          {                                                          
/*0x000*/     INT32        unused;                                   
          }HIMC__, *PHIMC__;                                         
                                                                     
          typedef struct _HKL__    // 1 elements, 0x4 bytes (sizeof) 
          {                                                          
/*0x000*/     INT32        unused;                                   
          }HKL__, *PHKL__;                                           
                                                                     
          typedef struct _HMONITOR__ // 1 elements, 0x4 bytes (sizeof) 
          {                                                            
/*0x000*/     INT32        unused;                                     
          }HMONITOR__, *PHMONITOR__;                                   
                                                                       
          typedef struct _HRGN__   // 1 elements, 0x4 bytes (sizeof) 
          {                                                          
/*0x000*/     INT32        unused;                                   
          }HRGN__, *PHRGN__;                                         
                                                                     
          typedef struct _HTOUCHINPUT__ // 1 elements, 0x4 bytes (sizeof) 
          {                                                               
/*0x000*/     INT32        unused;                                        
          }HTOUCHINPUT__, *PHTOUCHINPUT__;                                  
                                                                          
          typedef struct _HWINSTA__ // 1 elements, 0x4 bytes (sizeof) 
          {                                                           
/*0x000*/     INT32        unused;                                    
          }HWINSTA__, *PHWINSTA__;                                    
                                                                      
          typedef struct _HWND__   // 1 elements, 0x4 bytes (sizeof) 
          {                                                          
/*0x000*/     INT32        unused;                                   
          }HWND__, *PHWND__;                                         
                                                                     
          typedef struct _IMAGE_DATA_DIRECTORY // 2 elements, 0x8 bytes (sizeof) 
          {                                                                      
/*0x000*/     ULONG32      VirtualAddress;                                       
/*0x004*/     ULONG32      Size;                                                 
          }IMAGE_DATA_DIRECTORY, *PIMAGE_DATA_DIRECTORY;                                  
                                                                                 
          typedef struct _IMAGE_DOS_HEADER // 19 elements, 0x40 bytes (sizeof) 
          {                                                                    
/*0x000*/     UINT16       e_magic;                                            
/*0x002*/     UINT16       e_cblp;                                             
/*0x004*/     UINT16       e_cp;                                               
/*0x006*/     UINT16       e_crlc;                                             
/*0x008*/     UINT16       e_cparhdr;                                          
/*0x00A*/     UINT16       e_minalloc;                                         
/*0x00C*/     UINT16       e_maxalloc;                                         
/*0x00E*/     UINT16       e_ss;                                               
/*0x010*/     UINT16       e_sp;                                               
/*0x012*/     UINT16       e_csum;                                             
/*0x014*/     UINT16       e_ip;                                               
/*0x016*/     UINT16       e_cs;                                               
/*0x018*/     UINT16       e_lfarlc;                                           
/*0x01A*/     UINT16       e_ovno;                                             
/*0x01C*/     UINT16       e_res[4];                                           
/*0x024*/     UINT16       e_oemid;                                            
/*0x026*/     UINT16       e_oeminfo;                                          
/*0x028*/     UINT16       e_res2[10];                                         
/*0x03C*/     LONG32       e_lfanew;                                           
          }IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER;                                    
                                                                               
          typedef struct _IMAGE_FILE_HEADER      // 7 elements, 0x14 bytes (sizeof) 
          {                                                                         
/*0x000*/     UINT16       Machine;                                                 
/*0x002*/     UINT16       NumberOfSections;                                        
/*0x004*/     ULONG32      TimeDateStamp;                                           
/*0x008*/     ULONG32      PointerToSymbolTable;                                    
/*0x00C*/     ULONG32      NumberOfSymbols;                                         
/*0x010*/     UINT16       SizeOfOptionalHeader;                                    
/*0x012*/     UINT16       Characteristics;                                         
          }IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER;                                   
                                                                                    
          typedef struct _IMAGE_OPTIONAL_HEADER64             // 30 elements, 0xF0 bytes (sizeof) 
          {                                                                                       
/*0x000*/     UINT16       Magic;                                                                 
/*0x002*/     UINT8        MajorLinkerVersion;                                                    
/*0x003*/     UINT8        MinorLinkerVersion;                                                    
/*0x004*/     ULONG32      SizeOfCode;                                                            
/*0x008*/     ULONG32      SizeOfInitializedData;                                                 
/*0x00C*/     ULONG32      SizeOfUninitializedData;                                               
/*0x010*/     ULONG32      AddressOfEntryPoint;                                                   
/*0x014*/     ULONG32      BaseOfCode;                                                            
/*0x018*/     UINT64       ImageBase;                                                             
/*0x020*/     ULONG32      SectionAlignment;                                                      
/*0x024*/     ULONG32      FileAlignment;                                                         
/*0x028*/     UINT16       MajorOperatingSystemVersion;                                           
/*0x02A*/     UINT16       MinorOperatingSystemVersion;                                           
/*0x02C*/     UINT16       MajorImageVersion;                                                     
/*0x02E*/     UINT16       MinorImageVersion;                                                     
/*0x030*/     UINT16       MajorSubsystemVersion;                                                 
/*0x032*/     UINT16       MinorSubsystemVersion;                                                 
/*0x034*/     ULONG32      Win32VersionValue;                                                     
/*0x038*/     ULONG32      SizeOfImage;                                                           
/*0x03C*/     ULONG32      SizeOfHeaders;                                                         
/*0x040*/     ULONG32      CheckSum;                                                              
/*0x044*/     UINT16       Subsystem;                                                             
/*0x046*/     UINT16       DllCharacteristics;                                                    
/*0x048*/     UINT64       SizeOfStackReserve;                                                    
/*0x050*/     UINT64       SizeOfStackCommit;                                                     
/*0x058*/     UINT64       SizeOfHeapReserve;                                                     
/*0x060*/     UINT64       SizeOfHeapCommit;                                                      
/*0x068*/     ULONG32      LoaderFlags;                                                           
/*0x06C*/     ULONG32      NumberOfRvaAndSizes;                                                   
/*0x070*/     struct _IMAGE_DATA_DIRECTORY DataDirectory[16];                                     
          }IMAGE_OPTIONAL_HEADER64, *PIMAGE_OPTIONAL_HEADER64;                                    
                                                                                                  
          typedef struct _IMAGE_NT_HEADERS64                  // 3 elements, 0x108 bytes (sizeof) 
          {                                                                                       
/*0x000*/     ULONG32      Signature;                                                             
/*0x004*/     struct _IMAGE_FILE_HEADER FileHeader;           // 7 elements, 0x14 bytes (sizeof)  
/*0x018*/     struct _IMAGE_OPTIONAL_HEADER64 OptionalHeader; // 30 elements, 0xF0 bytes (sizeof) 
          }IMAGE_NT_HEADERS64, *PIMAGE_NT_HEADERS64;                                              
                                                                                                  
          typedef struct _INTERFACE                                                                                       // 5 elements, 0x20 bytes (sizeof) 
          {                                                                                                                                                  
/*0x000*/     UINT16       Size;                                                                                                                             
/*0x002*/     UINT16       Version;                                                                                                                          
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                                                                  
/*0x008*/     VOID*        Context;                                                                                                                          
/*0x010*/     FUNCT_00A3_0468_Free_InterfaceReference_InterfaceDereference_DeleteProcedure_pfnFree* InterfaceReference;                                      
/*0x018*/     FUNCT_00A3_0468_Free_InterfaceReference_InterfaceDereference_DeleteProcedure_pfnFree* InterfaceDereference;                                    
          }INTERFACE, *PINTERFACE;                                                                                                                           
                                                                                                                                                             
          typedef struct _IO_COMPLETION_CONTEXT // 2 elements, 0x10 bytes (sizeof) 
          {                                                                        
/*0x000*/     VOID*        Port;                                                   
/*0x008*/     VOID*        Key;                                                    
          }IO_COMPLETION_CONTEXT, *PIO_COMPLETION_CONTEXT;                                   
                                                                                   
          typedef struct _IO_DRIVER_CREATE_CONTEXT        // 4 elements, 0x20 bytes (sizeof) 
          {                                                                                  
/*0x000*/     INT16        Size;                                                             
/*0x002*/     UINT8        _PADDING0_[0x6];                                                  
/*0x008*/     struct _ECP_LIST* ExtraCreateParameter;                                        
/*0x010*/     VOID*        DeviceObjectHint;                                                 
/*0x018*/     struct _TXN_PARAMETER_BLOCK* TxnParameters;                                    
          }IO_DRIVER_CREATE_CONTEXT, *PIO_DRIVER_CREATE_CONTEXT;                                   
                                                                                             
          typedef struct _IO_RESOURCE_DESCRIPTOR           // 7 elements, 0x20 bytes (sizeof)  
          {                                                                                    
/*0x000*/     UINT8        Option;                                                             
/*0x001*/     UINT8        Type;                                                               
/*0x002*/     UINT8        ShareDisposition;                                                   
/*0x003*/     UINT8        Spare1;                                                             
/*0x004*/     UINT16       Flags;                                                              
/*0x006*/     UINT16       Spare2;                                                             
              union                                        // 11 elements, 0x18 bytes (sizeof) 
              {                                                                                
                  struct                                   // 4 elements, 0x18 bytes (sizeof)  
                  {                                                                            
/*0x008*/             ULONG32      Length;                                                     
/*0x00C*/             ULONG32      Alignment;                                                  
/*0x010*/             union _LARGE_INTEGER MinimumAddress; // 4 elements, 0x8 bytes (sizeof)   
/*0x018*/             union _LARGE_INTEGER MaximumAddress; // 4 elements, 0x8 bytes (sizeof)   
                  }Port;                                                                       
                  struct                                   // 4 elements, 0x18 bytes (sizeof)  
                  {                                                                            
/*0x008*/             ULONG32      Length;                                                     
/*0x00C*/             ULONG32      Alignment;                                                  
/*0x010*/             union _LARGE_INTEGER MinimumAddress; // 4 elements, 0x8 bytes (sizeof)   
/*0x018*/             union _LARGE_INTEGER MaximumAddress; // 4 elements, 0x8 bytes (sizeof)   
                  }Memory;                                                                     
                  struct                                   // 6 elements, 0x18 bytes (sizeof)  
                  {                                                                            
/*0x008*/             ULONG32      MinimumVector;                                              
/*0x00C*/             ULONG32      MaximumVector;                                              
/*0x010*/             UINT16       AffinityPolicy;                                             
/*0x012*/             UINT16       Group;                                                      
/*0x014*/             enum _IRQ_PRIORITY PriorityPolicy;                                       
/*0x018*/             UINT64       TargetedProcessors;                                         
                  }Interrupt;                                                                  
                  struct                                   // 2 elements, 0x8 bytes (sizeof)   
                  {                                                                            
/*0x008*/             ULONG32      MinimumChannel;                                             
/*0x00C*/             ULONG32      MaximumChannel;                                             
                  }Dma;                                                                        
                  struct                                   // 4 elements, 0x18 bytes (sizeof)  
                  {                                                                            
/*0x008*/             ULONG32      Length;                                                     
/*0x00C*/             ULONG32      Alignment;                                                  
/*0x010*/             union _LARGE_INTEGER MinimumAddress; // 4 elements, 0x8 bytes (sizeof)   
/*0x018*/             union _LARGE_INTEGER MaximumAddress; // 4 elements, 0x8 bytes (sizeof)   
                  }Generic;                                                                    
                  struct                                   // 1 elements, 0xC bytes (sizeof)   
                  {                                                                            
/*0x008*/             ULONG32      Data[3];                                                    
                  }DevicePrivate;                                                              
                  struct                                   // 4 elements, 0x10 bytes (sizeof)  
                  {                                                                            
/*0x008*/             ULONG32      Length;                                                     
/*0x00C*/             ULONG32      MinBusNumber;                                               
/*0x010*/             ULONG32      MaxBusNumber;                                               
/*0x014*/             ULONG32      Reserved;                                                   
                  }BusNumber;                                                                  
                  struct                                   // 3 elements, 0xC bytes (sizeof)   
                  {                                                                            
/*0x008*/             ULONG32      Priority;                                                   
/*0x00C*/             ULONG32      Reserved1;                                                  
/*0x010*/             ULONG32      Reserved2;                                                  
                  }ConfigData;                                                                 
                  struct                                   // 4 elements, 0x18 bytes (sizeof)  
                  {                                                                            
/*0x008*/             ULONG32      Length40;                                                   
/*0x00C*/             ULONG32      Alignment40;                                                
/*0x010*/             union _LARGE_INTEGER MinimumAddress; // 4 elements, 0x8 bytes (sizeof)   
/*0x018*/             union _LARGE_INTEGER MaximumAddress; // 4 elements, 0x8 bytes (sizeof)   
                  }Memory40;                                                                   
                  struct                                   // 4 elements, 0x18 bytes (sizeof)  
                  {                                                                            
/*0x008*/             ULONG32      Length48;                                                   
/*0x00C*/             ULONG32      Alignment48;                                                
/*0x010*/             union _LARGE_INTEGER MinimumAddress; // 4 elements, 0x8 bytes (sizeof)   
/*0x018*/             union _LARGE_INTEGER MaximumAddress; // 4 elements, 0x8 bytes (sizeof)   
                  }Memory48;                                                                   
                  struct                                   // 4 elements, 0x18 bytes (sizeof)  
                  {                                                                            
/*0x008*/             ULONG32      Length64;                                                   
/*0x00C*/             ULONG32      Alignment64;                                                
/*0x010*/             union _LARGE_INTEGER MinimumAddress; // 4 elements, 0x8 bytes (sizeof)   
/*0x018*/             union _LARGE_INTEGER MaximumAddress; // 4 elements, 0x8 bytes (sizeof)   
                  }Memory64;                                                                   
              }u;                                                                              
          }IO_RESOURCE_DESCRIPTOR, *PIO_RESOURCE_DESCRIPTOR;                                    
                                                                                               
          typedef struct _IO_RESOURCE_LIST                   // 4 elements, 0x28 bytes (sizeof) 
          {                                                                                     
/*0x000*/     UINT16       Version;                                                             
/*0x002*/     UINT16       Revision;                                                            
/*0x004*/     ULONG32      Count;                                                               
/*0x008*/     struct _IO_RESOURCE_DESCRIPTOR Descriptors[1];                                    
          }IO_RESOURCE_LIST, *PIO_RESOURCE_LIST;                                                
                                                                                                
          typedef struct _IO_RESOURCE_REQUIREMENTS_LIST // 7 elements, 0x48 bytes (sizeof) 
          {                                                                                
/*0x000*/     ULONG32      ListSize;                                                       
/*0x004*/     enum _INTERFACE_TYPE InterfaceType;                                          
/*0x008*/     ULONG32      BusNumber;                                                      
/*0x00C*/     ULONG32      SlotNumber;                                                     
/*0x010*/     ULONG32      Reserved[3];                                                    
/*0x01C*/     ULONG32      AlternativeLists;                                               
/*0x020*/     struct _IO_RESOURCE_LIST List[1];                                            
          }IO_RESOURCE_REQUIREMENTS_LIST, *PIO_RESOURCE_REQUIREMENTS_LIST;                                   
                                                                                           
          typedef struct _IO_SECURITY_CONTEXT                   // 4 elements, 0x18 bytes (sizeof) 
          {                                                                                        
/*0x000*/     struct _SECURITY_QUALITY_OF_SERVICE* SecurityQos;                                    
/*0x008*/     struct _ACCESS_STATE* AccessState;                                                   
/*0x010*/     ULONG32      DesiredAccess;                                                          
/*0x014*/     ULONG32      FullCreateOptions;                                                      
          }IO_SECURITY_CONTEXT, *PIO_SECURITY_CONTEXT;                                             
                                                                                                   
          typedef struct _SYSTEM_POWER_STATE_CONTEXT          // 8 elements, 0x4 bytes (sizeof) 
          {                                                                                     
              union                                           // 2 elements, 0x4 bytes (sizeof) 
              {                                                                                 
                  struct                                      // 7 elements, 0x4 bytes (sizeof) 
                  {                                                                             
/*0x000*/             ULONG32      Reserved1 : 8;             // 0 BitPosition                  
/*0x000*/             ULONG32      TargetSystemState : 4;     // 8 BitPosition                  
/*0x000*/             ULONG32      EffectiveSystemState : 4;  // 12 BitPosition                 
/*0x000*/             ULONG32      CurrentSystemState : 4;    // 16 BitPosition                 
/*0x000*/             ULONG32      IgnoreHibernationPath : 1; // 20 BitPosition                 
/*0x000*/             ULONG32      PseudoTransition : 1;      // 21 BitPosition                 
/*0x000*/             ULONG32      Reserved2 : 10;            // 22 BitPosition                 
                  };                                                                            
/*0x000*/         ULONG32      ContextAsUlong;                                                  
              };                                                                                
          }SYSTEM_POWER_STATE_CONTEXT, *PSYSTEM_POWER_STATE_CONTEXT;                                  
                                                                                                
          typedef union _POWER_STATE                // 2 elements, 0x4 bytes (sizeof) 
          {                                                                           
/*0x000*/     enum _SYSTEM_POWER_STATE SystemState;                                   
/*0x000*/     enum _DEVICE_POWER_STATE DeviceState;                                   
          }POWER_STATE, *PPOWER_STATE;                                                
                                                                                      
          typedef struct _IO_STACK_LOCATION                                             // 9 elements, 0x48 bytes (sizeof)  
          {                                                                                                                 
/*0x000*/     UINT8        MajorFunction;                                                                                   
/*0x001*/     UINT8        MinorFunction;                                                                                   
/*0x002*/     UINT8        Flags;                                                                                           
/*0x003*/     UINT8        Control;                                                                                         
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                                 
              union                                                                     // 33 elements, 0x20 bytes (sizeof) 
              {                                                                                                             
                  struct                                                                // 5 elements, 0x20 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             struct _IO_SECURITY_CONTEXT* SecurityContext;                                                         
/*0x010*/             ULONG32      Options;                                                                                 
/*0x014*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x018*/             UINT16       FileAttributes;                                                                          
/*0x01A*/             UINT16       ShareAccess;                                                                             
/*0x01C*/             UINT8        _PADDING2_[0x4];                                                                         
/*0x020*/             ULONG32      EaLength;                                                                                
/*0x024*/             UINT8        _PADDING3_[0x4];                                                                         
                  }Create;                                                                                                  
                  struct                                                                // 5 elements, 0x20 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             struct _IO_SECURITY_CONTEXT* SecurityContext;                                                         
/*0x010*/             ULONG32      Options;                                                                                 
/*0x014*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x018*/             UINT16       Reserved;                                                                                
/*0x01A*/             UINT16       ShareAccess;                                                                             
/*0x01C*/             UINT8        _PADDING2_[0x4];                                                                         
/*0x020*/             struct _NAMED_PIPE_CREATE_PARAMETERS* Parameters;                                                     
                  }CreatePipe;                                                                                              
                  struct                                                                // 5 elements, 0x20 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             struct _IO_SECURITY_CONTEXT* SecurityContext;                                                         
/*0x010*/             ULONG32      Options;                                                                                 
/*0x014*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x018*/             UINT16       Reserved;                                                                                
/*0x01A*/             UINT16       ShareAccess;                                                                             
/*0x01C*/             UINT8        _PADDING2_[0x4];                                                                         
/*0x020*/             struct _MAILSLOT_CREATE_PARAMETERS* Parameters;                                                       
                  }CreateMailslot;                                                                                          
                  struct                                                                // 3 elements, 0x18 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             ULONG32      Length;                                                                                  
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x010*/             ULONG32      Key;                                                                                     
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                         
/*0x018*/             union _LARGE_INTEGER ByteOffset;                                  // 4 elements, 0x8 bytes (sizeof)   
                  }Read;                                                                                                    
                  struct                                                                // 3 elements, 0x18 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             ULONG32      Length;                                                                                  
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x010*/             ULONG32      Key;                                                                                     
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                         
/*0x018*/             union _LARGE_INTEGER ByteOffset;                                  // 4 elements, 0x8 bytes (sizeof)   
                  }Write;                                                                                                   
                  struct                                                                // 4 elements, 0x20 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             ULONG32      Length;                                                                                  
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x010*/             struct _UNICODE_STRING* FileName;                                                                     
/*0x018*/             enum _FILE_INFORMATION_CLASS FileInformationClass;                                                    
/*0x01C*/             UINT8        _PADDING2_[0x4];                                                                         
/*0x020*/             ULONG32      FileIndex;                                                                               
/*0x024*/             UINT8        _PADDING3_[0x4];                                                                         
                  }QueryDirectory;                                                                                          
                  struct                                                                // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             ULONG32      Length;                                                                                  
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x010*/             ULONG32      CompletionFilter;                                                                        
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                         
                  }NotifyDirectory;                                                                                         
                  struct                                                                // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             ULONG32      Length;                                                                                  
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x010*/             enum _FILE_INFORMATION_CLASS FileInformationClass;                                                    
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                         
                  }QueryFile;                                                                                               
                  struct                                                                // 7 elements, 0x20 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             ULONG32      Length;                                                                                  
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x010*/             enum _FILE_INFORMATION_CLASS FileInformationClass;                                                    
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                         
/*0x018*/             struct _FILE_OBJECT* FileObject;                                                                      
                      union                                                             // 3 elements, 0x8 bytes (sizeof)   
                      {                                                                                                     
                          struct                                                        // 2 elements, 0x8 bytes (sizeof)   
                          {                                                                                                 
/*0x020*/                     UINT8        ReplaceIfExists;                                                                 
/*0x021*/                     UINT8        AdvanceOnly;                                                                     
/*0x022*/                     UINT8        _PADDING3_[0x6];                                                                 
                          };                                                                                                
/*0x020*/                 ULONG32      ClusterCount;                                                                        
/*0x020*/                 VOID*        DeleteHandle;                                                                        
                      };                                                                                                    
                  }SetFile;                                                                                                 
                  struct                                                                // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             ULONG32      Length;                                                                                  
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x010*/             enum _FSINFOCLASS FsInformationClass;                                                                 
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                         
                  }QueryVolume;                                                                                             
                  struct                                                                // 4 elements, 0x20 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             ULONG32      OutputBufferLength;                                                                      
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x010*/             ULONG32      InputBufferLength;                                                                       
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                         
/*0x018*/             ULONG32      FsControlCode;                                                                           
/*0x01C*/             UINT8        _PADDING3_[0x4];                                                                         
/*0x020*/             VOID*        Type3InputBuffer;                                                                        
                  }FileSystemControl;                                                                                       
                  struct                                                                // 3 elements, 0x18 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             union _LARGE_INTEGER* Length;                                                                         
/*0x010*/             ULONG32      Key;                                                                                     
/*0x014*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x018*/             union _LARGE_INTEGER ByteOffset;                                  // 4 elements, 0x8 bytes (sizeof)   
                  }LockControl;                                                                                             
                  struct                                                                // 4 elements, 0x20 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             ULONG32      OutputBufferLength;                                                                      
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x010*/             ULONG32      InputBufferLength;                                                                       
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                         
/*0x018*/             ULONG32      IoControlCode;                                                                           
/*0x01C*/             UINT8        _PADDING3_[0x4];                                                                         
/*0x020*/             VOID*        Type3InputBuffer;                                                                        
                  }DeviceIoControl;                                                                                         
                  struct                                                                // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             ULONG32      SecurityInformation;                                                                     
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x010*/             ULONG32      Length;                                                                                  
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                         
                  }QuerySecurity;                                                                                           
                  struct                                                                // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             ULONG32      SecurityInformation;                                                                     
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x010*/             VOID*        SecurityDescriptor;                                                                      
                  }SetSecurity;                                                                                             
                  struct                                                                // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             struct _VPB* Vpb;                                                                                     
/*0x010*/             struct _DEVICE_OBJECT* DeviceObject;                                                                  
                  }MountVolume;                                                                                             
                  struct                                                                // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             struct _VPB* Vpb;                                                                                     
/*0x010*/             struct _DEVICE_OBJECT* DeviceObject;                                                                  
                  }VerifyVolume;                                                                                            
                  struct                                                                // 1 elements, 0x8 bytes (sizeof)   
                  {                                                                                                         
/*0x008*/             struct _SCSI_REQUEST_BLOCK* Srb;                                                                      
                  }Scsi;                                                                                                    
                  struct                                                                // 1 elements, 0x4 bytes (sizeof)   
                  {                                                                                                         
/*0x008*/             enum _DEVICE_RELATION_TYPE Type;                                                                      
                  }QueryDeviceRelations;                                                                                    
                  struct                                                                // 5 elements, 0x20 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             struct _GUID* InterfaceType;                                                                          
/*0x010*/             UINT16       Size;                                                                                    
/*0x012*/             UINT16       Version;                                                                                 
/*0x014*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x018*/             struct _INTERFACE* Interface;                                                                         
/*0x020*/             VOID*        InterfaceSpecificData;                                                                   
                  }QueryInterface;                                                                                          
                  struct                                                                // 1 elements, 0x8 bytes (sizeof)   
                  {                                                                                                         
/*0x008*/             struct _DEVICE_CAPABILITIES* Capabilities;                                                            
                  }DeviceCapabilities;                                                                                      
                  struct                                                                // 1 elements, 0x8 bytes (sizeof)   
                  {                                                                                                         
/*0x008*/             struct _IO_RESOURCE_REQUIREMENTS_LIST* IoResourceRequirementList;                                     
                  }FilterResourceRequirements;                                                                              
                  struct                                                                // 4 elements, 0x20 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             ULONG32      WhichSpace;                                                                              
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x010*/             VOID*        Buffer;                                                                                  
/*0x018*/             ULONG32      Offset;                                                                                  
/*0x01C*/             UINT8        _PADDING2_[0x4];                                                                         
/*0x020*/             ULONG32      Length;                                                                                  
/*0x024*/             UINT8        _PADDING3_[0x4];                                                                         
                  }ReadWriteConfig;                                                                                         
                  struct                                                                // 1 elements, 0x1 bytes (sizeof)   
                  {                                                                                                         
/*0x008*/             UINT8        Lock;                                                                                    
                  }SetLock;                                                                                                 
                  struct                                                                // 1 elements, 0x4 bytes (sizeof)   
                  {                                                                                                         
/*0x008*/             enum _BUS_QUERY_ID_TYPE IdType;                                                                       
                  }QueryId;                                                                                                 
                  struct                                                                // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             enum _DEVICE_TEXT_TYPE DeviceTextType;                                                                
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x010*/             ULONG32      LocaleId;                                                                                
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                         
                  }QueryDeviceText;                                                                                         
                  struct                                                                // 3 elements, 0x10 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             UINT8        InPath;                                                                                  
/*0x009*/             UINT8        Reserved[3];                                                                             
/*0x00C*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x010*/             enum _DEVICE_USAGE_NOTIFICATION_TYPE Type;                                                            
/*0x014*/             UINT8        _PADDING2_[0x4];                                                                         
                  }UsageNotification;                                                                                       
                  struct                                                                // 1 elements, 0x4 bytes (sizeof)   
                  {                                                                                                         
/*0x008*/             enum _SYSTEM_POWER_STATE PowerState;                                                                  
                  }WaitWake;                                                                                                
                  struct                                                                // 1 elements, 0x8 bytes (sizeof)   
                  {                                                                                                         
/*0x008*/             struct _POWER_SEQUENCE* PowerSequence;                                                                
                  }PowerSequence;                                                                                           
                  struct                                                                // 5 elements, 0x20 bytes (sizeof)  
                  {                                                                                                         
                      union                                                             // 2 elements, 0x8 bytes (sizeof)   
                      {                                                                                                     
/*0x008*/                 ULONG32      SystemContext;                                                                       
/*0x008*/                 struct _SYSTEM_POWER_STATE_CONTEXT SystemPowerStateContext;   // 8 elements, 0x4 bytes (sizeof)   
                      };                                                                                                    
/*0x010*/             enum _POWER_STATE_TYPE Type;                                                                          
/*0x014*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x018*/             union _POWER_STATE State;                                         // 2 elements, 0x4 bytes (sizeof)   
/*0x01C*/             UINT8        _PADDING2_[0x4];                                                                         
/*0x020*/             enum _POWER_ACTION ShutdownType;                                                                      
/*0x024*/             UINT8        _PADDING3_[0x4];                                                                         
                  }Power;                                                                                                   
                  struct                                                                // 2 elements, 0x10 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             struct _CM_RESOURCE_LIST* AllocatedResources;                                                         
/*0x010*/             struct _CM_RESOURCE_LIST* AllocatedResourcesTranslated;                                               
                  }StartDevice;                                                                                             
                  struct                                                                // 4 elements, 0x20 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             UINT64       ProviderId;                                                                              
/*0x010*/             VOID*        DataPath;                                                                                
/*0x018*/             ULONG32      BufferSize;                                                                              
/*0x01C*/             UINT8        _PADDING1_[0x4];                                                                         
/*0x020*/             VOID*        Buffer;                                                                                  
                  }WMI;                                                                                                     
                  struct                                                                // 4 elements, 0x20 bytes (sizeof)  
                  {                                                                                                         
/*0x008*/             VOID*        Argument1;                                                                               
/*0x010*/             VOID*        Argument2;                                                                               
/*0x018*/             VOID*        Argument3;                                                                               
/*0x020*/             VOID*        Argument4;                                                                               
                  }Others;                                                                                                  
              }Parameters;                                                                                                  
/*0x028*/     struct _DEVICE_OBJECT* DeviceObject;                                                                          
/*0x030*/     struct _FILE_OBJECT* FileObject;                                                                              
/*0x038*/     FUNCT_005B_08DA_CompletionRoutine* CompletionRoutine;                                                         
/*0x040*/     VOID*        Context;                                                                                         
          }IO_STACK_LOCATION, *PIO_STACK_LOCATION;                                                                          
                                                                                                                            
          typedef struct _IO_STATUS_BLOCK // 3 elements, 0x10 bytes (sizeof) 
          {                                                                  
              union                       // 2 elements, 0x8 bytes (sizeof)  
              {                                                              
/*0x000*/         LONG32       Status;                                       
/*0x000*/         VOID*        Pointer;                                      
              };                                                             
/*0x008*/     UINT64       Information;                                      
          }IO_STATUS_BLOCK, *PIO_STATUS_BLOCK;                                   
                                                                             
          typedef struct _IO_STATUS_BLOCK32 // 2 elements, 0x8 bytes (sizeof) 
          {                                                                   
/*0x000*/     LONG32       Status;                                            
/*0x004*/     ULONG32      Information;                                       
          }IO_STATUS_BLOCK32, *PIO_STATUS_BLOCK32;                                  
                                                                              
typedef struct _IO_TIMER // 0 elements, 0x0 bytes (sizeof) 
{                                                          
}IO_TIMER, *PIO_TIMER;                                     
                                                           
          typedef struct _KAPC                                // 16 elements, 0x58 bytes (sizeof) 
          {                                                                                       
/*0x000*/     UINT8        Type;                                                                  
/*0x001*/     UINT8        SpareByte0;                                                            
/*0x002*/     UINT8        Size;                                                                  
/*0x003*/     UINT8        SpareByte1;                                                            
/*0x004*/     ULONG32      SpareLong0;                                                            
/*0x008*/     struct _KTHREAD* Thread;                                                            
/*0x010*/     struct _LIST_ENTRY ApcListEntry;                // 2 elements, 0x10 bytes (sizeof)  
/*0x020*/     FUNCT_00A3_08F0_KernelRoutine* KernelRoutine;                                       
/*0x028*/     FUNCT_00A3_08FE_RundownRoutine* RundownRoutine;                                     
/*0x030*/     FUNCT_00A3_08F9_NormalRoutine* NormalRoutine;                                       
/*0x038*/     VOID*        NormalContext;                                                         
/*0x040*/     VOID*        SystemArgument1;                                                       
/*0x048*/     VOID*        SystemArgument2;                                                       
/*0x050*/     CHAR         ApcStateIndex;                                                         
/*0x051*/     CHAR         ApcMode;                                                               
/*0x052*/     UINT8        Inserted;                                                              
/*0x053*/     UINT8        _PADDING0_[0x5];                                                       
          }KAPC, *PKAPC;                                                                          
                                                                                                  
          typedef struct _IRP                                              // 21 elements, 0xD0 bytes (sizeof) 
          {                                                                                                    
/*0x000*/     INT16        Type;                                                                               
/*0x002*/     UINT16       Size;                                                                               
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                    
/*0x008*/     struct _MDL* MdlAddress;                                                                         
/*0x010*/     ULONG32      Flags;                                                                              
/*0x014*/     UINT8        _PADDING1_[0x4];                                                                    
              union                                                        // 3 elements, 0x8 bytes (sizeof)   
              {                                                                                                
/*0x018*/         struct _IRP* MasterIrp;                                                                      
/*0x018*/         LONG32       IrpCount;                                                                       
/*0x018*/         VOID*        SystemBuffer;                                                                   
              }AssociatedIrp;                                                                                  
/*0x020*/     struct _LIST_ENTRY ThreadListEntry;                          // 2 elements, 0x10 bytes (sizeof)  
/*0x030*/     struct _IO_STATUS_BLOCK IoStatus;                            // 3 elements, 0x10 bytes (sizeof)  
/*0x040*/     CHAR         RequestorMode;                                                                      
/*0x041*/     UINT8        PendingReturned;                                                                    
/*0x042*/     CHAR         StackCount;                                                                         
/*0x043*/     CHAR         CurrentLocation;                                                                    
/*0x044*/     UINT8        Cancel;                                                                             
/*0x045*/     UINT8        CancelIrql;                                                                         
/*0x046*/     CHAR         ApcEnvironment;                                                                     
/*0x047*/     UINT8        AllocationFlags;                                                                    
/*0x048*/     struct _IO_STATUS_BLOCK* UserIosb;                                                               
/*0x050*/     struct _KEVENT* UserEvent;                                                                       
              union                                                        // 2 elements, 0x10 bytes (sizeof)  
              {                                                                                                
                  struct                                                   // 3 elements, 0x10 bytes (sizeof)  
                  {                                                                                            
                      union                                                // 2 elements, 0x8 bytes (sizeof)   
                      {                                                                                        
/*0x058*/                 FUNCT_00A3_04CA_UserApcRoutine* UserApcRoutine;                                      
/*0x058*/                 VOID*        IssuingProcess;                                                         
                      };                                                                                       
/*0x060*/             VOID*        UserApcContext;                                                             
                  }AsynchronousParameters;                                                                     
/*0x058*/         union _LARGE_INTEGER AllocationSize;                     // 4 elements, 0x8 bytes (sizeof)   
              }Overlay;                                                                                        
/*0x068*/     FUNCT_00A3_04CF_CancelRoutine_DriverStartIo* CancelRoutine;                                      
/*0x070*/     VOID*        UserBuffer;                                                                         
              union                                                        // 3 elements, 0x58 bytes (sizeof)  
              {                                                                                                
                  struct                                                   // 8 elements, 0x50 bytes (sizeof)  
                  {                                                                                            
                      union                                                // 2 elements, 0x20 bytes (sizeof)  
                      {                                                                                        
/*0x078*/                 struct _KDEVICE_QUEUE_ENTRY DeviceQueueEntry;    // 3 elements, 0x18 bytes (sizeof)  
/*0x078*/                 VOID*        DriverContext[4];                                                       
                      };                                                                                       
/*0x098*/             struct _ETHREAD* Thread;                                                                 
/*0x0A0*/             CHAR*        AuxiliaryBuffer;                                                            
/*0x0A8*/             struct _LIST_ENTRY ListEntry;                        // 2 elements, 0x10 bytes (sizeof)  
                      union                                                // 2 elements, 0x8 bytes (sizeof)   
                      {                                                                                        
/*0x0B8*/                 struct _IO_STACK_LOCATION* CurrentStackLocation;                                     
/*0x0B8*/                 ULONG32      PacketType;                                                             
                      };                                                                                       
/*0x0C0*/             struct _FILE_OBJECT* OriginalFileObject;                                                 
                  }Overlay;                                                                                    
/*0x078*/         struct _KAPC Apc;                                        // 16 elements, 0x58 bytes (sizeof) 
/*0x078*/         VOID*        CompletionKey;                                                                  
              }Tail;                                                                                           
          }IRP, *PIRP;                                                                                         
                                                                                                               
          typedef struct _KDESCRIPTOR // 3 elements, 0x10 bytes (sizeof) 
          {                                                              
/*0x000*/     UINT16       Pad[3];                                       
/*0x006*/     UINT16       Limit;                                        
/*0x008*/     VOID*        Base;                                         
          }KDESCRIPTOR, *PKDESCRIPTOR;                                   
                                                                         
          typedef struct _KFLOATING_SAVE // 1 elements, 0x4 bytes (sizeof) 
          {                                                                
/*0x000*/     ULONG32      Dummy;                                          
          }KFLOATING_SAVE, *PKFLOATING_SAVE;                                  
                                                                           
          typedef union _KGDTENTRY64                    // 7 elements, 0x10 bytes (sizeof) 
          {                                                                                
              struct                                    // 5 elements, 0x10 bytes (sizeof) 
              {                                                                            
/*0x000*/         UINT16       LimitLow;                                                   
/*0x002*/         UINT16       BaseLow;                                                    
                  union                                 // 2 elements, 0x4 bytes (sizeof)  
                  {                                                                        
                      struct                            // 4 elements, 0x4 bytes (sizeof)  
                      {                                                                    
/*0x004*/                 UINT8        BaseMiddle;                                         
/*0x005*/                 UINT8        Flags1;                                             
/*0x006*/                 UINT8        Flags2;                                             
/*0x007*/                 UINT8        BaseHigh;                                           
                      }Bytes;                                                              
                      struct                            // 10 elements, 0x4 bytes (sizeof) 
                      {                                                                    
/*0x004*/                 ULONG32      BaseMiddle : 8;  // 0 BitPosition                   
/*0x004*/                 ULONG32      Type : 5;        // 8 BitPosition                   
/*0x004*/                 ULONG32      Dpl : 2;         // 13 BitPosition                  
/*0x004*/                 ULONG32      Present : 1;     // 15 BitPosition                  
/*0x004*/                 ULONG32      LimitHigh : 4;   // 16 BitPosition                  
/*0x004*/                 ULONG32      System : 1;      // 20 BitPosition                  
/*0x004*/                 ULONG32      LongMode : 1;    // 21 BitPosition                  
/*0x004*/                 ULONG32      DefaultBig : 1;  // 22 BitPosition                  
/*0x004*/                 ULONG32      Granularity : 1; // 23 BitPosition                  
/*0x004*/                 ULONG32      BaseHigh : 8;    // 24 BitPosition                  
                      }Bits;                                                               
                  };                                                                       
/*0x008*/         ULONG32      BaseUpper;                                                  
/*0x00C*/         ULONG32      MustBeZero;                                                 
              };                                                                           
/*0x000*/     UINT64       Alignment;                                                      
          }KGDTENTRY64, *PKGDTENTRY64;                                                     
                                                                                           
          typedef union _KIDTENTRY64              // 11 elements, 0x10 bytes (sizeof) 
          {                                                                           
              struct                              // 6 elements, 0x10 bytes (sizeof)  
              {                                                                       
/*0x000*/         UINT16       OffsetLow;                                             
/*0x002*/         UINT16       Selector;                                              
                  struct                          // 5 elements, 0x2 bytes (sizeof)   
                  {                                                                   
/*0x004*/             UINT16       IstIndex : 3;  // 0 BitPosition                    
/*0x004*/             UINT16       Reserved0 : 5; // 3 BitPosition                    
/*0x004*/             UINT16       Type : 5;      // 8 BitPosition                    
/*0x004*/             UINT16       Dpl : 2;       // 13 BitPosition                   
/*0x004*/             UINT16       Present : 1;   // 15 BitPosition                   
                  };                                                                  
/*0x006*/         UINT16       OffsetMiddle;                                          
/*0x008*/         ULONG32      OffsetHigh;                                            
/*0x00C*/         ULONG32      Reserved1;                                             
              };                                                                      
/*0x000*/     UINT64       Alignment;                                                 
          }KIDTENTRY64, *PKIDTENTRY64;                                                
                                                                                      
          typedef struct _KLIST_ENTRY     // 2 elements, 0x10 bytes (sizeof) 
          {                                                                  
/*0x000*/     struct _KLIST_ENTRY* Flink;                                    
/*0x008*/     struct _KLIST_ENTRY* Blink;                                    
          }KLIST_ENTRY, *PKLIST_ENTRY;                                       
                                                                             
          typedef struct _NT_TIB                                    // 8 elements, 0x38 bytes (sizeof) 
          {                                                                                            
/*0x000*/     struct _EXCEPTION_REGISTRATION_RECORD* ExceptionList;                                    
/*0x008*/     VOID*        StackBase;                                                                  
/*0x010*/     VOID*        StackLimit;                                                                 
/*0x018*/     VOID*        SubSystemTib;                                                               
              union                                                 // 2 elements, 0x8 bytes (sizeof)  
              {                                                                                        
/*0x020*/         VOID*        FiberData;                                                              
/*0x020*/         ULONG32      Version;                                                                
              };                                                                                       
/*0x028*/     VOID*        ArbitraryUserPointer;                                                       
/*0x030*/     struct _NT_TIB* Self;                                                                    
          }NT_TIB, *PNT_TIB;                                                                           
                                                                                                       
          typedef struct _KSPECIAL_REGISTERS     // 27 elements, 0xD8 bytes (sizeof) 
          {                                                                          
/*0x000*/     UINT64       Cr0;                                                      
/*0x008*/     UINT64       Cr2;                                                      
/*0x010*/     UINT64       Cr3;                                                      
/*0x018*/     UINT64       Cr4;                                                      
/*0x020*/     UINT64       KernelDr0;                                                
/*0x028*/     UINT64       KernelDr1;                                                
/*0x030*/     UINT64       KernelDr2;                                                
/*0x038*/     UINT64       KernelDr3;                                                
/*0x040*/     UINT64       KernelDr6;                                                
/*0x048*/     UINT64       KernelDr7;                                                
/*0x050*/     struct _KDESCRIPTOR Gdtr;          // 3 elements, 0x10 bytes (sizeof)  
/*0x060*/     struct _KDESCRIPTOR Idtr;          // 3 elements, 0x10 bytes (sizeof)  
/*0x070*/     UINT16       Tr;                                                       
/*0x072*/     UINT16       Ldtr;                                                     
/*0x074*/     ULONG32      MxCsr;                                                    
/*0x078*/     UINT64       DebugControl;                                             
/*0x080*/     UINT64       LastBranchToRip;                                          
/*0x088*/     UINT64       LastBranchFromRip;                                        
/*0x090*/     UINT64       LastExceptionToRip;                                       
/*0x098*/     UINT64       LastExceptionFromRip;                                     
/*0x0A0*/     UINT64       Cr8;                                                      
/*0x0A8*/     UINT64       MsrGsBase;                                                
/*0x0B0*/     UINT64       MsrGsSwap;                                                
/*0x0B8*/     UINT64       MsrStar;                                                  
/*0x0C0*/     UINT64       MsrLStar;                                                 
/*0x0C8*/     UINT64       MsrCStar;                                                 
/*0x0D0*/     UINT64       MsrSyscallMask;                                           
          }KSPECIAL_REGISTERS, *PKSPECIAL_REGISTERS;                                    
                                                                                     
          typedef struct _KPROCESSOR_STATE                 // 2 elements, 0x5B0 bytes (sizeof)  
          {                                                                                     
/*0x000*/     struct _KSPECIAL_REGISTERS SpecialRegisters; // 27 elements, 0xD8 bytes (sizeof)  
/*0x0D8*/     UINT8        _PADDING0_[0x8];                                                     
/*0x0E0*/     struct _CONTEXT ContextFrame;                // 64 elements, 0x4D0 bytes (sizeof) 
          }KPROCESSOR_STATE, *PKPROCESSOR_STATE;                                                
                                                                                                
          typedef struct _KPRCB                        // 36 elements, 0x670 bytes (sizeof) 
          {                                                                                 
/*0x000*/     ULONG32      MxCsr;                                                           
/*0x004*/     UINT8        LegacyNumber;                                                    
/*0x005*/     UINT8        ReservedMustBeZero;                                              
/*0x006*/     UINT8        InterruptRequest;                                                
/*0x007*/     UINT8        IdleHalt;                                                        
/*0x008*/     struct _KTHREAD* CurrentThread;                                               
/*0x010*/     struct _KTHREAD* NextThread;                                                  
/*0x018*/     struct _KTHREAD* IdleThread;                                                  
/*0x020*/     UINT8        NestingLevel;                                                    
/*0x021*/     UINT8        PrcbPad00[3];                                                    
/*0x024*/     ULONG32      Number;                                                          
/*0x028*/     UINT64       RspBase;                                                         
/*0x030*/     UINT64       PrcbLock;                                                        
/*0x038*/     UINT64       PrcbPad01;                                                       
/*0x040*/     struct _KPROCESSOR_STATE ProcessorState; // 2 elements, 0x5B0 bytes (sizeof)  
/*0x5F0*/     CHAR         CpuType;                                                         
/*0x5F1*/     CHAR         CpuID;                                                           
              union                                    // 2 elements, 0x2 bytes (sizeof)    
              {                                                                             
/*0x5F2*/         UINT16       CpuStep;                                                     
                  struct                               // 2 elements, 0x2 bytes (sizeof)    
                  {                                                                         
/*0x5F2*/             UINT8        CpuStepping;                                             
/*0x5F3*/             UINT8        CpuModel;                                                
                  };                                                                        
              };                                                                            
/*0x5F4*/     ULONG32      MHz;                                                             
/*0x5F8*/     UINT64       HalReserved[8];                                                  
/*0x638*/     UINT16       MinorVersion;                                                    
/*0x63A*/     UINT16       MajorVersion;                                                    
/*0x63C*/     UINT8        BuildType;                                                       
/*0x63D*/     UINT8        CpuVendor;                                                       
/*0x63E*/     UINT8        CoresPerPhysicalProcessor;                                       
/*0x63F*/     UINT8        LogicalProcessorsPerCore;                                        
/*0x640*/     ULONG32      ApicMask;                                                        
/*0x644*/     ULONG32      CFlushSize;                                                      
/*0x648*/     VOID*        AcpiReserved;                                                    
/*0x650*/     ULONG32      InitialApicId;                                                   
/*0x654*/     ULONG32      Stride;                                                          
/*0x658*/     UINT16       Group;                                                           
/*0x65A*/     UINT8        _PADDING0_[0x6];                                                 
/*0x660*/     UINT64       GroupSetMember;                                                  
/*0x668*/     UINT8        GroupIndex;                                                      
/*0x669*/     UINT8        _PADDING1_[0x7];                                                 
          }KPRCB, *PKPRCB;                                                                  
                                                                                            
          typedef struct _KPCR                             // 27 elements, 0x7F0 bytes (sizeof) 
          {                                                                                     
              union                                        // 2 elements, 0x38 bytes (sizeof)   
              {                                                                                 
/*0x000*/         struct _NT_TIB NtTib;                    // 8 elements, 0x38 bytes (sizeof)   
                  struct                                   // 7 elements, 0x38 bytes (sizeof)   
                  {                                                                             
/*0x000*/             union _KGDTENTRY64* GdtBase;                                              
/*0x008*/             struct _KTSS64* TssBase;                                                  
/*0x010*/             UINT64       UserRsp;                                                     
/*0x018*/             struct _KPCR* Self;                                                       
/*0x020*/             struct _KPRCB* CurrentPrcb;                                               
/*0x028*/             struct _KSPIN_LOCK_QUEUE* LockArray;                                      
/*0x030*/             VOID*        Used_Self;                                                   
                  };                                                                            
              };                                                                                
/*0x038*/     union _KIDTENTRY64* IdtBase;                                                      
/*0x040*/     UINT64       Unused[2];                                                           
/*0x050*/     UINT8        Irql;                                                                
/*0x051*/     UINT8        SecondLevelCacheAssociativity;                                       
/*0x052*/     UINT8        ObsoleteNumber;                                                      
/*0x053*/     UINT8        Fill0;                                                               
/*0x054*/     ULONG32      Unused0[3];                                                          
/*0x060*/     UINT16       MajorVersion;                                                        
/*0x062*/     UINT16       MinorVersion;                                                        
/*0x064*/     ULONG32      StallScaleFactor;                                                    
/*0x068*/     VOID*        Unused1[3];                                                          
/*0x080*/     ULONG32      KernelReserved[15];                                                  
/*0x0BC*/     ULONG32      SecondLevelCacheSize;                                                
/*0x0C0*/     ULONG32      HalReserved[16];                                                     
/*0x100*/     ULONG32      Unused2;                                                             
/*0x104*/     UINT8        _PADDING0_[0x4];                                                     
/*0x108*/     VOID*        KdVersionBlock;                                                      
/*0x110*/     VOID*        Unused3;                                                             
/*0x118*/     ULONG32      PcrAlign1[24];                                                       
/*0x178*/     UINT8        _PADDING1_[0x8];                                                     
/*0x180*/     struct _KPRCB Prcb;                          // 36 elements, 0x670 bytes (sizeof) 
          }KPCR, *PKPCR;                                                                        
                                                                                                
typedef struct _KPROCESS // 0 elements, 0x0 bytes (sizeof) 
{                                                          
}KPROCESS, *PKPROCESS;                                     
                                                           
          typedef struct _KSEMAPHORE            // 2 elements, 0x20 bytes (sizeof)  
          {                                                                         
/*0x000*/     struct _DISPATCHER_HEADER Header; // 29 elements, 0x18 bytes (sizeof) 
/*0x018*/     LONG32       Limit;                                                   
/*0x01C*/     UINT8        _PADDING0_[0x4];                                         
          }KSEMAPHORE, *PKSEMAPHORE;                                                
                                                                                    
          typedef struct _KSPIN_LOCK_QUEUE    // 2 elements, 0x10 bytes (sizeof) 
          {                                                                      
/*0x000*/     struct _KSPIN_LOCK_QUEUE* Next;                                    
/*0x008*/     UINT64*      Lock;                                                 
          }KSPIN_LOCK_QUEUE, *PKSPIN_LOCK_QUEUE;                                   
                                                                                 
          typedef struct _KSYSTEM_TIME // 3 elements, 0xC bytes (sizeof) 
          {                                                              
/*0x000*/     ULONG32      LowPart;                                      
/*0x004*/     LONG32       High1Time;                                    
/*0x008*/     LONG32       High2Time;                                    
          }KSYSTEM_TIME, *PKSYSTEM_TIME;                                  
                                                                         
typedef struct _KTHREAD // 0 elements, 0x0 bytes (sizeof) 
{                                                         
}KTHREAD, *PKTHREAD;                                      
                                                          
          typedef struct _KTSS64      // 8 elements, 0x68 bytes (sizeof) 
          {                                                              
/*0x000*/     ULONG32      Reserved0;                                    
/*0x004*/     UINT64       Rsp0;                                         
/*0x00C*/     UINT64       Rsp1;                                         
/*0x014*/     UINT64       Rsp2;                                         
/*0x01C*/     UINT64       Ist[8];                                       
/*0x05C*/     UINT64       Reserved1;                                    
/*0x064*/     UINT16       Reserved2;                                    
/*0x066*/     UINT16       IoMapBase;                                    
          }KTSS64, *PKTSS64;                                             
                                                                         
          typedef struct _XSTATE_FEATURE // 2 elements, 0x8 bytes (sizeof) 
          {                                                                
/*0x000*/     ULONG32      Offset;                                         
/*0x004*/     ULONG32      Size;                                           
          }XSTATE_FEATURE, *PXSTATE_FEATURE;                                  
                                                                           
          typedef struct _XSTATE_CONFIGURATION     // 4 elements, 0x210 bytes (sizeof) 
          {                                                                            
/*0x000*/     UINT64       EnabledFeatures;                                            
/*0x008*/     ULONG32      Size;                                                       
/*0x00C*/     ULONG32      OptimizedSave : 1;      // 0 BitPosition                    
/*0x010*/     struct _XSTATE_FEATURE Features[64];                                     
          }XSTATE_CONFIGURATION, *PXSTATE_CONFIGURATION;                                    
                                                                                       
          typedef struct _KUSER_SHARED_DATA                                // 75 elements, 0x5F0 bytes (sizeof) 
          {                                                                                                     
/*0x000*/     ULONG32      TickCountLowDeprecated;                                                              
/*0x004*/     ULONG32      TickCountMultiplier;                                                                 
/*0x008*/     struct _KSYSTEM_TIME InterruptTime;                          // 3 elements, 0xC bytes (sizeof)    
/*0x014*/     struct _KSYSTEM_TIME SystemTime;                             // 3 elements, 0xC bytes (sizeof)    
/*0x020*/     struct _KSYSTEM_TIME TimeZoneBias;                           // 3 elements, 0xC bytes (sizeof)    
/*0x02C*/     UINT16       ImageNumberLow;                                                                      
/*0x02E*/     UINT16       ImageNumberHigh;                                                                     
/*0x030*/     WCHAR        NtSystemRoot[260];                                                                   
/*0x238*/     ULONG32      MaxStackTraceDepth;                                                                  
/*0x23C*/     ULONG32      CryptoExponent;                                                                      
/*0x240*/     ULONG32      TimeZoneId;                                                                          
/*0x244*/     ULONG32      LargePageMinimum;                                                                    
/*0x248*/     ULONG32      Reserved2[7];                                                                        
/*0x264*/     enum _NT_PRODUCT_TYPE NtProductType;                                                              
/*0x268*/     UINT8        ProductTypeIsValid;                                                                  
/*0x269*/     UINT8        _PADDING0_[0x3];                                                                     
/*0x26C*/     ULONG32      NtMajorVersion;                                                                      
/*0x270*/     ULONG32      NtMinorVersion;                                                                      
/*0x274*/     UINT8        ProcessorFeatures[64];                                                               
/*0x2B4*/     ULONG32      Reserved1;                                                                           
/*0x2B8*/     ULONG32      Reserved3;                                                                           
/*0x2BC*/     ULONG32      TimeSlip;                                                                            
/*0x2C0*/     enum _ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;                                      
/*0x2C4*/     ULONG32      AltArchitecturePad[1];                                                               
/*0x2C8*/     union _LARGE_INTEGER SystemExpirationDate;                   // 4 elements, 0x8 bytes (sizeof)    
/*0x2D0*/     ULONG32      SuiteMask;                                                                           
/*0x2D4*/     UINT8        KdDebuggerEnabled;                                                                   
/*0x2D5*/     UINT8        NXSupportPolicy;                                                                     
/*0x2D6*/     UINT8        _PADDING1_[0x2];                                                                     
/*0x2D8*/     ULONG32      ActiveConsoleId;                                                                     
/*0x2DC*/     ULONG32      DismountCount;                                                                       
/*0x2E0*/     ULONG32      ComPlusPackage;                                                                      
/*0x2E4*/     ULONG32      LastSystemRITEventTickCount;                                                         
/*0x2E8*/     ULONG32      NumberOfPhysicalPages;                                                               
/*0x2EC*/     UINT8        SafeBootMode;                                                                        
              union                                                        // 2 elements, 0x1 bytes (sizeof)    
              {                                                                                                 
/*0x2ED*/         UINT8        TscQpcData;                                                                      
                  struct                                                   // 3 elements, 0x1 bytes (sizeof)    
                  {                                                                                             
/*0x2ED*/             UINT8        TscQpcEnabled : 1;                      // 0 BitPosition                     
/*0x2ED*/             UINT8        TscQpcSpareFlag : 1;                    // 1 BitPosition                     
/*0x2ED*/             UINT8        TscQpcShift : 6;                        // 2 BitPosition                     
                  };                                                                                            
              };                                                                                                
/*0x2EE*/     UINT8        TscQpcPad[2];                                                                        
              union                                                        // 2 elements, 0x4 bytes (sizeof)    
              {                                                                                                 
/*0x2F0*/         ULONG32      SharedDataFlags;                                                                 
                  struct                                                   // 8 elements, 0x4 bytes (sizeof)    
                  {                                                                                             
/*0x2F0*/             ULONG32      DbgErrorPortPresent : 1;                // 0 BitPosition                     
/*0x2F0*/             ULONG32      DbgElevationEnabled : 1;                // 1 BitPosition                     
/*0x2F0*/             ULONG32      DbgVirtEnabled : 1;                     // 2 BitPosition                     
/*0x2F0*/             ULONG32      DbgInstallerDetectEnabled : 1;          // 3 BitPosition                     
/*0x2F0*/             ULONG32      DbgSystemDllRelocated : 1;              // 4 BitPosition                     
/*0x2F0*/             ULONG32      DbgDynProcessorEnabled : 1;             // 5 BitPosition                     
/*0x2F0*/             ULONG32      DbgSEHValidationEnabled : 1;            // 6 BitPosition                     
/*0x2F0*/             ULONG32      SpareBits : 25;                         // 7 BitPosition                     
                  };                                                                                            
              };                                                                                                
/*0x2F4*/     ULONG32      DataFlagsPad[1];                                                                     
/*0x2F8*/     UINT64       TestRetInstruction;                                                                  
/*0x300*/     ULONG32      SystemCall;                                                                          
/*0x304*/     ULONG32      SystemCallReturn;                                                                    
/*0x308*/     UINT64       SystemCallPad[3];                                                                    
              union                                                        // 3 elements, 0xC bytes (sizeof)    
              {                                                                                                 
/*0x320*/         struct _KSYSTEM_TIME TickCount;                          // 3 elements, 0xC bytes (sizeof)    
/*0x320*/         UINT64       TickCountQuad;                                                                   
/*0x320*/         ULONG32      ReservedTickCountOverlay[3];                                                     
              };                                                                                                
/*0x32C*/     ULONG32      TickCountPad[1];                                                                     
/*0x330*/     ULONG32      Cookie;                                                                              
/*0x334*/     ULONG32      CookiePad[1];                                                                        
/*0x338*/     INT64        ConsoleSessionForegroundProcessId;                                                   
/*0x340*/     ULONG32      Wow64SharedInformation[16];                                                          
/*0x380*/     UINT16       UserModeGlobalLogger[16];                                                            
/*0x3A0*/     ULONG32      ImageFileExecutionOptions;                                                           
/*0x3A4*/     ULONG32      LangGenerationCount;                                                                 
/*0x3A8*/     UINT64       Reserved5;                                                                           
/*0x3B0*/     UINT64       InterruptTimeBias;                                                                   
/*0x3B8*/     UINT64       TscQpcBias;                                                                          
/*0x3C0*/     ULONG32      ActiveProcessorCount;                                                                
/*0x3C4*/     UINT16       ActiveGroupCount;                                                                    
/*0x3C6*/     UINT16       Reserved4;                                                                           
/*0x3C8*/     ULONG32      AitSamplingValue;                                                                    
/*0x3CC*/     ULONG32      AppCompatFlag;                                                                       
/*0x3D0*/     UINT64       SystemDllNativeRelocation;                                                           
/*0x3D8*/     ULONG32      SystemDllWowRelocation;                                                              
/*0x3DC*/     ULONG32      XStatePad[1];                                                                        
/*0x3E0*/     struct _XSTATE_CONFIGURATION XState;                         // 4 elements, 0x210 bytes (sizeof)  
          }KUSER_SHARED_DATA, *PKUSER_SHARED_DATA;                                                              
                                                                                                                
          typedef struct _LARGE_UNICODE_STRING     // 4 elements, 0x10 bytes (sizeof) 
          {                                                                           
/*0x000*/     ULONG32      Length;                                                    
              struct                               // 2 elements, 0x4 bytes (sizeof)  
              {                                                                       
/*0x004*/         ULONG32      MaximumLength : 31; // 0 BitPosition                   
/*0x004*/         ULONG32      bAnsi : 1;          // 31 BitPosition                  
              };                                                                      
/*0x008*/     UINT16*      Buffer;                                                    
          }LARGE_UNICODE_STRING, *PLARGE_UNICODE_STRING;                                   
                                                                                      
          typedef struct _LIGATURE1            // 3 elements, 0x6 bytes (sizeof) 
          {                                                                      
/*0x000*/     UINT8        VirtualKey;                                           
/*0x001*/     UINT8        _PADDING0_[0x1];                                      
/*0x002*/     UINT16       ModificationNumber;                                   
/*0x004*/     WCHAR        wch[1];                                               
          }LIGATURE1, *PLIGATURE1;                                               
                                                                                 
          typedef struct _LIST_ENTRY32 // 2 elements, 0x8 bytes (sizeof) 
          {                                                              
/*0x000*/     ULONG32      Flink;                                        
/*0x004*/     ULONG32      Blink;                                        
          }LIST_ENTRY32, *PLIST_ENTRY32;                                  
                                                                         
          typedef struct _LIST_ENTRY64 // 2 elements, 0x10 bytes (sizeof) 
          {                                                               
/*0x000*/     UINT64       Flink;                                         
/*0x008*/     UINT64       Blink;                                         
          }LIST_ENTRY64, *PLIST_ENTRY64;                                   
                                                                          
          typedef struct _LOOKASIDE_LIST_EX     // 1 elements, 0x60 bytes (sizeof)  
          {                                                                         
/*0x000*/     struct _GENERAL_LOOKASIDE_POOL L; // 22 elements, 0x60 bytes (sizeof) 
          }LOOKASIDE_LIST_EX, *PLOOKASIDE_LIST_EX;                                    
                                                                                    
          typedef struct _MAGNIFICATION_INPUT_TRANSFORM // 5 elements, 0x30 bytes (sizeof) 
          {                                                                                
/*0x000*/     struct _tagRECT rcSource;                 // 4 elements, 0x10 bytes (sizeof) 
/*0x010*/     struct _tagRECT rcScreen;                 // 4 elements, 0x10 bytes (sizeof) 
/*0x020*/     struct _tagTHREADINFO* ptiMagThreadInfo;                                     
/*0x028*/     INT32        magFactorX;                                                     
/*0x02C*/     INT32        magFactorY;                                                     
          }MAGNIFICATION_INPUT_TRANSFORM, *PMAGNIFICATION_INPUT_TRANSFORM;                                   
                                                                                           
          typedef struct _MAILSLOT_CREATE_PARAMETERS // 4 elements, 0x18 bytes (sizeof) 
          {                                                                             
/*0x000*/     ULONG32      MailslotQuota;                                               
/*0x004*/     ULONG32      MaximumMessageSize;                                          
/*0x008*/     union _LARGE_INTEGER ReadTimeout;      // 4 elements, 0x8 bytes (sizeof)  
/*0x010*/     UINT8        TimeoutSpecified;                                            
/*0x011*/     UINT8        _PADDING0_[0x7];                                             
          }MAILSLOT_CREATE_PARAMETERS, *PMAILSLOT_CREATE_PARAMETERS;                                   
                                                                                        
          typedef struct _MDL               // 8 elements, 0x30 bytes (sizeof) 
          {                                                                    
/*0x000*/     struct _MDL* Next;                                               
/*0x008*/     INT16        Size;                                               
/*0x00A*/     INT16        MdlFlags;                                           
/*0x00C*/     UINT8        _PADDING0_[0x4];                                    
/*0x010*/     struct _EPROCESS* Process;                                       
/*0x018*/     VOID*        MappedSystemVa;                                     
/*0x020*/     VOID*        StartVa;                                            
/*0x028*/     ULONG32      ByteCount;                                          
/*0x02C*/     ULONG32      ByteOffset;                                         
          }MDL, *PMDL;                                                         
                                                                               
          typedef struct _MODIFIERS         // 3 elements, 0x10 bytes (sizeof) 
          {                                                                    
/*0x000*/     struct _VK_TO_BIT* pVkToBit;                                     
/*0x008*/     UINT16       wMaxModBits;                                        
/*0x00A*/     UINT8        ModNumber[0];                                       
/*0x00A*/     UINT8        _PADDING0_[0x6];                                    
          }MODIFIERS, *PMODIFIERS;                                             
                                                                               
          typedef struct _tagPOINT // 2 elements, 0x8 bytes (sizeof) 
          {                                                          
/*0x000*/     LONG32       x;                                        
/*0x004*/     LONG32       y;                                        
          }tagPOINT, *PtagPOINT;                                     
                                                                     
          typedef struct _MOVESIZEDATA                                 // 55 elements, 0xF0 bytes (sizeof) 
          {                                                                                                
/*0x000*/     struct _tagWND* spwnd;                                                                       
/*0x008*/     struct _tagRECT rcDrag;                                  // 4 elements, 0x10 bytes (sizeof)  
/*0x018*/     struct _tagRECT rcDragCursor;                            // 4 elements, 0x10 bytes (sizeof)  
/*0x028*/     struct _tagRECT rcPreview;                               // 4 elements, 0x10 bytes (sizeof)  
/*0x038*/     struct _tagRECT rcPreviewCursor;                         // 4 elements, 0x10 bytes (sizeof)  
/*0x048*/     struct _tagRECT rcParent;                                // 4 elements, 0x10 bytes (sizeof)  
/*0x058*/     struct _tagPOINT ptMinTrack;                             // 2 elements, 0x8 bytes (sizeof)   
/*0x060*/     struct _tagPOINT ptMaxTrack;                             // 2 elements, 0x8 bytes (sizeof)   
/*0x068*/     struct _tagRECT rcWindow;                                // 4 elements, 0x10 bytes (sizeof)  
/*0x078*/     struct _tagRECT rcNormalStartCheckPt;                    // 4 elements, 0x10 bytes (sizeof)  
/*0x088*/     INT32        dxMouse;                                                                        
/*0x08C*/     INT32        dyMouse;                                                                        
/*0x090*/     INT32        cmd;                                                                            
/*0x094*/     INT32        impx;                                                                           
/*0x098*/     INT32        impy;                                                                           
/*0x09C*/     struct _tagPOINT ptRestore;                              // 2 elements, 0x8 bytes (sizeof)   
              union                                                    // 2 elements, 0x4 bytes (sizeof)   
              {                                                                                            
/*0x0A4*/         ULONG32      Flags;                                                                      
                  struct                                               // 27 elements, 0x4 bytes (sizeof)  
                  {                                                                                        
/*0x0A4*/             UINT32       fInitSize : 1;                      // 0 BitPosition                    
/*0x0A4*/             UINT32       fmsKbd : 1;                         // 1 BitPosition                    
/*0x0A4*/             UINT32       fLockWindowUpdate : 1;              // 2 BitPosition                    
/*0x0A4*/             UINT32       fTrackCancelled : 1;                // 3 BitPosition                    
/*0x0A4*/             UINT32       fForeground : 1;                    // 4 BitPosition                    
/*0x0A4*/             UINT32       fDragFullWindows : 1;               // 5 BitPosition                    
/*0x0A4*/             UINT32       fOffScreen : 1;                     // 6 BitPosition                    
/*0x0A4*/             UINT32       fMoveFromMax : 1;                   // 7 BitPosition                    
/*0x0A4*/             UINT32       fVerticallyMaximizedLeft : 1;       // 8 BitPosition                    
/*0x0A4*/             UINT32       fVerticallyMaximizedRight : 1;      // 9 BitPosition                    
/*0x0A4*/             UINT32       fSnapSizing : 1;                    // 10 BitPosition                   
/*0x0A4*/             UINT32       fSnapMoving : 1;                    // 11 BitPosition                   
/*0x0A4*/             UINT32       fWindowWasSuperMaximized : 1;       // 12 BitPosition                   
/*0x0A4*/             UINT32       fStartVerticallyMaximizedLeft : 1;  // 13 BitPosition                   
/*0x0A4*/             UINT32       fStartVerticallyMaximizedRight : 1; // 14 BitPosition                   
/*0x0A4*/             UINT32       fThresholdSelector : 3;             // 15 BitPosition                   
/*0x0A4*/             UINT32       fCheckPtForcefullyRestored : 1;     // 18 BitPosition                   
/*0x0A4*/             UINT32       fForceSizing : 1;                   // 19 BitPosition                   
/*0x0A4*/             UINT32       fIsMoveSizeLoop : 1;                // 20 BitPosition                   
/*0x0A4*/             UINT32       fIsHitPtOffScreen : 1;              // 21 BitPosition                   
/*0x0A4*/             UINT32       fSnapSizingTemporaryAllowed : 1;    // 22 BitPosition                   
/*0x0A4*/             UINT32       fSnapMovingTemporaryAllowed : 1;    // 23 BitPosition                   
/*0x0A4*/             UINT32       frcNormalCheckPtValid : 1;          // 24 BitPosition                   
/*0x0A4*/             UINT32       fHasPreviewRect : 1;                // 25 BitPosition                   
/*0x0A4*/             UINT32       fUsePreviewRect : 1;                // 26 BitPosition                   
/*0x0A4*/             UINT32       fHasSoftwareCursor : 1;             // 27 BitPosition                   
/*0x0A4*/             UINT32       Unused : 4;                         // 28 BitPosition                   
                  };                                                                                       
              };                                                                                           
/*0x0A8*/     struct _tagMONITOR* pStartMonitorCurrentHitTarget;                                           
/*0x0B0*/     enum _eTHRESHOLD_MARGIN_DIRECTION StartCurrentHitTarget;                                     
/*0x0B4*/     UINT8        _PADDING0_[0x4];                                                                
/*0x0B8*/     struct _tagMONITOR* pMonitorCurrentHitTarget;                                                
/*0x0C0*/     enum _eTHRESHOLD_MARGIN_DIRECTION CurrentHitTarget;                                          
/*0x0C4*/     enum _MOVERECT_STYLE MoveRectStyle;                                                          
/*0x0C8*/     struct _tagPOINT ptHitWindowRelative;                    // 2 elements, 0x8 bytes (sizeof)   
/*0x0D0*/     struct _tagPOINT ptStartHitWindowRelative;               // 2 elements, 0x8 bytes (sizeof)   
/*0x0D8*/     struct _tagPOINT ptLastTrack;                            // 2 elements, 0x8 bytes (sizeof)   
/*0x0E0*/     ULONG32      ulCountDragOutOfTopTarget;                                                      
/*0x0E4*/     ULONG32      ulCountDragOutOfLeftRightTarget;                                                
/*0x0E8*/     ULONG32      ulCountSizeOutOfTopBottomTarget;                                                
/*0x0EC*/     UINT8        _PADDING1_[0x4];                                                                
          }MOVESIZEDATA, *PMOVESIZEDATA;                                                                   
                                                                                                           
          typedef struct _NAMED_PIPE_CREATE_PARAMETERS // 8 elements, 0x28 bytes (sizeof) 
          {                                                                               
/*0x000*/     ULONG32      NamedPipeType;                                                 
/*0x004*/     ULONG32      ReadMode;                                                      
/*0x008*/     ULONG32      CompletionMode;                                                
/*0x00C*/     ULONG32      MaximumInstances;                                              
/*0x010*/     ULONG32      InboundQuota;                                                  
/*0x014*/     ULONG32      OutboundQuota;                                                 
/*0x018*/     union _LARGE_INTEGER DefaultTimeout;     // 4 elements, 0x8 bytes (sizeof)  
/*0x020*/     UINT8        TimeoutSpecified;                                              
/*0x021*/     UINT8        _PADDING0_[0x7];                                               
          }NAMED_PIPE_CREATE_PARAMETERS, *PNAMED_PIPE_CREATE_PARAMETERS;                                   
                                                                                          
          typedef struct _NPAGED_LOOKASIDE_LIST // 1 elements, 0x80 bytes (sizeof)  
          {                                                                         
/*0x000*/     struct _GENERAL_LOOKASIDE L;      // 22 elements, 0x80 bytes (sizeof) 
          }NPAGED_LOOKASIDE_LIST, *PNPAGED_LOOKASIDE_LIST;                                    
                                                                                    
          typedef struct _OBJECT_ATTRIBUTES          // 6 elements, 0x30 bytes (sizeof) 
          {                                                                             
/*0x000*/     ULONG32      Length;                                                      
/*0x004*/     UINT8        _PADDING0_[0x4];                                             
/*0x008*/     VOID*        RootDirectory;                                               
/*0x010*/     struct _UNICODE_STRING* ObjectName;                                       
/*0x018*/     ULONG32      Attributes;                                                  
/*0x01C*/     UINT8        _PADDING1_[0x4];                                             
/*0x020*/     VOID*        SecurityDescriptor;                                          
/*0x028*/     VOID*        SecurityQualityOfService;                                    
          }OBJECT_ATTRIBUTES, *POBJECT_ATTRIBUTES;                                      
                                                                                        
          typedef struct _OBJECT_DUMP_CONTROL // 2 elements, 0x10 bytes (sizeof) 
          {                                                                      
/*0x000*/     VOID*        Stream;                                               
/*0x008*/     ULONG32      Detail;                                               
/*0x00C*/     UINT8        _PADDING0_[0x4];                                      
          }OBJECT_DUMP_CONTROL, *POBJECT_DUMP_CONTROL;                                   
                                                                                 
          typedef struct _OBJECT_HANDLE_INFORMATION // 2 elements, 0x8 bytes (sizeof) 
          {                                                                           
/*0x000*/     ULONG32      HandleAttributes;                                          
/*0x004*/     ULONG32      GrantedAccess;                                             
          }OBJECT_HANDLE_INFORMATION, *POBJECT_HANDLE_INFORMATION;                                  
                                                                                      
          typedef struct _OBJECT_NAME_INFORMATION // 1 elements, 0x10 bytes (sizeof) 
          {                                                                          
/*0x000*/     struct _UNICODE_STRING Name;        // 3 elements, 0x10 bytes (sizeof) 
          }OBJECT_NAME_INFORMATION, *POBJECT_NAME_INFORMATION;                                   
                                                                                     
          typedef struct _OBJECT_TYPE_INITIALIZER                                                                    // 25 elements, 0x70 bytes (sizeof) 
          {                                                                                                                                              
/*0x000*/     UINT16       Length;                                                                                                                       
              union                                                                                                  // 2 elements, 0x1 bytes (sizeof)   
              {                                                                                                                                          
/*0x002*/         UINT8        ObjectTypeFlags;                                                                                                          
                  struct                                                                                             // 7 elements, 0x1 bytes (sizeof)   
                  {                                                                                                                                      
/*0x002*/             UINT8        CaseInsensitive : 1;                                                              // 0 BitPosition                    
/*0x002*/             UINT8        UnnamedObjectsOnly : 1;                                                           // 1 BitPosition                    
/*0x002*/             UINT8        UseDefaultObject : 1;                                                             // 2 BitPosition                    
/*0x002*/             UINT8        SecurityRequired : 1;                                                             // 3 BitPosition                    
/*0x002*/             UINT8        MaintainHandleCount : 1;                                                          // 4 BitPosition                    
/*0x002*/             UINT8        MaintainTypeList : 1;                                                             // 5 BitPosition                    
/*0x002*/             UINT8        SupportsObjectCallbacks : 1;                                                      // 6 BitPosition                    
                  };                                                                                                                                     
              };                                                                                                                                         
/*0x004*/     ULONG32      ObjectTypeCode;                                                                                                               
/*0x008*/     ULONG32      InvalidAttributes;                                                                                                            
/*0x00C*/     struct _GENERIC_MAPPING GenericMapping;                                                                // 4 elements, 0x10 bytes (sizeof)  
/*0x01C*/     ULONG32      ValidAccessMask;                                                                                                              
/*0x020*/     ULONG32      RetainAccess;                                                                                                                 
/*0x024*/     enum _POOL_TYPE PoolType;                                                                                                                  
/*0x028*/     ULONG32      DefaultPagedPoolCharge;                                                                                                       
/*0x02C*/     ULONG32      DefaultNonPagedPoolCharge;                                                                                                    
/*0x030*/     FUNCT_00A3_09D1_DumpProcedure* DumpProcedure;                                                                                              
/*0x038*/     FUNCT_005B_09D9_OpenProcedure* OpenProcedure;                                                                                              
/*0x040*/     FUNCT_00A3_09E7_CloseProcedure* CloseProcedure;                                                                                            
/*0x048*/     FUNCT_00A3_0468_Free_InterfaceReference_InterfaceDereference_DeleteProcedure_pfnFree* DeleteProcedure;                                     
/*0x050*/     FUNCT_005B_09ED_ParseProcedure* ParseProcedure;                                                                                            
/*0x058*/     FUNCT_005B_09F9_SecurityProcedure* SecurityProcedure;                                                                                      
/*0x060*/     FUNCT_005B_0A0A_QueryNameProcedure* QueryNameProcedure;                                                                                    
/*0x068*/     FUNCT_0065_0A15_OkayToCloseProcedure* OkayToCloseProcedure;                                                                                
          }OBJECT_TYPE_INITIALIZER, *POBJECT_TYPE_INITIALIZER;                                                                                           
                                                                                                                                                         
          typedef struct _OBJECT_TYPE                   // 12 elements, 0xD0 bytes (sizeof) 
          {                                                                                 
/*0x000*/     struct _LIST_ENTRY TypeList;              // 2 elements, 0x10 bytes (sizeof)  
/*0x010*/     struct _UNICODE_STRING Name;              // 3 elements, 0x10 bytes (sizeof)  
/*0x020*/     VOID*        DefaultObject;                                                   
/*0x028*/     UINT8        Index;                                                           
/*0x029*/     UINT8        _PADDING0_[0x3];                                                 
/*0x02C*/     ULONG32      TotalNumberOfObjects;                                            
/*0x030*/     ULONG32      TotalNumberOfHandles;                                            
/*0x034*/     ULONG32      HighWaterNumberOfObjects;                                        
/*0x038*/     ULONG32      HighWaterNumberOfHandles;                                        
/*0x03C*/     UINT8        _PADDING1_[0x4];                                                 
/*0x040*/     struct _OBJECT_TYPE_INITIALIZER TypeInfo; // 25 elements, 0x70 bytes (sizeof) 
/*0x0B0*/     struct _EX_PUSH_LOCK TypeLock;            // 7 elements, 0x8 bytes (sizeof)   
/*0x0B8*/     ULONG32      Key;                                                             
/*0x0BC*/     UINT8        _PADDING2_[0x4];                                                 
/*0x0C0*/     struct _LIST_ENTRY CallbackList;          // 2 elements, 0x10 bytes (sizeof)  
          }OBJECT_TYPE, *POBJECT_TYPE;                                                      
                                                                                            
          typedef struct _PAGED_LOOKASIDE_LIST // 1 elements, 0x80 bytes (sizeof)  
          {                                                                        
/*0x000*/     struct _GENERAL_LOOKASIDE L;     // 22 elements, 0x80 bytes (sizeof) 
          }PAGED_LOOKASIDE_LIST, *PPAGED_LOOKASIDE_LIST;                                    
                                                                                   
          typedef union _ULARGE_INTEGER  // 4 elements, 0x8 bytes (sizeof) 
          {                                                                
              struct                     // 2 elements, 0x8 bytes (sizeof) 
              {                                                            
/*0x000*/         ULONG32      LowPart;                                    
/*0x004*/         ULONG32      HighPart;                                   
              };                                                           
              struct                     // 2 elements, 0x8 bytes (sizeof) 
              {                                                            
/*0x000*/         ULONG32      LowPart;                                    
/*0x004*/         ULONG32      HighPart;                                   
              }u;                                                          
/*0x000*/     UINT64       QuadPart;                                       
          }ULARGE_INTEGER, *PULARGE_INTEGER;                                  
                                                                           
          typedef struct _PEB                                                      // 91 elements, 0x380 bytes (sizeof) 
          {                                                                                                             
/*0x000*/     UINT8        InheritedAddressSpace;                                                                       
/*0x001*/     UINT8        ReadImageFileExecOptions;                                                                    
/*0x002*/     UINT8        BeingDebugged;                                                                               
              union                                                                // 2 elements, 0x1 bytes (sizeof)    
              {                                                                                                         
/*0x003*/         UINT8        BitField;                                                                                
                  struct                                                           // 6 elements, 0x1 bytes (sizeof)    
                  {                                                                                                     
/*0x003*/             UINT8        ImageUsesLargePages : 1;                        // 0 BitPosition                     
/*0x003*/             UINT8        IsProtectedProcess : 1;                         // 1 BitPosition                     
/*0x003*/             UINT8        IsLegacyProcess : 1;                            // 2 BitPosition                     
/*0x003*/             UINT8        IsImageDynamicallyRelocated : 1;                // 3 BitPosition                     
/*0x003*/             UINT8        SkipPatchingUser32Forwarders : 1;               // 4 BitPosition                     
/*0x003*/             UINT8        SpareBits : 3;                                  // 5 BitPosition                     
                  };                                                                                                    
              };                                                                                                        
/*0x008*/     VOID*        Mutant;                                                                                      
/*0x010*/     VOID*        ImageBaseAddress;                                                                            
/*0x018*/     struct _PEB_LDR_DATA* Ldr;                                                                                
/*0x020*/     struct _RTL_USER_PROCESS_PARAMETERS* ProcessParameters;                                                   
/*0x028*/     VOID*        SubSystemData;                                                                               
/*0x030*/     VOID*        ProcessHeap;                                                                                 
/*0x038*/     struct _RTL_CRITICAL_SECTION* FastPebLock;                                                                
/*0x040*/     VOID*        AtlThunkSListPtr;                                                                            
/*0x048*/     VOID*        IFEOKey;                                                                                     
              union                                                                // 2 elements, 0x4 bytes (sizeof)    
              {                                                                                                         
/*0x050*/         ULONG32      CrossProcessFlags;                                                                       
                  struct                                                           // 6 elements, 0x4 bytes (sizeof)    
                  {                                                                                                     
/*0x050*/             ULONG32      ProcessInJob : 1;                               // 0 BitPosition                     
/*0x050*/             ULONG32      ProcessInitializing : 1;                        // 1 BitPosition                     
/*0x050*/             ULONG32      ProcessUsingVEH : 1;                            // 2 BitPosition                     
/*0x050*/             ULONG32      ProcessUsingVCH : 1;                            // 3 BitPosition                     
/*0x050*/             ULONG32      ProcessUsingFTH : 1;                            // 4 BitPosition                     
/*0x050*/             ULONG32      ReservedBits0 : 27;                             // 5 BitPosition                     
                  };                                                                                                    
              };                                                                                                        
              union                                                                // 2 elements, 0x8 bytes (sizeof)    
              {                                                                                                         
/*0x058*/         VOID*        KernelCallbackTable;                                                                     
/*0x058*/         VOID*        UserSharedInfoPtr;                                                                       
              };                                                                                                        
/*0x060*/     ULONG32      SystemReserved[1];                                                                           
/*0x064*/     ULONG32      AtlThunkSListPtr32;                                                                          
/*0x068*/     VOID*        ApiSetMap;                                                                                   
/*0x070*/     ULONG32      TlsExpansionCounter;                                                                         
/*0x074*/     UINT8        _PADDING0_[0x4];                                                                             
/*0x078*/     VOID*        TlsBitmap;                                                                                   
/*0x080*/     ULONG32      TlsBitmapBits[2];                                                                            
/*0x088*/     VOID*        ReadOnlySharedMemoryBase;                                                                    
/*0x090*/     VOID*        HotpatchInformation;                                                                         
/*0x098*/     VOID**       ReadOnlyStaticServerData;                                                                    
/*0x0A0*/     VOID*        AnsiCodePageData;                                                                            
/*0x0A8*/     VOID*        OemCodePageData;                                                                             
/*0x0B0*/     VOID*        UnicodeCaseTableData;                                                                        
/*0x0B8*/     ULONG32      NumberOfProcessors;                                                                          
/*0x0BC*/     ULONG32      NtGlobalFlag;                                                                                
/*0x0C0*/     union _LARGE_INTEGER CriticalSectionTimeout;                         // 4 elements, 0x8 bytes (sizeof)    
/*0x0C8*/     UINT64       HeapSegmentReserve;                                                                          
/*0x0D0*/     UINT64       HeapSegmentCommit;                                                                           
/*0x0D8*/     UINT64       HeapDeCommitTotalFreeThreshold;                                                              
/*0x0E0*/     UINT64       HeapDeCommitFreeBlockThreshold;                                                              
/*0x0E8*/     ULONG32      NumberOfHeaps;                                                                               
/*0x0EC*/     ULONG32      MaximumNumberOfHeaps;                                                                        
/*0x0F0*/     VOID**       ProcessHeaps;                                                                                
/*0x0F8*/     VOID*        GdiSharedHandleTable;                                                                        
/*0x100*/     VOID*        ProcessStarterHelper;                                                                        
/*0x108*/     ULONG32      GdiDCAttributeList;                                                                          
/*0x10C*/     UINT8        _PADDING1_[0x4];                                                                             
/*0x110*/     struct _RTL_CRITICAL_SECTION* LoaderLock;                                                                 
/*0x118*/     ULONG32      OSMajorVersion;                                                                              
/*0x11C*/     ULONG32      OSMinorVersion;                                                                              
/*0x120*/     UINT16       OSBuildNumber;                                                                               
/*0x122*/     UINT16       OSCSDVersion;                                                                                
/*0x124*/     ULONG32      OSPlatformId;                                                                                
/*0x128*/     ULONG32      ImageSubsystem;                                                                              
/*0x12C*/     ULONG32      ImageSubsystemMajorVersion;                                                                  
/*0x130*/     ULONG32      ImageSubsystemMinorVersion;                                                                  
/*0x134*/     UINT8        _PADDING2_[0x4];                                                                             
/*0x138*/     UINT64       ActiveProcessAffinityMask;                                                                   
/*0x140*/     ULONG32      GdiHandleBuffer[60];                                                                         
/*0x230*/     FUNCT_00A3_0284_PostProcessInitRoutine* PostProcessInitRoutine;                                           
/*0x238*/     VOID*        TlsExpansionBitmap;                                                                          
/*0x240*/     ULONG32      TlsExpansionBitmapBits[32];                                                                  
/*0x2C0*/     ULONG32      SessionId;                                                                                   
/*0x2C4*/     UINT8        _PADDING3_[0x4];                                                                             
/*0x2C8*/     union _ULARGE_INTEGER AppCompatFlags;                                // 4 elements, 0x8 bytes (sizeof)    
/*0x2D0*/     union _ULARGE_INTEGER AppCompatFlagsUser;                            // 4 elements, 0x8 bytes (sizeof)    
/*0x2D8*/     VOID*        pShimData;                                                                                   
/*0x2E0*/     VOID*        AppCompatInfo;                                                                               
/*0x2E8*/     struct _UNICODE_STRING CSDVersion;                                   // 3 elements, 0x10 bytes (sizeof)   
/*0x2F8*/     struct _ACTIVATION_CONTEXT_DATA* ActivationContextData;                                                   
/*0x300*/     struct _ASSEMBLY_STORAGE_MAP* ProcessAssemblyStorageMap;                                                  
/*0x308*/     struct _ACTIVATION_CONTEXT_DATA* SystemDefaultActivationContextData;                                      
/*0x310*/     struct _ASSEMBLY_STORAGE_MAP* SystemAssemblyStorageMap;                                                   
/*0x318*/     UINT64       MinimumStackCommit;                                                                          
/*0x320*/     struct _FLS_CALLBACK_INFO* FlsCallback;                                                                   
/*0x328*/     struct _LIST_ENTRY FlsListHead;                                      // 2 elements, 0x10 bytes (sizeof)   
/*0x338*/     VOID*        FlsBitmap;                                                                                   
/*0x340*/     ULONG32      FlsBitmapBits[4];                                                                            
/*0x350*/     ULONG32      FlsHighIndex;                                                                                
/*0x354*/     UINT8        _PADDING4_[0x4];                                                                             
/*0x358*/     VOID*        WerRegistrationData;                                                                         
/*0x360*/     VOID*        WerShipAssertPtr;                                                                            
/*0x368*/     VOID*        pContextData;                                                                                
/*0x370*/     VOID*        pImageHeaderHash;                                                                            
              union                                                                // 2 elements, 0x4 bytes (sizeof)    
              {                                                                                                         
/*0x378*/         ULONG32      TracingFlags;                                                                            
                  struct                                                           // 3 elements, 0x4 bytes (sizeof)    
                  {                                                                                                     
/*0x378*/             ULONG32      HeapTracingEnabled : 1;                         // 0 BitPosition                     
/*0x378*/             ULONG32      CritSecTracingEnabled : 1;                      // 1 BitPosition                     
/*0x378*/             ULONG32      SpareTracingBits : 30;                          // 2 BitPosition                     
                  };                                                                                                    
              };                                                                                                        
          }PEB, *PPEB;                                                                                                  
                                                                                                                        
          typedef struct _PEB_LDR_DATA                            // 9 elements, 0x58 bytes (sizeof) 
          {                                                                                          
/*0x000*/     ULONG32      Length;                                                                   
/*0x004*/     UINT8        Initialized;                                                              
/*0x005*/     UINT8        _PADDING0_[0x3];                                                          
/*0x008*/     VOID*        SsHandle;                                                                 
/*0x010*/     struct _LIST_ENTRY InLoadOrderModuleList;           // 2 elements, 0x10 bytes (sizeof) 
/*0x020*/     struct _LIST_ENTRY InMemoryOrderModuleList;         // 2 elements, 0x10 bytes (sizeof) 
/*0x030*/     struct _LIST_ENTRY InInitializationOrderModuleList; // 2 elements, 0x10 bytes (sizeof) 
/*0x040*/     VOID*        EntryInProgress;                                                          
/*0x048*/     UINT8        ShutdownInProgress;                                                       
/*0x049*/     UINT8        _PADDING1_[0x7];                                                          
/*0x050*/     VOID*        ShutdownThreadId;                                                         
          }PEB_LDR_DATA, *PPEB_LDR_DATA;                                                             
                                                                                                     
          typedef struct _PFNCLIENT                                                                                                                                                                                                                                                                                                                                                                                                                                                                            // 23 elements, 0xB8 bytes (sizeof) 
          {
/*0x000*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnScrollBarWndProc;                                          
/*0x008*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnTitleWndProc;                                              
/*0x010*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnMenuWndProc;                                               
/*0x018*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnDesktopWndProc;                                            
/*0x020*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnDefWindowProc;                                             
/*0x028*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnMessageWindowProc;                                         
/*0x030*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnSwitchWindowProc;                                          
/*0x038*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnButtonWndProc;                                             
/*0x040*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnComboBoxWndProc;                                           
/*0x048*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnComboListBoxProc;                                          
/*0x050*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnDialogWndProc;                                             
/*0x058*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnEditWndProc;                                               
/*0x060*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnListBoxWndProc;                                            
/*0x068*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnMDIClientWndProc;                                          
/*0x070*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnStaticWndProc;                                             
/*0x078*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnImeWndProc;                                                
/*0x080*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnGhostWndProc;                                              
/*0x088*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnHkINLPCWPSTRUCT;                                           
/*0x090*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnHkINLPCWPRETSTRUCT;                                        
/*0x098*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnDispatchHook;                                              
/*0x0A0*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnDispatchDefWindowProc;                                     
/*0x0A8*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnDispatchMessage;                                           
/*0x0B0*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnMDIActivateDlgProc;                                        
          }

          typedef struct _PFNCLIENTWORKER                                                                                                                                                                                                                                                                                                                                                                                                                                                                 // 11 elements, 0x58 bytes (sizeof) 
          {
/*0x000*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnButtonWndProc;                                        
/*0x008*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnComboBoxWndProc;                                      
/*0x010*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnComboListBoxProc;                                     
/*0x018*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnDialogWndProc;                                        
/*0x020*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnEditWndProc;                                          
/*0x028*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnListBoxWndProc;                                       
/*0x030*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnMDIClientWndProc;                                     
/*0x038*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnStaticWndProc;                                        
/*0x040*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnImeWndProc;                                           
/*0x048*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnGhostWndProc;                                         
/*0x050*/     FUNCT_0075_146D_pfnScrollBarWndProc_pfnTitleWndProc_pfnMenuWndProc_pfnDesktopWndProc_pfnDefWindowProc_pfnMessageWindowProc_pfnSwitchWindowProc_pfnButtonWndProc_pfnComboBoxWndProc_pfnComboListBoxProc_pfnDialogWndProc_pfnEditWndProc_pfnListBoxWndProc_pfnMDIClientWndProc_pfnStaticWndProc_pfnImeWndProc_pfnGhostWndProc_pfnHkINLPCWPSTRUCT_pfnHkINLPCWPRETSTRUCT_pfnDispatchHook_pfnDispatchDefWindowProc_pfnDispatchMessage_pfnMDIActivateDlgProc_pfnCtfHookProc* pfnCtfHookProc;                                          
          }

          typedef struct _POWER_SEQUENCE // 3 elements, 0xC bytes (sizeof) 
          {                                                                
/*0x000*/     ULONG32      SequenceD1;                                     
/*0x004*/     ULONG32      SequenceD2;                                     
/*0x008*/     ULONG32      SequenceD3;                                     
          }POWER_SEQUENCE, *PPOWER_SEQUENCE;                                  
                                                                           
          typedef struct _PROCESSOR_NUMBER // 3 elements, 0x4 bytes (sizeof) 
          {                                                                  
/*0x000*/     UINT16       Group;                                            
/*0x002*/     UINT8        Number;                                           
/*0x003*/     UINT8        Reserved;                                         
          }PROCESSOR_NUMBER, *PPROCESSOR_NUMBER;                                  
                                                                             
          typedef struct _PROCMARKHEAD      // 4 elements, 0x20 bytes (sizeof) 
          {                                                                    
/*0x000*/     VOID*        h;                                                  
/*0x008*/     ULONG32      cLockObj;                                           
/*0x00C*/     UINT8        _PADDING0_[0x4];                                    
/*0x010*/     ULONG32      hTaskWow;                                           
/*0x014*/     UINT8        _PADDING1_[0x4];                                    
/*0x018*/     struct _tagPROCESSINFO* ppi;                                     
          }PROCMARKHEAD, *PPROCMARKHEAD;                                       
                                                                               
          typedef struct _QUAD                     // 2 elements, 0x8 bytes (sizeof) 
          {                                                                          
              union                                // 2 elements, 0x8 bytes (sizeof) 
              {                                                                      
/*0x000*/         INT64        UseThisFieldToCopy;                                   
/*0x000*/         FLOAT64      DoNotUseThisField;                                    
              };                                                                     
          }QUAD, *PQUAD;                                                             
                                                                                     
          typedef struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME        // 3 elements, 0x18 bytes (sizeof) 
          {                                                                                            
/*0x000*/     struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME* Previous;                                    
/*0x008*/     struct _ACTIVATION_CONTEXT* ActivationContext;                                           
/*0x010*/     ULONG32      Flags;                                                                      
/*0x014*/     UINT8        _PADDING0_[0x4];                                                            
          }RTL_ACTIVATION_CONTEXT_STACK_FRAME, *PRTL_ACTIVATION_CONTEXT_STACK_FRAME;                                   
                                                                                                       
          typedef struct _RTL_BALANCED_LINKS          // 5 elements, 0x20 bytes (sizeof) 
          {                                                                              
/*0x000*/     struct _RTL_BALANCED_LINKS* Parent;                                        
/*0x008*/     struct _RTL_BALANCED_LINKS* LeftChild;                                     
/*0x010*/     struct _RTL_BALANCED_LINKS* RightChild;                                    
/*0x018*/     CHAR         Balance;                                                      
/*0x019*/     UINT8        Reserved[3];                                                  
/*0x01C*/     UINT8        _PADDING0_[0x4];                                              
          }RTL_BALANCED_LINKS, *PRTL_BALANCED_LINKS;                                     
                                                                                         
          typedef struct _RTL_AVL_TABLE                         // 11 elements, 0x68 bytes (sizeof) 
          {                                                                                         
/*0x000*/     struct _RTL_BALANCED_LINKS BalancedRoot;          // 5 elements, 0x20 bytes (sizeof)  
/*0x020*/     VOID*        OrderedPointer;                                                          
/*0x028*/     ULONG32      WhichOrderedElement;                                                     
/*0x02C*/     ULONG32      NumberGenericTableElements;                                              
/*0x030*/     ULONG32      DepthOfTree;                                                             
/*0x034*/     UINT8        _PADDING0_[0x4];                                                         
/*0x038*/     struct _RTL_BALANCED_LINKS* RestartKey;                                               
/*0x040*/     ULONG32      DeleteCount;                                                             
/*0x044*/     UINT8        _PADDING1_[0x4];                                                         
/*0x048*/     FUNCT_0EBB_0EBA_CompareRoutine* CompareRoutine;                                       
/*0x050*/     FUNCT_00A6_0EC4_AllocateRoutine* AllocateRoutine;                                     
/*0x058*/     FUNCT_00A3_0EC8_FreeRoutine* FreeRoutine;                                             
/*0x060*/     VOID*        TableContext;                                                            
          }RTL_AVL_TABLE, *PRTL_AVL_TABLE;                                                          
                                                                                                    
          typedef struct _RTL_BITMAP        // 2 elements, 0x10 bytes (sizeof) 
          {                                                                    
/*0x000*/     ULONG32      SizeOfBitMap;                                       
/*0x004*/     UINT8        _PADDING0_[0x4];                                    
/*0x008*/     ULONG32*     Buffer;                                             
          }RTL_BITMAP, *PRTL_BITMAP;                                           
                                                                               
          typedef struct _RTL_CRITICAL_SECTION               // 6 elements, 0x28 bytes (sizeof) 
          {                                                                                     
/*0x000*/     struct _RTL_CRITICAL_SECTION_DEBUG* DebugInfo;                                    
/*0x008*/     LONG32       LockCount;                                                           
/*0x00C*/     LONG32       RecursionCount;                                                      
/*0x010*/     VOID*        OwningThread;                                                        
/*0x018*/     VOID*        LockSemaphore;                                                       
/*0x020*/     UINT64       SpinCount;                                                           
          }RTL_CRITICAL_SECTION, *PRTL_CRITICAL_SECTION;                                        
                                                                                                
          typedef struct _RTL_CRITICAL_SECTION_DEBUG         // 9 elements, 0x30 bytes (sizeof) 
          {                                                                                     
/*0x000*/     UINT16       Type;                                                                
/*0x002*/     UINT16       CreatorBackTraceIndex;                                               
/*0x004*/     UINT8        _PADDING0_[0x4];                                                     
/*0x008*/     struct _RTL_CRITICAL_SECTION* CriticalSection;                                    
/*0x010*/     struct _LIST_ENTRY ProcessLocksList;           // 2 elements, 0x10 bytes (sizeof) 
/*0x020*/     ULONG32      EntryCount;                                                          
/*0x024*/     ULONG32      ContentionCount;                                                     
/*0x028*/     ULONG32      Flags;                                                               
/*0x02C*/     UINT16       CreatorBackTraceIndexHigh;                                           
/*0x02E*/     UINT16       SpareUSHORT;                                                         
          }RTL_CRITICAL_SECTION_DEBUG, *PRTL_CRITICAL_SECTION_DEBUG;                                   
                                                                                                
          typedef struct _STRING            // 3 elements, 0x10 bytes (sizeof) 
          {                                                                    
/*0x000*/     UINT16       Length;                                             
/*0x002*/     UINT16       MaximumLength;                                      
/*0x004*/     UINT8        _PADDING0_[0x4];                                    
/*0x008*/     CHAR*        Buffer;                                             
          }STRING, *PSTRING;                                                   
                                                                               
          typedef struct _RTL_DRIVE_LETTER_CURDIR // 4 elements, 0x18 bytes (sizeof) 
          {                                                                          
/*0x000*/     UINT16       Flags;                                                    
/*0x002*/     UINT16       Length;                                                   
/*0x004*/     ULONG32      TimeStamp;                                                
/*0x008*/     struct _STRING DosPath;             // 3 elements, 0x10 bytes (sizeof) 
          }RTL_DRIVE_LETTER_CURDIR, *PRTL_DRIVE_LETTER_CURDIR;                                   
                                                                                     
          typedef struct _RTL_DYNAMIC_HASH_TABLE // 9 elements, 0x28 bytes (sizeof) 
          {                                                                         
/*0x000*/     ULONG32      Flags;                                                   
/*0x004*/     ULONG32      Shift;                                                   
/*0x008*/     ULONG32      TableSize;                                               
/*0x00C*/     ULONG32      Pivot;                                                   
/*0x010*/     ULONG32      DivisorMask;                                             
/*0x014*/     ULONG32      NumEntries;                                              
/*0x018*/     ULONG32      NonEmptyBuckets;                                         
/*0x01C*/     ULONG32      NumEnumerators;                                          
/*0x020*/     VOID*        Directory;                                               
          }RTL_DYNAMIC_HASH_TABLE, *PRTL_DYNAMIC_HASH_TABLE;                                   
                                                                                    
          typedef struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT // 3 elements, 0x18 bytes (sizeof) 
          {                                                                                 
/*0x000*/     struct _LIST_ENTRY* ChainHead;                                                
/*0x008*/     struct _LIST_ENTRY* PrevLinkage;                                              
/*0x010*/     UINT64       Signature;                                                       
          }RTL_DYNAMIC_HASH_TABLE_CONTEXT, *PRTL_DYNAMIC_HASH_TABLE_CONTEXT;                                   
                                                                                            
          typedef struct _RTL_DYNAMIC_HASH_TABLE_ENTRY // 2 elements, 0x18 bytes (sizeof) 
          {                                                                               
/*0x000*/     struct _LIST_ENTRY Linkage;              // 2 elements, 0x10 bytes (sizeof) 
/*0x010*/     UINT64       Signature;                                                     
          }RTL_DYNAMIC_HASH_TABLE_ENTRY, *PRTL_DYNAMIC_HASH_TABLE_ENTRY;                                   
                                                                                          
          typedef struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR   // 3 elements, 0x28 bytes (sizeof) 
          {                                                                                      
/*0x000*/     struct _RTL_DYNAMIC_HASH_TABLE_ENTRY HashEntry; // 2 elements, 0x18 bytes (sizeof) 
/*0x018*/     struct _LIST_ENTRY* ChainHead;                                                     
/*0x020*/     ULONG32      BucketIndex;                                                          
/*0x024*/     UINT8        _PADDING0_[0x4];                                                      
          }RTL_DYNAMIC_HASH_TABLE_ENUMERATOR, *PRTL_DYNAMIC_HASH_TABLE_ENUMERATOR;                                   
                                                                                                 
          typedef struct _RTL_USER_PROCESS_PARAMETERS                // 30 elements, 0x400 bytes (sizeof) 
          {                                                                                               
/*0x000*/     ULONG32      MaximumLength;                                                                 
/*0x004*/     ULONG32      Length;                                                                        
/*0x008*/     ULONG32      Flags;                                                                         
/*0x00C*/     ULONG32      DebugFlags;                                                                    
/*0x010*/     VOID*        ConsoleHandle;                                                                 
/*0x018*/     ULONG32      ConsoleFlags;                                                                  
/*0x01C*/     UINT8        _PADDING0_[0x4];                                                               
/*0x020*/     VOID*        StandardInput;                                                                 
/*0x028*/     VOID*        StandardOutput;                                                                
/*0x030*/     VOID*        StandardError;                                                                 
/*0x038*/     struct _CURDIR CurrentDirectory;                       // 2 elements, 0x18 bytes (sizeof)   
/*0x050*/     struct _UNICODE_STRING DllPath;                        // 3 elements, 0x10 bytes (sizeof)   
/*0x060*/     struct _UNICODE_STRING ImagePathName;                  // 3 elements, 0x10 bytes (sizeof)   
/*0x070*/     struct _UNICODE_STRING CommandLine;                    // 3 elements, 0x10 bytes (sizeof)   
/*0x080*/     VOID*        Environment;                                                                   
/*0x088*/     ULONG32      StartingX;                                                                     
/*0x08C*/     ULONG32      StartingY;                                                                     
/*0x090*/     ULONG32      CountX;                                                                        
/*0x094*/     ULONG32      CountY;                                                                        
/*0x098*/     ULONG32      CountCharsX;                                                                   
/*0x09C*/     ULONG32      CountCharsY;                                                                   
/*0x0A0*/     ULONG32      FillAttribute;                                                                 
/*0x0A4*/     ULONG32      WindowFlags;                                                                   
/*0x0A8*/     ULONG32      ShowWindowFlags;                                                               
/*0x0AC*/     UINT8        _PADDING1_[0x4];                                                               
/*0x0B0*/     struct _UNICODE_STRING WindowTitle;                    // 3 elements, 0x10 bytes (sizeof)   
/*0x0C0*/     struct _UNICODE_STRING DesktopInfo;                    // 3 elements, 0x10 bytes (sizeof)   
/*0x0D0*/     struct _UNICODE_STRING ShellInfo;                      // 3 elements, 0x10 bytes (sizeof)   
/*0x0E0*/     struct _UNICODE_STRING RuntimeData;                    // 3 elements, 0x10 bytes (sizeof)   
/*0x0F0*/     struct _RTL_DRIVE_LETTER_CURDIR CurrentDirectores[32];                                      
/*0x3F0*/     UINT64       EnvironmentSize;                                                               
/*0x3F8*/     UINT64       EnvironmentVersion;                                                            
          }RTL_USER_PROCESS_PARAMETERS, *PRTL_USER_PROCESS_PARAMETERS;                                     
                                                                                                          
          typedef struct _SCATTER_GATHER_ELEMENT // 3 elements, 0x18 bytes (sizeof) 
          {                                                                         
/*0x000*/     union _LARGE_INTEGER Address;      // 4 elements, 0x8 bytes (sizeof)  
/*0x008*/     ULONG32      Length;                                                  
/*0x00C*/     UINT8        _PADDING0_[0x4];                                         
/*0x010*/     UINT64       Reserved;                                                
          }SCATTER_GATHER_ELEMENT, *PSCATTER_GATHER_ELEMENT;                                   
                                                                                    
          typedef struct _SCATTER_GATHER_LIST             // 3 elements, 0x10 bytes (sizeof) 
          {                                                                                  
/*0x000*/     ULONG32      NumberOfElements;                                                 
/*0x004*/     UINT8        _PADDING0_[0x4];                                                  
/*0x008*/     UINT64       Reserved;                                                         
/*0x010*/     struct _SCATTER_GATHER_ELEMENT Elements[0];                                    
          }SCATTER_GATHER_LIST, *PSCATTER_GATHER_LIST;                                       
                                                                                             
typedef struct _SCSI_REQUEST_BLOCK // 0 elements, 0x0 bytes (sizeof) 
{                                                                    
}SCSI_REQUEST_BLOCK, *PSCSI_REQUEST_BLOCK;                                  
                                                                     
          typedef struct _SECTION_OBJECT_POINTERS // 3 elements, 0x18 bytes (sizeof) 
          {                                                                          
/*0x000*/     VOID*        DataSectionObject;                                        
/*0x008*/     VOID*        SharedCacheMap;                                           
/*0x010*/     VOID*        ImageSectionObject;                                       
          }SECTION_OBJECT_POINTERS, *PSECTION_OBJECT_POINTERS;                                   
                                                                                     
          typedef struct _SECURITY_QUALITY_OF_SERVICE                // 4 elements, 0xC bytes (sizeof) 
          {                                                                                            
/*0x000*/     ULONG32      Length;                                                                     
/*0x004*/     enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;                                   
/*0x008*/     UINT8        ContextTrackingMode;                                                        
/*0x009*/     UINT8        EffectiveOnly;                                                              
/*0x00A*/     UINT8        _PADDING0_[0x2];                                                            
          }SECURITY_QUALITY_OF_SERVICE, *PSECURITY_QUALITY_OF_SERVICE;                                  
                                                                                                       
          typedef struct _SLIST_ENTRY       // 1 elements, 0x10 bytes (sizeof) 
          {                                                                    
/*0x000*/     struct _SLIST_ENTRY* Next;                                       
/*0x008*/     UINT8        _PADDING0_[0x8];                                    
          }SLIST_ENTRY, *PSLIST_ENTRY;                                         
                                                                               
          typedef struct _SM_VALUES_STRINGS          // 4 elements, 0x18 bytes (sizeof) 
          {                                                                             
/*0x000*/     CHAR*        pszName;                                                     
/*0x008*/     ULONG32      ulValue;                                                     
/*0x00C*/     enum _SM_RANGE_TYPES RangeType;                                           
/*0x010*/     enum _SM_STORAGE_MODIFIER StorageType;                                    
/*0x014*/     UINT8        _PADDING0_[0x4];                                             
          }SM_VALUES_STRINGS, *PSM_VALUES_STRINGS;                                      
                                                                                        
          typedef struct _tagCARET           // 15 elements, 0x48 bytes (sizeof) 
          {                                                                      
/*0x000*/     struct _tagWND* spwnd;                                             
              struct                         // 2 elements, 0x4 bytes (sizeof)   
              {                                                                  
/*0x008*/         UINT32       fVisible : 1; // 0 BitPosition                    
/*0x008*/         UINT32       fOn : 1;      // 1 BitPosition                    
              };                                                                 
/*0x00C*/     INT32        iHideLevel;                                           
/*0x010*/     INT32        x;                                                    
/*0x014*/     INT32        y;                                                    
/*0x018*/     INT32        cy;                                                   
/*0x01C*/     INT32        cx;                                                   
/*0x020*/     struct _HBITMAP__* hBitmap;                                        
/*0x028*/     UINT64       hTimer;                                               
/*0x030*/     ULONG32      tid;                                                  
/*0x034*/     INT32        xOwnDc;                                               
/*0x038*/     INT32        yOwnDc;                                               
/*0x03C*/     INT32        cxOwnDc;                                              
/*0x040*/     INT32        cyOwnDc;                                              
/*0x044*/     UINT8        _PADDING0_[0x4];                                      
          }tagCARET, *PtagCARET;                                                 
                                                                                 
          typedef struct _tagMSG            // 6 elements, 0x30 bytes (sizeof) 
          {                                                                    
/*0x000*/     struct _HWND__* hwnd;                                            
/*0x008*/     UINT32       message;                                            
/*0x00C*/     UINT8        _PADDING0_[0x4];                                    
/*0x010*/     UINT64       wParam;                                             
/*0x018*/     INT64        lParam;                                             
/*0x020*/     ULONG32      time;                                               
/*0x024*/     struct _tagPOINT pt;          // 2 elements, 0x8 bytes (sizeof)  
/*0x02C*/     UINT8        _PADDING1_[0x4];                                    
          }tagMSG, *PtagMSG;                                                   
                                                                               
          typedef struct _tagCLIENTINFO                       // 25 elements, 0xD8 bytes (sizeof) 
          {                                                                                       
/*0x000*/     UINT64       CI_flags;                                                              
/*0x008*/     UINT64       cSpins;                                                                
/*0x010*/     ULONG32      dwExpWinVer;                                                           
/*0x014*/     ULONG32      dwCompatFlags;                                                         
/*0x018*/     ULONG32      dwCompatFlags2;                                                        
/*0x01C*/     ULONG32      dwTIFlags;                                                             
/*0x020*/     struct _tagDESKTOPINFO* pDeskInfo;                                                  
/*0x028*/     UINT64       ulClientDelta;                                                         
/*0x030*/     struct _tagHOOK* phkCurrent;                                                        
/*0x038*/     ULONG32      fsHooks;                                                               
/*0x03C*/     UINT8        _PADDING0_[0x4];                                                       
/*0x040*/     struct _CALLBACKWND CallbackWnd;                // 3 elements, 0x18 bytes (sizeof)  
/*0x058*/     ULONG32      dwHookCurrent;                                                         
/*0x05C*/     INT32        cInDDEMLCallback;                                                      
/*0x060*/     struct _tagCLIENTTHREADINFO* pClientThreadInfo;                                     
/*0x068*/     UINT64       dwHookData;                                                            
/*0x070*/     ULONG32      dwKeyCache;                                                            
/*0x074*/     UINT8        afKeyState[8];                                                         
/*0x07C*/     ULONG32      dwAsyncKeyCache;                                                       
/*0x080*/     UINT8        afAsyncKeyState[8];                                                    
/*0x088*/     UINT8        afAsyncKeyStateRecentDown[8];                                          
/*0x090*/     struct _HKL__* hKL;                                                                 
/*0x098*/     UINT16       CodePage;                                                              
/*0x09A*/     UINT8        achDbcsCF[2];                                                          
/*0x09C*/     UINT8        _PADDING1_[0x4];                                                       
/*0x0A0*/     struct _tagMSG msgDbcsCB;                       // 6 elements, 0x30 bytes (sizeof)  
/*0x0D0*/     ULONG32*     lpdwRegisteredClasses;                                                 
          }tagCLIENTINFO, *PtagCLIENTINFO;                                                        
                                                                                                  
          typedef struct _tagCLIENTTHREADINFO  // 6 elements, 0x10 bytes (sizeof) 
          {                                                                       
/*0x000*/     UINT32       CTIF_flags;                                            
/*0x004*/     UINT16       fsChangeBits;                                          
/*0x006*/     UINT16       fsWakeBits;                                            
/*0x008*/     UINT16       fsWakeBitsJournal;                                     
/*0x00A*/     UINT16       fsWakeMask;                                            
/*0x00C*/     ULONG32      tickLastMsgChecked;                                    
          }tagCLIENTTHREADINFO, *PtagCLIENTTHREADINFO;                                   
                                                                                  
          typedef struct _tagCLIP           // 3 elements, 0x18 bytes (sizeof) 
          {                                                                    
/*0x000*/     UINT32       fmt;                                                
/*0x004*/     UINT8        _PADDING0_[0x4];                                    
/*0x008*/     VOID*        hData;                                              
/*0x010*/     INT32        fGlobalHandle;                                      
/*0x014*/     UINT8        _PADDING1_[0x4];                                    
          }tagCLIP, *PtagCLIP;                                                 
                                                                               
          typedef struct _tagCLS                                   // 25 elements, 0xA0 bytes (sizeof) 
          {                                                                                            
/*0x000*/     struct _tagCLS* pclsNext;                                                                
/*0x008*/     UINT16       atomClassName;                                                              
/*0x00A*/     UINT16       atomNVClassName;                                                            
/*0x00C*/     UINT16       fnid;                                                                       
/*0x00E*/     UINT8        _PADDING0_[0x2];                                                            
/*0x010*/     struct _tagDESKTOP* rpdeskParent;                                                        
/*0x018*/     struct _tagDCE* pdce;                                                                    
/*0x020*/     UINT16       hTaskWow;                                                                   
/*0x022*/     UINT16       CSF_flags;                                                                  
/*0x024*/     UINT8        _PADDING1_[0x4];                                                            
/*0x028*/     CHAR*        lpszClientAnsiMenuName;                                                     
/*0x030*/     UINT16*      lpszClientUnicodeMenuName;                                                  
/*0x038*/     struct _CALLPROCDATA* spcpdFirst;                                                        
/*0x040*/     struct _tagCLS* pclsBase;                                                                
/*0x048*/     struct _tagCLS* pclsClone;                                                               
/*0x050*/     INT32        cWndReferenceCount;                                                         
/*0x054*/     UINT32       style;                                                                      
/*0x058*/     FUNCT_0075_0FAD_lpfnWndProc_aStoCidPfn* lpfnWndProc;                                     
/*0x060*/     INT32        cbclsExtra;                                                                 
/*0x064*/     INT32        cbwndExtra;                                                                 
/*0x068*/     VOID*        hModule;                                                                    
/*0x070*/     struct _tagCURSOR* spicn;                                                                
/*0x078*/     struct _tagCURSOR* spcur;                                                                
/*0x080*/     struct _HBRUSH__* hbrBackground;                                                         
/*0x088*/     UINT16*      lpszMenuName;                                                               
/*0x090*/     CHAR*        lpszAnsiClassName;                                                          
/*0x098*/     struct _tagCURSOR* spicnSm;                                                              
          }tagCLS, *PtagCLS;                                                                           
                                                                                                       
          typedef struct _tagCURSOR            // 16 elements, 0x88 bytes (sizeof) 
          {                                                                        
/*0x000*/     struct _PROCMARKHEAD head;       // 4 elements, 0x20 bytes (sizeof)  
/*0x020*/     struct _tagCURSOR* pcurNext;                                         
/*0x028*/     struct _UNICODE_STRING strName;  // 3 elements, 0x10 bytes (sizeof)  
/*0x038*/     UINT16       atomModName;                                            
/*0x03A*/     UINT16       rt;                                                     
/*0x03C*/     UINT8        _PADDING0_[0x4];                                        
/*0x040*/     ULONG32      CURSORF_flags;                                          
/*0x044*/     INT16        xHotspot;                                               
/*0x046*/     INT16        yHotspot;                                               
/*0x048*/     struct _HBITMAP__* hbmMask;                                          
/*0x050*/     struct _HBITMAP__* hbmColor;                                         
/*0x058*/     struct _HBITMAP__* hbmAlpha;                                         
/*0x060*/     struct _tagRECT rcBounds;        // 4 elements, 0x10 bytes (sizeof)  
/*0x070*/     struct _HBITMAP__* hbmUserAlpha;                                     
/*0x078*/     ULONG32      bpp;                                                    
/*0x07C*/     ULONG32      cx;                                                     
/*0x080*/     ULONG32      cy;                                                     
/*0x084*/     UINT8        _PADDING1_[0x4];                                        
          }tagCURSOR, *PtagCURSOR;                                                 
                                                                                   
          typedef struct _tagDCE                // 12 elements, 0x60 bytes (sizeof) 
          {                                                                         
/*0x000*/     struct _tagDCE* pdceNext;                                             
/*0x008*/     struct _HDC__* hdc;                                                   
/*0x010*/     struct _tagWND* pwndOrg;                                              
/*0x018*/     struct _tagWND* pwndClip;                                             
/*0x020*/     struct _tagWND* pwndRedirect;                                         
/*0x028*/     struct _HRGN__* hrgnClip;                                             
/*0x030*/     struct _HRGN__* hrgnClipPublic;                                       
/*0x038*/     struct _HRGN__* hrgnSavedVis;                                         
/*0x040*/     ULONG32      DCX_flags;                                               
/*0x044*/     UINT8        _PADDING0_[0x4];                                         
/*0x048*/     struct _tagTHREADINFO* ptiOwner;                                      
/*0x050*/     struct _tagPROCESSINFO* ppiOwner;                                     
/*0x058*/     struct _tagMONITOR* pMonitor;                                         
          }tagDCE, *PtagDCE;                                                        
                                                                                    
          typedef struct _tagDESKTOP                                     // 25 elements, 0xE0 bytes (sizeof) 
          {                                                                                                  
/*0x000*/     ULONG32      dwSessionId;                                                                      
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                  
/*0x008*/     struct _tagDESKTOPINFO* pDeskInfo;                                                             
/*0x010*/     struct _tagDISPLAYINFO* pDispInfo;                                                             
/*0x018*/     struct _tagDESKTOP* rpdeskNext;                                                                
/*0x020*/     struct _tagWINDOWSTATION* rpwinstaParent;                                                      
/*0x028*/     ULONG32      dwDTFlags;                                                                        
/*0x02C*/     UINT8        _PADDING1_[0x4];                                                                  
/*0x030*/     UINT64       dwDesktopId;                                                                      
/*0x038*/     struct _tagMENU* spmenuSys;                                                                    
/*0x040*/     struct _tagMENU* spmenuDialogSys;                                                              
/*0x048*/     struct _tagMENU* spmenuHScroll;                                                                
/*0x050*/     struct _tagMENU* spmenuVScroll;                                                                
/*0x058*/     struct _tagWND* spwndForeground;                                                               
/*0x060*/     struct _tagWND* spwndTray;                                                                     
/*0x068*/     struct _tagWND* spwndMessage;                                                                  
/*0x070*/     struct _tagWND* spwndTooltip;                                                                  
/*0x078*/     VOID*        hsectionDesktop;                                                                  
/*0x080*/     struct _tagWIN32HEAP* pheapDesktop;                                                            
/*0x088*/     ULONG32      ulHeapSize;                                                                       
/*0x08C*/     UINT8        _PADDING2_[0x4];                                                                  
/*0x090*/     struct _CONSOLE_CARET_INFO cciConsole;                     // 2 elements, 0x18 bytes (sizeof)  
/*0x0A8*/     struct _LIST_ENTRY PtiList;                                // 2 elements, 0x10 bytes (sizeof)  
/*0x0B8*/     struct _tagWND* spwndTrack;                                                                    
/*0x0C0*/     INT32        htEx;                                                                             
/*0x0C4*/     struct _tagRECT rcMouseHover;                              // 4 elements, 0x10 bytes (sizeof)  
/*0x0D4*/     ULONG32      dwMouseHoverTime;                                                                 
/*0x0D8*/     struct _MAGNIFICATION_INPUT_TRANSFORM* pMagInputTransform;                                     
          }tagDESKTOP, *PtagDESKTOP;                                                                         
                                                                                                             
          typedef struct _tagDESKTOPINFO               // 16 elements, 0xF0 bytes (sizeof) 
          {                                                                                
/*0x000*/     VOID*        pvDesktopBase;                                                  
/*0x008*/     VOID*        pvDesktopLimit;                                                 
/*0x010*/     struct _tagWND* spwnd;                                                       
/*0x018*/     ULONG32      fsHooks;                                                        
/*0x01C*/     UINT8        _PADDING0_[0x4];                                                
/*0x020*/     struct _tagHOOK* aphkStart[16];                                              
/*0x0A0*/     struct _tagWND* spwndShell;                                                  
/*0x0A8*/     struct _tagPROCESSINFO* ppiShellProcess;                                     
/*0x0B0*/     struct _tagWND* spwndBkGnd;                                                  
/*0x0B8*/     struct _tagWND* spwndTaskman;                                                
/*0x0C0*/     struct _tagWND* spwndProgman;                                                
/*0x0C8*/     struct _VWPL* pvwplShellHook;                                                
/*0x0D0*/     INT32        cntMBox;                                                        
/*0x0D4*/     UINT8        _PADDING1_[0x4];                                                
/*0x0D8*/     struct _tagWND* spwndGestureEngine;                                          
/*0x0E0*/     struct _VWPL* pvwplMessagePPHandler;                                         
              struct                                   // 2 elements, 0x4 bytes (sizeof)   
              {                                                                            
/*0x0E8*/         ULONG32      fComposited : 1;        // 0 BitPosition                    
/*0x0E8*/         ULONG32      fIsDwmDesktop : 1;      // 1 BitPosition                    
              };                                                                           
          }tagDESKTOPINFO, *PtagDESKTOPINFO;                                               
                                                                                           
          typedef struct _tagDESKTOPVIEW       // 3 elements, 0x18 bytes (sizeof) 
          {                                                                       
/*0x000*/     struct _tagDESKTOPVIEW* pdvNext;                                    
/*0x008*/     struct _tagDESKTOP* pdesk;                                          
/*0x010*/     UINT64       ulClientDelta;                                         
          }tagDESKTOPVIEW, *PtagDESKTOPVIEW;                                      
                                                                                  
          typedef struct _tagDISPLAYINFO           // 24 elements, 0xA8 bytes (sizeof) 
          {                                                                            
/*0x000*/     VOID*        hDev;                                                       
/*0x008*/     VOID*        pmdev;                                                      
/*0x010*/     VOID*        hDevInfo;                                                   
/*0x018*/     struct _HDC__* hdcScreen;                                                
/*0x020*/     struct _HDC__* hdcBits;                                                  
/*0x028*/     struct _HDC__* hdcGray;                                                  
/*0x030*/     struct _HBITMAP__* hbmGray;                                              
/*0x038*/     INT32        cxGray;                                                     
/*0x03C*/     INT32        cyGray;                                                     
/*0x040*/     struct _tagDCE* pdceFirst;                                               
/*0x048*/     struct _tagSPB* pspbFirst;                                               
/*0x050*/     ULONG32      cMonitors;                                                  
/*0x054*/     UINT8        _PADDING0_[0x4];                                            
/*0x058*/     struct _tagMONITOR* pMonitorPrimary;                                     
/*0x060*/     struct _tagMONITOR* pMonitorFirst;                                       
/*0x068*/     struct _tagRECT rcScreenReal;        // 4 elements, 0x10 bytes (sizeof)  
/*0x078*/     struct _HRGN__* hrgnScreenReal;                                          
/*0x080*/     UINT16       dmLogPixels;                                                
/*0x082*/     UINT16       BitCountMax;                                                
              struct                               // 2 elements, 0x4 bytes (sizeof)   
              {                                                                        
/*0x084*/         INT32        fDesktopIsRect : 1; // 0 BitPosition                    
/*0x084*/         INT32        fAnyPalette : 1;    // 1 BitPosition                    
              };                                                                       
/*0x088*/     ULONG32      DockThresholdMax;                                           
/*0x08C*/     UINT8        _PADDING1_[0x4];                                            
/*0x090*/     struct _KLIST_ENTRY SpatialListHead; // 2 elements, 0x10 bytes (sizeof)  
/*0x0A0*/     INT16        cFullScreen;                                                
/*0x0A2*/     INT16        Spare0;                                                     
/*0x0A4*/     UINT8        _PADDING2_[0x4];                                            
          }tagDISPLAYINFO, *PtagDISPLAYINFO;                                           
                                                                                       
          typedef struct _tagDPISERVERINFO   // 6 elements, 0x28 bytes (sizeof) 
          {                                                                     
/*0x000*/     INT32        gclBorder;                                           
/*0x004*/     UINT8        _PADDING0_[0x4];                                     
/*0x008*/     struct _HFONT__* hCaptionFont;                                    
/*0x010*/     struct _HFONT__* hMsgFont;                                        
/*0x018*/     INT32        cxMsgFontChar;                                       
/*0x01C*/     INT32        cyMsgFontChar;                                       
/*0x020*/     UINT32       wMaxBtnSize;                                         
/*0x024*/     UINT8        _PADDING1_[0x4];                                     
          }tagDPISERVERINFO, *PtagDPISERVERINFO;                                   
                                                                                
          typedef struct _tagHID_PAGEONLY_REQUEST // 3 elements, 0x18 bytes (sizeof) 
          {                                                                          
/*0x000*/     struct _LIST_ENTRY link;            // 2 elements, 0x10 bytes (sizeof) 
/*0x010*/     UINT16       usUsagePage;                                              
/*0x012*/     UINT8        _PADDING0_[0x2];                                          
/*0x014*/     UINT32       cRefCount;                                                
          }tagHID_PAGEONLY_REQUEST, *PtagHID_PAGEONLY_REQUEST;                                   
                                                                                     
          typedef struct _tagHID_TLC_INFO     // 8 elements, 0x28 bytes (sizeof) 
          {                                                                      
/*0x000*/     struct _LIST_ENTRY link;        // 2 elements, 0x10 bytes (sizeof) 
/*0x010*/     UINT16       usUsagePage;                                          
/*0x012*/     UINT16       usUsage;                                              
/*0x014*/     UINT32       cDevices;                                             
/*0x018*/     UINT32       cDirectRequest;                                       
/*0x01C*/     UINT32       cUsagePageRequest;                                    
/*0x020*/     UINT32       cExcludeRequest;                                      
/*0x024*/     UINT32       cExcludeOrphaned;                                     
          }tagHID_TLC_INFO, *PtagHID_TLC_INFO;                                   
                                                                                 
          typedef struct _THRDESKHEAD       // 5 elements, 0x28 bytes (sizeof) 
          {                                                                    
/*0x000*/     VOID*        h;                                                  
/*0x008*/     ULONG32      cLockObj;                                           
/*0x00C*/     UINT8        _PADDING0_[0x4];                                    
/*0x010*/     struct _tagTHREADINFO* pti;                                      
/*0x018*/     struct _tagDESKTOP* rpdesk;                                      
/*0x020*/     UINT8*       pSelf;                                              
          }THRDESKHEAD, *PTHRDESKHEAD;                                         
                                                                               
          typedef struct _tagHOOK                          // 10 elements, 0x60 bytes (sizeof) 
          {                                                                                    
/*0x000*/     struct _THRDESKHEAD head;                    // 5 elements, 0x28 bytes (sizeof)  
/*0x028*/     struct _tagHOOK* phkNext;                                                        
/*0x030*/     INT32        iHook;                                                              
/*0x034*/     UINT8        _PADDING0_[0x4];                                                    
/*0x038*/     UINT64       offPfn;                                                             
/*0x040*/     UINT32       flags;                                                              
/*0x044*/     INT32        ihmod;                                                              
/*0x048*/     struct _tagTHREADINFO* ptiHooked;                                                
/*0x050*/     struct _tagDESKTOP* rpdesk;                                                      
/*0x058*/     ULONG32      nTimeout : 7;                   // 0 BitPosition                    
/*0x058*/     INT32        fLastHookHung : 1;              // 7 BitPosition                    
/*0x05C*/     UINT8        _PADDING2_[0x4];                                                    
          }tagHOOK, *PtagHOOK;                                                                 
                                                                                               
          typedef struct _tagIMC            // 4 elements, 0x40 bytes (sizeof) 
          {                                                                    
/*0x000*/     struct _THRDESKHEAD head;     // 5 elements, 0x28 bytes (sizeof) 
/*0x028*/     struct _tagIMC* pImcNext;                                        
/*0x030*/     UINT64       dwClientImcData;                                    
/*0x038*/     struct _HWND__* hImeWnd;                                         
          }tagIMC, *PtagIMC;                                                   
                                                                               
          typedef struct _tagIMEINFO          // 7 elements, 0x1C bytes (sizeof) 
          {                                                                      
/*0x000*/     ULONG32      dwPrivateDataSize;                                    
/*0x004*/     ULONG32      fdwProperty;                                          
/*0x008*/     ULONG32      fdwConversionCaps;                                    
/*0x00C*/     ULONG32      fdwSentenceCaps;                                      
/*0x010*/     ULONG32      fdwUICaps;                                            
/*0x014*/     ULONG32      fdwSCSCaps;                                           
/*0x018*/     ULONG32      fdwSelectCaps;                                        
          }tagIMEINFO, *PtagIMEINFO;                                             
                                                                                 
          typedef struct _tagIMEINFOEX            // 12 elements, 0x160 bytes (sizeof) 
          {                                                                            
/*0x000*/     struct _HKL__* hkl;                                                      
/*0x008*/     struct _tagIMEINFO ImeInfo;         // 7 elements, 0x1C bytes (sizeof)   
/*0x024*/     WCHAR        wszUIClass[16];                                             
/*0x044*/     ULONG32      fdwInitConvMode;                                            
/*0x048*/     INT32        fInitOpen;                                                  
/*0x04C*/     INT32        fLoadFlag;                                                  
/*0x050*/     ULONG32      dwProdVersion;                                              
/*0x054*/     ULONG32      dwImeWinVersion;                                            
/*0x058*/     WCHAR        wszImeDescription[50];                                      
/*0x0BC*/     WCHAR        wszImeFile[80];                                             
              struct                              // 2 elements, 0x4 bytes (sizeof)    
              {                                                                        
/*0x15C*/         INT32        fSysWow64Only : 1; // 0 BitPosition                     
/*0x15C*/         INT32        fCUASLayer : 1;    // 1 BitPosition                     
              };                                                                       
          }tagIMEINFOEX, *PtagIMEINFOEX;                                               
                                                                                       
          typedef struct _tagSIZE // 2 elements, 0x8 bytes (sizeof) 
          {                                                         
/*0x000*/     LONG32       cx;                                      
/*0x004*/     LONG32       cy;                                      
          }tagSIZE, *PtagSIZE;                                      
                                                                    
          typedef union _tagUAHMENUITEMMETRICS // 2 elements, 0x20 bytes (sizeof) 
          {                                                                       
/*0x000*/     struct _tagSIZE rgsizeBar[2];                                       
/*0x000*/     struct _tagSIZE rgsizePopup[4];                                     
          }tagUAHMENUITEMMETRICS, *PtagUAHMENUITEMMETRICS;                                   
                                                                                  
          typedef struct _tagITEM                // 20 elements, 0x90 bytes (sizeof) 
          {                                                                          
/*0x000*/     UINT32       fType;                                                    
/*0x004*/     UINT32       fState;                                                   
/*0x008*/     UINT32       wID;                                                      
/*0x00C*/     UINT8        _PADDING0_[0x4];                                          
/*0x010*/     struct _tagMENU* spSubMenu;                                            
/*0x018*/     VOID*        hbmpChecked;                                              
/*0x020*/     VOID*        hbmpUnchecked;                                            
/*0x028*/     UINT16*      lpstr;                                                    
/*0x030*/     ULONG32      cch;                                                      
/*0x034*/     UINT8        _PADDING1_[0x4];                                          
/*0x038*/     UINT64       dwItemData;                                               
/*0x040*/     ULONG32      xItem;                                                    
/*0x044*/     ULONG32      yItem;                                                    
/*0x048*/     ULONG32      cxItem;                                                   
/*0x04C*/     ULONG32      cyItem;                                                   
/*0x050*/     ULONG32      dxTab;                                                    
/*0x054*/     ULONG32      ulX;                                                      
/*0x058*/     ULONG32      ulWidth;                                                  
/*0x05C*/     UINT8        _PADDING2_[0x4];                                          
/*0x060*/     struct _HBITMAP__* hbmp;                                               
/*0x068*/     INT32        cxBmp;                                                    
/*0x06C*/     INT32        cyBmp;                                                    
/*0x070*/     union _tagUAHMENUITEMMETRICS umim; // 2 elements, 0x20 bytes (sizeof)  
          }tagITEM, *PtagITEM;                                                       
                                                                                     
          typedef struct _tagKBDFILE              // 7 elements, 0x78 bytes (sizeof) 
          {                                                                          
/*0x000*/     struct _HEAD head;                  // 2 elements, 0x10 bytes (sizeof) 
/*0x010*/     struct _tagKBDFILE* pkfNext;                                           
/*0x018*/     VOID*        hBase;                                                    
/*0x020*/     struct _tagKbdLayer* pKbdTbl;                                          
/*0x028*/     ULONG32      Size;                                                     
/*0x02C*/     UINT8        _PADDING0_[0x4];                                          
/*0x030*/     struct _tagKbdNlsLayer* pKbdNlsTbl;                                    
/*0x038*/     WCHAR        awchDllName[32];                                          
          }tagKBDFILE, *PtagKBDFILE;                                                 
                                                                                     
          typedef struct _tagKbdLayer                     // 16 elements, 0x68 bytes (sizeof) 
          {                                                                                   
/*0x000*/     struct _MODIFIERS* pCharModifiers;                                              
/*0x008*/     struct _VK_TO_WCHAR_TABLE* pVkToWcharTable;                                     
/*0x010*/     struct _DEADKEY* pDeadKey;                                                      
/*0x018*/     struct _VSC_LPWSTR* pKeyNames;                                                  
/*0x020*/     struct _VSC_LPWSTR* pKeyNamesExt;                                               
/*0x028*/     UINT16**     pKeyNamesDead;                                                     
/*0x030*/     UINT16*      pusVSCtoVK;                                                        
/*0x038*/     UINT8        bMaxVSCtoVK;                                                       
/*0x039*/     UINT8        _PADDING0_[0x7];                                                   
/*0x040*/     struct _VSC_VK* pVSCtoVK_E0;                                                    
/*0x048*/     struct _VSC_VK* pVSCtoVK_E1;                                                    
/*0x050*/     ULONG32      fLocaleFlags;                                                      
/*0x054*/     UINT8        nLgMax;                                                            
/*0x055*/     UINT8        cbLgEntry;                                                         
/*0x056*/     UINT8        _PADDING1_[0x2];                                                   
/*0x058*/     struct _LIGATURE1* pLigature;                                                   
/*0x060*/     ULONG32      dwType;                                                            
/*0x064*/     ULONG32      dwSubType;                                                         
          }tagKbdLayer, *PtagKbdLayer;                                                        
                                                                                              
          typedef struct _tagKbdNlsLayer            // 6 elements, 0x20 bytes (sizeof) 
          {                                                                            
/*0x000*/     UINT16       OEMIdentifier;                                              
/*0x002*/     UINT16       LayoutInformation;                                          
/*0x004*/     UINT32       NumOfVkToF;                                                 
/*0x008*/     struct _VK_TO_FUNCTION_TABLE* pVkToF;                                    
/*0x010*/     INT32        NumOfMouseVKey;                                             
/*0x014*/     UINT8        _PADDING0_[0x4];                                            
/*0x018*/     UINT16*      pusMouseVKey;                                               
          }tagKbdNlsLayer, *PtagKbdNlsLayer;                                           
                                                                                       
          typedef struct _tagKL                // 17 elements, 0x78 bytes (sizeof) 
          {                                                                        
/*0x000*/     struct _HEAD head;               // 2 elements, 0x10 bytes (sizeof)  
/*0x010*/     struct _tagKL* pklNext;                                              
/*0x018*/     struct _tagKL* pklPrev;                                              
/*0x020*/     ULONG32      dwKL_Flags;                                             
/*0x024*/     UINT8        _PADDING0_[0x4];                                        
/*0x028*/     struct _HKL__* hkl;                                                  
/*0x030*/     struct _tagKBDFILE* spkf;                                            
/*0x038*/     struct _tagKBDFILE* spkfPrimary;                                     
/*0x040*/     ULONG32      dwFontSigs;                                             
/*0x044*/     UINT32       iBaseCharset;                                           
/*0x048*/     UINT16       CodePage;                                               
/*0x04A*/     WCHAR        wchDiacritic;                                           
/*0x04C*/     UINT8        _PADDING1_[0x4];                                        
/*0x050*/     struct _tagIMEINFOEX* piiex;                                         
/*0x058*/     UINT32       uNumTbl;                                                
/*0x05C*/     UINT8        _PADDING2_[0x4];                                        
/*0x060*/     struct _tagKBDFILE** pspkfExtra;                                     
/*0x068*/     ULONG32      dwLastKbdType;                                          
/*0x06C*/     ULONG32      dwLastKbdSubType;                                       
/*0x070*/     ULONG32      dwKLID;                                                 
/*0x074*/     UINT8        _PADDING3_[0x4];                                        
          }tagKL, *PtagKL;                                                         
                                                                                   
          typedef struct _tagMBSTRING       // 3 elements, 0x28 bytes (sizeof) 
          {                                                                    
/*0x000*/     WCHAR        szName[15];                                         
/*0x01E*/     UINT8        _PADDING0_[0x2];                                    
/*0x020*/     UINT32       uID;                                                
/*0x024*/     UINT32       uStr;                                               
          }tagMBSTRING, *PtagMBSTRING;                                         
                                                                               
          typedef struct _tagUAHMENUPOPUPMETRICS // 2 elements, 0x14 bytes (sizeof) 
          {                                                                         
/*0x000*/     INT32        rgcx[4];                                                 
/*0x010*/     INT32        fUpdateMaxWidths : 1; // 0 BitPosition                   
          }tagUAHMENUPOPUPMETRICS, *PtagUAHMENUPOPUPMETRICS;                                   
                                                                                    
          typedef struct _tagMENU                  // 19 elements, 0x98 bytes (sizeof) 
          {                                                                            
/*0x000*/     struct _PROCDESKHEAD head;           // 5 elements, 0x28 bytes (sizeof)  
/*0x028*/     ULONG32      fFlags;                                                     
/*0x02C*/     INT32        iItem;                                                      
/*0x030*/     UINT32       cAlloced;                                                   
/*0x034*/     UINT32       cItems;                                                     
/*0x038*/     ULONG32      cxMenu;                                                     
/*0x03C*/     ULONG32      cyMenu;                                                     
/*0x040*/     ULONG32      cxTextAlign;                                                
/*0x044*/     UINT8        _PADDING0_[0x4];                                            
/*0x048*/     struct _tagWND* spwndNotify;                                             
/*0x050*/     struct _tagITEM* rgItems;                                                
/*0x058*/     struct _tagMENULIST* pParentMenus;                                       
/*0x060*/     ULONG32      dwContextHelpId;                                            
/*0x064*/     ULONG32      cyMax;                                                      
/*0x068*/     UINT64       dwMenuData;                                                 
/*0x070*/     struct _HBRUSH__* hbrBack;                                               
/*0x078*/     INT32        iTop;                                                       
/*0x07C*/     INT32        iMaxTop;                                                    
/*0x080*/     ULONG32      dwArrowsOn : 2;         // 0 BitPosition                    
/*0x084*/     struct _tagUAHMENUPOPUPMETRICS umpm; // 2 elements, 0x14 bytes (sizeof)  
          }tagMENU, *PtagMENU;                                                         
                                                                                       
          typedef struct _tagMENULIST     // 2 elements, 0x10 bytes (sizeof) 
          {                                                                  
/*0x000*/     struct _tagMENULIST* pNext;                                    
/*0x008*/     struct _tagMENU* pMenu;                                        
          }tagMENULIST, *PtagMENULIST;                                       
                                                                             
          typedef struct _tagMENUSTATE                        // 42 elements, 0x90 bytes (sizeof) 
          {                                                                                       
/*0x000*/     struct _tagPOPUPMENU* pGlobalPopupMenu;                                             
              struct                                          // 20 elements, 0x4 bytes (sizeof)  
              {                                                                                   
/*0x008*/         ULONG32      fMenuStarted : 1;              // 0 BitPosition                    
/*0x008*/         ULONG32      fIsSysMenu : 1;                // 1 BitPosition                    
/*0x008*/         ULONG32      fInsideMenuLoop : 1;           // 2 BitPosition                    
/*0x008*/         ULONG32      fButtonDown : 1;               // 3 BitPosition                    
/*0x008*/         ULONG32      fInEndMenu : 1;                // 4 BitPosition                    
/*0x008*/         ULONG32      fUnderline : 1;                // 5 BitPosition                    
/*0x008*/         ULONG32      fButtonAlwaysDown : 1;         // 6 BitPosition                    
/*0x008*/         ULONG32      fDragging : 1;                 // 7 BitPosition                    
/*0x008*/         ULONG32      fModelessMenu : 1;             // 8 BitPosition                    
/*0x008*/         ULONG32      fInCallHandleMenuMessages : 1; // 9 BitPosition                    
/*0x008*/         ULONG32      fDragAndDrop : 1;              // 10 BitPosition                   
/*0x008*/         ULONG32      fAutoDismiss : 1;              // 11 BitPosition                   
/*0x008*/         ULONG32      fAboutToAutoDismiss : 1;       // 12 BitPosition                   
/*0x008*/         ULONG32      fIgnoreButtonUp : 1;           // 13 BitPosition                   
/*0x008*/         ULONG32      fMouseOffMenu : 1;             // 14 BitPosition                   
/*0x008*/         ULONG32      fInDoDragDrop : 1;             // 15 BitPosition                   
/*0x008*/         ULONG32      fActiveNoForeground : 1;       // 16 BitPosition                   
/*0x008*/         ULONG32      fNotifyByPos : 1;              // 17 BitPosition                   
/*0x008*/         ULONG32      fSetCapture : 1;               // 18 BitPosition                   
/*0x008*/         ULONG32      iAniDropDir : 5;               // 19 BitPosition                   
              };                                                                                  
/*0x00C*/     struct _tagPOINT ptMouseLast;                   // 2 elements, 0x8 bytes (sizeof)   
/*0x014*/     INT32        mnFocus;                                                               
/*0x018*/     INT32        cmdLast;                                                               
/*0x01C*/     UINT8        _PADDING0_[0x4];                                                       
/*0x020*/     struct _tagTHREADINFO* ptiMenuStateOwner;                                           
/*0x028*/     ULONG32      dwLockCount;                                                           
/*0x02C*/     UINT8        _PADDING1_[0x4];                                                       
/*0x030*/     struct _tagMENUSTATE* pmnsPrev;                                                     
/*0x038*/     struct _tagPOINT ptButtonDown;                  // 2 elements, 0x8 bytes (sizeof)   
/*0x040*/     UINT64       uButtonDownHitArea;                                                    
/*0x048*/     UINT32       uButtonDownIndex;                                                      
/*0x04C*/     INT32        vkButtonDown;                                                          
/*0x050*/     UINT64       uDraggingHitArea;                                                      
/*0x058*/     UINT32       uDraggingIndex;                                                        
/*0x05C*/     UINT32       uDraggingFlags;                                                        
/*0x060*/     struct _HDC__* hdcWndAni;                                                           
/*0x068*/     ULONG32      dwAniStartTime;                                                        
/*0x06C*/     INT32        ixAni;                                                                 
/*0x070*/     INT32        iyAni;                                                                 
/*0x074*/     INT32        cxAni;                                                                 
/*0x078*/     INT32        cyAni;                                                                 
/*0x07C*/     UINT8        _PADDING2_[0x4];                                                       
/*0x080*/     struct _HBITMAP__* hbmAni;                                                          
/*0x088*/     struct _HDC__* hdcAni;                                                              
          }tagMENUSTATE, *PtagMENUSTATE;                                                          
                                                                                                  
          typedef struct _tagMLIST             // 3 elements, 0x18 bytes (sizeof) 
          {                                                                       
/*0x000*/     struct _tagQMSG* pqmsgRead;                                         
/*0x008*/     struct _tagQMSG* pqmsgWriteLast;                                    
/*0x010*/     ULONG32      cMsgs;                                                 
/*0x014*/     UINT8        _PADDING0_[0x4];                                       
          }tagMLIST, *PtagMLIST;                                                  
                                                                                  
          typedef struct _tagMONITOR            // 13 elements, 0x90 bytes (sizeof) 
          {                                                                         
/*0x000*/     struct _HEAD head;                // 2 elements, 0x10 bytes (sizeof)  
/*0x010*/     struct _tagMONITOR* pMonitorNext;                                     
/*0x018*/     ULONG32      dwMONFlags;                                              
/*0x01C*/     struct _tagRECT rcMonitorReal;    // 4 elements, 0x10 bytes (sizeof)  
/*0x02C*/     struct _tagRECT rcWorkReal;       // 4 elements, 0x10 bytes (sizeof)  
/*0x03C*/     UINT8        _PADDING0_[0x4];                                         
/*0x040*/     struct _HRGN__* hrgnMonitorReal;                                      
/*0x048*/     INT16        Spare0;                                                  
/*0x04A*/     INT16        cWndStack;                                               
/*0x04C*/     UINT8        _PADDING1_[0x4];                                         
/*0x050*/     VOID*        hDev;                                                    
/*0x058*/     VOID*        hDevReal;                                                
/*0x060*/     UINT8        DockTargets[4][7];                                       
/*0x07C*/     UINT8        _PADDING2_[0x4];                                         
/*0x080*/     struct _tagMONITOR* Flink;                                            
/*0x088*/     struct _tagMONITOR* Blink;                                            
          }tagMONITOR, *PtagMONITOR;                                                
                                                                                    
          typedef struct _tagMSGPPINFO   // 1 elements, 0x4 bytes (sizeof) 
          {                                                                
/*0x000*/     ULONG32      dwIndexMsgPP;                                   
          }tagMSGPPINFO, *PtagMSGPPINFO;                                   
                                                                           
          typedef struct _tagOEMBITMAPINFO // 4 elements, 0x10 bytes (sizeof) 
          {                                                                   
/*0x000*/     INT32        x;                                                 
/*0x004*/     INT32        y;                                                 
/*0x008*/     INT32        cx;                                                
/*0x00C*/     INT32        cy;                                                
          }tagOEMBITMAPINFO, *PtagOEMBITMAPINFO;                                   
                                                                              
          typedef struct _tagPOOLRECORD // 3 elements, 0x40 bytes (sizeof) 
          {                                                                
/*0x000*/     VOID*        ExtraData;                                      
/*0x008*/     UINT64       size;                                           
/*0x010*/     VOID*        trace[6];                                       
          }tagPOOLRECORD, *PtagPOOLRECORD;                                   
                                                                           
          typedef struct _tagPOPUPMENU                // 36 elements, 0x58 bytes (sizeof) 
          {                                                                               
              struct                                  // 25 elements, 0x4 bytes (sizeof)  
              {                                                                           
/*0x000*/         ULONG32      fIsMenuBar : 1;        // 0 BitPosition                    
/*0x000*/         ULONG32      fHasMenuBar : 1;       // 1 BitPosition                    
/*0x000*/         ULONG32      fIsSysMenu : 1;        // 2 BitPosition                    
/*0x000*/         ULONG32      fIsTrackPopup : 1;     // 3 BitPosition                    
/*0x000*/         ULONG32      fDroppedLeft : 1;      // 4 BitPosition                    
/*0x000*/         ULONG32      fHierarchyDropped : 1; // 5 BitPosition                    
/*0x000*/         ULONG32      fRightButton : 1;      // 6 BitPosition                    
/*0x000*/         ULONG32      fToggle : 1;           // 7 BitPosition                    
/*0x000*/         ULONG32      fSynchronous : 1;      // 8 BitPosition                    
/*0x000*/         ULONG32      fFirstClick : 1;       // 9 BitPosition                    
/*0x000*/         ULONG32      fDropNextPopup : 1;    // 10 BitPosition                   
/*0x000*/         ULONG32      fNoNotify : 1;         // 11 BitPosition                   
/*0x000*/         ULONG32      fAboutToHide : 1;      // 12 BitPosition                   
/*0x000*/         ULONG32      fShowTimer : 1;        // 13 BitPosition                   
/*0x000*/         ULONG32      fHideTimer : 1;        // 14 BitPosition                   
/*0x000*/         ULONG32      fDestroyed : 1;        // 15 BitPosition                   
/*0x000*/         ULONG32      fDelayedFree : 1;      // 16 BitPosition                   
/*0x000*/         ULONG32      fFlushDelayedFree : 1; // 17 BitPosition                   
/*0x000*/         ULONG32      fFreed : 1;            // 18 BitPosition                   
/*0x000*/         ULONG32      fInCancel : 1;         // 19 BitPosition                   
/*0x000*/         ULONG32      fTrackMouseEvent : 1;  // 20 BitPosition                   
/*0x000*/         ULONG32      fSendUninit : 1;       // 21 BitPosition                   
/*0x000*/         ULONG32      fRtoL : 1;             // 22 BitPosition                   
/*0x000*/         ULONG32      iDropDir : 5;          // 23 BitPosition                   
/*0x000*/         ULONG32      fUseMonitorRect : 1;   // 28 BitPosition                   
              };                                                                          
/*0x008*/     struct _tagWND* spwndNotify;                                                
/*0x010*/     struct _tagWND* spwndPopupMenu;                                             
/*0x018*/     struct _tagWND* spwndNextPopup;                                             
/*0x020*/     struct _tagWND* spwndPrevPopup;                                             
/*0x028*/     struct _tagMENU* spmenu;                                                    
/*0x030*/     struct _tagMENU* spmenuAlternate;                                           
/*0x038*/     struct _tagWND* spwndActivePopup;                                           
/*0x040*/     struct _tagPOPUPMENU* ppopupmenuRoot;                                       
/*0x048*/     struct _tagPOPUPMENU* ppmDelayedFree;                                       
/*0x050*/     UINT32       posSelectedItem;                                               
/*0x054*/     UINT32       posDropped;                                                    
          }tagPOPUPMENU, *PtagPOPUPMENU;                                                  
                                                                                          
          typedef struct _tagPROCESS_HID_REQUEST               // 11 elements, 0x28 bytes (sizeof) 
          {                                                                                        
/*0x000*/     struct _LIST_ENTRY link;                         // 2 elements, 0x10 bytes (sizeof)  
/*0x010*/     UINT16       usUsagePage;                                                            
/*0x012*/     UINT16       usUsage;                                                                
              struct                                           // 4 elements, 0x4 bytes (sizeof)   
              {                                                                                    
/*0x014*/         INT32        fSinkable : 1;                  // 0 BitPosition                    
/*0x014*/         INT32        fExSinkable : 1;                // 1 BitPosition                    
/*0x014*/         INT32        fDevNotify : 1;                 // 2 BitPosition                    
/*0x014*/         INT32        fExclusiveOrphaned : 1;         // 3 BitPosition                    
              };                                                                                   
              union                                            // 3 elements, 0x8 bytes (sizeof)   
              {                                                                                    
/*0x018*/         struct _tagHID_TLC_INFO* pTLCInfo;                                               
/*0x018*/         struct _tagHID_PAGEONLY_REQUEST* pPORequest;                                     
/*0x018*/         VOID*        ptr;                                                                
              };                                                                                   
/*0x020*/     struct _tagWND* spwndTarget;                                                         
          }tagPROCESS_HID_REQUEST, *PtagPROCESS_HID_REQUEST;                                       
                                                                                                   
          typedef struct _tagPROCESS_HID_TABLE              // 21 elements, 0x68 bytes (sizeof) 
          {                                                                                     
/*0x000*/     struct _LIST_ENTRY link;                      // 2 elements, 0x10 bytes (sizeof)  
/*0x010*/     struct _LIST_ENTRY InclusionList;             // 2 elements, 0x10 bytes (sizeof)  
/*0x020*/     struct _LIST_ENTRY UsagePageList;             // 2 elements, 0x10 bytes (sizeof)  
/*0x030*/     struct _LIST_ENTRY ExclusionList;             // 2 elements, 0x10 bytes (sizeof)  
/*0x040*/     struct _tagWND* spwndTargetMouse;                                                 
/*0x048*/     struct _tagWND* spwndTargetKbd;                                                   
/*0x050*/     INT32        nSinks;                                                              
/*0x054*/     UINT8        _PADDING0_[0x4];                                                     
/*0x058*/     struct _tagPROCESS_HID_REQUEST* pLastRequest;                                     
/*0x060*/     UINT16       UsagePageLast;                                                       
/*0x062*/     UINT16       UsageLast;                                                           
              struct                                        // 11 elements, 0x4 bytes (sizeof)  
              {                                                                                 
/*0x064*/         INT32        fRawMouse : 1;               // 0 BitPosition                    
/*0x064*/         INT32        fNoLegacyMouse : 1;          // 1 BitPosition                    
/*0x064*/         INT32        fRawMouseSink : 1;           // 2 BitPosition                    
/*0x064*/         INT32        fExclusiveMouseSink : 1;     // 3 BitPosition                    
/*0x064*/         INT32        fRawKeyboard : 1;            // 4 BitPosition                    
/*0x064*/         INT32        fNoLegacyKeyboard : 1;       // 5 BitPosition                    
/*0x064*/         INT32        fRawKeyboardSink : 1;        // 6 BitPosition                    
/*0x064*/         INT32        fExclusiveKeyboardSink : 1;  // 7 BitPosition                    
/*0x064*/         INT32        fCaptureMouse : 1;           // 8 BitPosition                    
/*0x064*/         INT32        fNoHotKeys : 1;              // 9 BitPosition                    
/*0x064*/         INT32        fAppKeys : 1;                // 10 BitPosition                   
              };                                                                                
          }tagPROCESS_HID_TABLE, *PtagPROCESS_HID_TABLE;                                        
                                                                                                
          typedef struct _tagUSERSTARTUPINFO // 8 elements, 0x1C bytes (sizeof) 
          {                                                                     
/*0x000*/     ULONG32      cb;                                                  
/*0x004*/     ULONG32      dwX;                                                 
/*0x008*/     ULONG32      dwY;                                                 
/*0x00C*/     ULONG32      dwXSize;                                             
/*0x010*/     ULONG32      dwYSize;                                             
/*0x014*/     ULONG32      dwFlags;                                             
/*0x018*/     UINT16       wShowWindow;                                         
/*0x01A*/     UINT16       cbReserved2;                                         
          }tagUSERSTARTUPINFO, *PtagUSERSTARTUPINFO;                                   
                                                                                
          typedef struct _tagPROCESSINFO                     // 55 elements, 0x300 bytes (sizeof) 
          {                                                                                       
/*0x000*/     struct _EPROCESS* Process;                                                          
/*0x008*/     ULONG32      RefCount;                                                              
/*0x00C*/     ULONG32      W32PF_Flags;                                                           
/*0x010*/     struct _KEVENT* InputIdleEvent;                                                     
/*0x018*/     ULONG32      StartCursorHideTime;                                                   
/*0x01C*/     UINT8        _PADDING0_[0x4];                                                       
/*0x020*/     struct _W32PROCESS* NextStart;                                                      
/*0x028*/     VOID*        pDCAttrList;                                                           
/*0x030*/     VOID*        pBrushAttrList;                                                        
/*0x038*/     ULONG32      W32Pid;                                                                
/*0x03C*/     LONG32       GDIHandleCount;                                                        
/*0x040*/     ULONG32      GDIHandleCountPeak;                                                    
/*0x044*/     LONG32       UserHandleCount;                                                       
/*0x048*/     ULONG32      UserHandleCountPeak;                                                   
/*0x04C*/     UINT8        _PADDING1_[0x4];                                                       
/*0x050*/     struct _EX_PUSH_LOCK GDIPushLock;              // 7 elements, 0x8 bytes (sizeof)    
/*0x058*/     struct _RTL_AVL_TABLE GDIEngUserMemAllocTable; // 11 elements, 0x68 bytes (sizeof)  
/*0x0C0*/     struct _LIST_ENTRY GDIDcAttrFreeList;          // 2 elements, 0x10 bytes (sizeof)   
/*0x0D0*/     struct _LIST_ENTRY GDIBrushAttrFreeList;       // 2 elements, 0x10 bytes (sizeof)   
/*0x0E0*/     struct _LIST_ENTRY GDIW32PIDLockedBitmaps;     // 2 elements, 0x10 bytes (sizeof)   
/*0x0F0*/     VOID*        hSecureGdiSharedHandleTable;                                           
/*0x0F8*/     VOID*        DxProcess;                                                             
/*0x100*/     struct _tagTHREADINFO* ptiList;                                                     
/*0x108*/     struct _tagTHREADINFO* ptiMainThread;                                               
/*0x110*/     struct _tagDESKTOP* rpdeskStartup;                                                  
/*0x118*/     struct _tagCLS* pclsPrivateList;                                                    
/*0x120*/     struct _tagCLS* pclsPublicList;                                                     
/*0x128*/     struct _tagWOWPROCESSINFO* pwpi;                                                    
/*0x130*/     struct _tagPROCESSINFO* ppiNext;                                                    
/*0x138*/     struct _tagPROCESSINFO* ppiNextRunning;                                             
/*0x140*/     UINT32       cThreads;                                                              
/*0x144*/     UINT8        _PADDING2_[0x4];                                                       
/*0x148*/     struct _HDESK__* hdeskStartup;                                                      
/*0x150*/     UINT32       cSysExpunge;                                                           
/*0x154*/     ULONG32      dwhmodLibLoadedMask;                                                   
/*0x158*/     VOID*        ahmodLibLoaded[32];                                                    
/*0x258*/     struct _tagWINDOWSTATION* rpwinsta;                                                 
/*0x260*/     struct _HWINSTA__* hwinsta;                                                         
/*0x268*/     ULONG32      amwinsta;                                                              
/*0x26C*/     ULONG32      dwHotkey;                                                              
/*0x270*/     struct _HMONITOR__* hMonitor;                                                       
/*0x278*/     struct _tagDESKTOPVIEW* pdvList;                                                    
/*0x280*/     UINT32       iClipSerialNumber;                                                     
/*0x284*/     UINT8        _PADDING3_[0x4];                                                       
/*0x288*/     struct _RTL_BITMAP bmHandleFlags;              // 2 elements, 0x10 bytes (sizeof)   
/*0x298*/     struct _tagCURSOR* pCursorCache;                                                    
/*0x2A0*/     VOID*        pClientBase;                                                           
/*0x2A8*/     ULONG32      dwLpkEntryPoints;                                                      
/*0x2AC*/     UINT8        _PADDING4_[0x4];                                                       
/*0x2B0*/     struct _tagW32JOB* pW32Job;                                                         
/*0x2B8*/     ULONG32      dwImeCompatFlags;                                                      
/*0x2BC*/     struct _LUID luidSession;                      // 2 elements, 0x8 bytes (sizeof)    
/*0x2C4*/     struct _tagUSERSTARTUPINFO usi;                // 8 elements, 0x1C bytes (sizeof)   
              union                                          // 2 elements, 0x4 bytes (sizeof)    
              {                                                                                   
/*0x2E0*/         ULONG32      Flags;                                                             
                  struct                                     // 2 elements, 0x4 bytes (sizeof)    
                  {                                                                               
/*0x2E0*/             UINT32       fHasMagContext : 1;       // 0 BitPosition                     
/*0x2E0*/             UINT32       Unused : 31;              // 1 BitPosition                     
                  };                                                                              
              };                                                                                  
/*0x2E4*/     ULONG32      dwLayout;                                                              
/*0x2E8*/     struct _tagPROCESS_HID_TABLE* pHidTable;                                            
/*0x2F0*/     ULONG32      dwRegisteredClasses;                                                   
/*0x2F4*/     UINT8        _PADDING5_[0x4];                                                       
/*0x2F8*/     struct _VWPL* pvwplWndGCList;                                                       
          }tagPROCESSINFO, *PtagPROCESSINFO;                                                      
                                                                                                  
          typedef struct _tagPROFILEVALUEINFO // 3 elements, 0x10 bytes (sizeof) 
          {                                                                      
/*0x000*/     ULONG32      dwValue;                                              
/*0x004*/     UINT32       uSection;                                             
/*0x008*/     WCHAR*       pwszKeyName;                                          
          }tagPROFILEVALUEINFO, *PtagPROFILEVALUEINFO;                                   
                                                                                 
          typedef struct _tagPROP           // 3 elements, 0x10 bytes (sizeof) 
          {                                                                    
/*0x000*/     VOID*        hData;                                              
/*0x008*/     UINT16       atomKey;                                            
/*0x00A*/     UINT16       fs;                                                 
/*0x00C*/     UINT8        _PADDING0_[0x4];                                    
          }tagPROP, *PtagPROP;                                                 
                                                                               
          typedef struct _tagPROPLIST   // 3 elements, 0x18 bytes (sizeof) 
          {                                                                
/*0x000*/     UINT32       cEntries;                                       
/*0x004*/     UINT32       iFirstFree;                                     
/*0x008*/     struct _tagPROP aprop[1];                                    
          }tagPROPLIST, *PtagPROPLIST;                                     
                                                                           
          typedef struct _tagQ                    // 28 elements, 0x158 bytes (sizeof) 
          {                                                                            
/*0x000*/     struct _tagMLIST mlInput;           // 3 elements, 0x18 bytes (sizeof)   
/*0x018*/     struct _tagTHREADINFO* ptiSysLock;                                       
/*0x020*/     UINT64       idSysLock;                                                  
/*0x028*/     UINT64       idSysPeek;                                                  
/*0x030*/     struct _tagTHREADINFO* ptiMouse;                                         
/*0x038*/     struct _tagTHREADINFO* ptiKeyboard;                                      
/*0x040*/     struct _tagWND* spwndCapture;                                            
/*0x048*/     struct _tagWND* spwndFocus;                                              
/*0x050*/     struct _tagWND* spwndActive;                                             
/*0x058*/     struct _tagWND* spwndActivePrev;                                         
/*0x060*/     UINT32       codeCapture;                                                
/*0x064*/     UINT32       msgDblClk;                                                  
/*0x068*/     UINT16       xbtnDblClk;                                                 
/*0x06A*/     UINT8        _PADDING0_[0x2];                                            
/*0x06C*/     ULONG32      timeDblClk;                                                 
/*0x070*/     struct _HWND__* hwndDblClk;                                              
/*0x078*/     struct _tagPOINT ptDblClk;          // 2 elements, 0x8 bytes (sizeof)    
/*0x080*/     struct _tagPOINT ptMouseMove;       // 2 elements, 0x8 bytes (sizeof)    
/*0x088*/     UINT8        afKeyRecentDown[32];                                        
/*0x0A8*/     UINT8        afKeyState[64];                                             
/*0x0E8*/     struct _tagCARET caret;             // 15 elements, 0x48 bytes (sizeof)  
/*0x130*/     struct _tagCURSOR* spcurCurrent;                                         
/*0x138*/     INT32        iCursorLevel;                                               
/*0x13C*/     ULONG32      QF_flags;                                                   
/*0x140*/     UINT16       cThreads;                                                   
/*0x142*/     UINT16       cLockCount;                                                 
/*0x144*/     UINT32       msgJournal;                                                 
/*0x148*/     INT64        ExtraInfo;                                                  
/*0x150*/     ULONG32      ulEtwReserved1;                                             
/*0x154*/     UINT8        _PADDING1_[0x4];                                            
          }tagQ, *PtagQ;                                                               
                                                                                       
          typedef struct _tagQMSG                // 13 elements, 0x68 bytes (sizeof) 
          {                                                                          
/*0x000*/     struct _tagQMSG* pqmsgNext;                                            
/*0x008*/     struct _tagQMSG* pqmsgPrev;                                            
/*0x010*/     struct _tagMSG msg;                // 6 elements, 0x30 bytes (sizeof)  
/*0x040*/     INT64        ExtraInfo;                                                
/*0x048*/     struct _tagPOINT ptMouseReal;      // 2 elements, 0x8 bytes (sizeof)   
              struct                             // 2 elements, 0x4 bytes (sizeof)   
              {                                                                      
/*0x050*/         ULONG32      dwQEvent : 30;    // 0 BitPosition                    
/*0x050*/         ULONG32      Padding : 2;      // 30 BitPosition                   
              };                                                                     
              struct                             // 4 elements, 0x4 bytes (sizeof)   
              {                                                                      
/*0x054*/         INT32        Wow64Message : 1; // 0 BitPosition                    
/*0x054*/         INT32        NoCoalesce : 1;   // 1 BitPosition                    
/*0x054*/         INT32        FromTouch : 1;    // 2 BitPosition                    
/*0x054*/         INT32        FromPen : 1;      // 3 BitPosition                    
              };                                                                     
/*0x058*/     struct _tagTHREADINFO* pti;                                            
/*0x060*/     struct _tagMSGPPINFO MsgPPInfo;    // 1 elements, 0x4 bytes (sizeof)   
/*0x064*/     UINT8        _PADDING0_[0x4];                                          
          }tagQMSG, *PtagQMSG;                                                       
                                                                                     
          typedef struct _tagSBCALC       // 16 elements, 0x40 bytes (sizeof) 
          {                                                                   
/*0x000*/     INT32        posMin;                                            
/*0x004*/     INT32        posMax;                                            
/*0x008*/     INT32        page;                                              
/*0x00C*/     INT32        pos;                                               
/*0x010*/     INT32        pxTop;                                             
/*0x014*/     INT32        pxBottom;                                          
/*0x018*/     INT32        pxLeft;                                            
/*0x01C*/     INT32        pxRight;                                           
/*0x020*/     INT32        cpxThumb;                                          
/*0x024*/     INT32        pxUpArrow;                                         
/*0x028*/     INT32        pxDownArrow;                                       
/*0x02C*/     INT32        pxStart;                                           
/*0x030*/     INT32        pxThumbBottom;                                     
/*0x034*/     INT32        pxThumbTop;                                        
/*0x038*/     INT32        cpx;                                               
/*0x03C*/     INT32        pxMin;                                             
          }tagSBCALC, *PtagSBCALC;                                            
                                                                              
          typedef struct _tagSBDATA // 4 elements, 0x10 bytes (sizeof) 
          {                                                            
/*0x000*/     INT32        posMin;                                     
/*0x004*/     INT32        posMax;                                     
/*0x008*/     INT32        page;                                       
/*0x00C*/     INT32        pos;                                        
          }tagSBDATA, *PtagSBDATA;                                     
                                                                       
          typedef struct _tagSBINFO   // 3 elements, 0x24 bytes (sizeof) 
          {                                                              
/*0x000*/     INT32        WSBflags;                                     
/*0x004*/     struct _tagSBDATA Horz; // 4 elements, 0x10 bytes (sizeof) 
/*0x014*/     struct _tagSBDATA Vert; // 4 elements, 0x10 bytes (sizeof) 
          }tagSBINFO, *PtagSBINFO;                                       
                                                                         
          typedef struct _tagSBTRACK              // 17 elements, 0x68 bytes (sizeof) 
          {                                                                           
              struct                              // 4 elements, 0x4 bytes (sizeof)   
              {                                                                       
/*0x000*/         ULONG32      fHitOld : 1;       // 0 BitPosition                    
/*0x000*/         ULONG32      fTrackVert : 1;    // 1 BitPosition                    
/*0x000*/         ULONG32      fCtlSB : 1;        // 2 BitPosition                    
/*0x000*/         ULONG32      fTrackRecalc : 1;  // 3 BitPosition                    
              };                                                                      
/*0x008*/     struct _tagWND* spwndTrack;                                             
/*0x010*/     struct _tagWND* spwndSB;                                                
/*0x018*/     struct _tagWND* spwndSBNotify;                                          
/*0x020*/     struct _tagRECT rcTrack;            // 4 elements, 0x10 bytes (sizeof)  
/*0x030*/     FUNCT_00A3_1310_xxxpfnSB* xxxpfnSB;                                     
/*0x038*/     UINT32       cmdSB;                                                     
/*0x03C*/     UINT8        _PADDING0_[0x4];                                           
/*0x040*/     UINT64       hTimerSB;                                                  
/*0x048*/     INT32        dpxThumb;                                                  
/*0x04C*/     INT32        pxOld;                                                     
/*0x050*/     INT32        posOld;                                                    
/*0x054*/     INT32        posNew;                                                    
/*0x058*/     INT32        nBar;                                                      
/*0x05C*/     UINT8        _PADDING1_[0x4];                                           
/*0x060*/     struct _tagSBCALC* pSBCalc;                                             
          }tagSBTRACK, *PtagSBTRACK;                                                  
                                                                                      
          typedef struct _tagTEXTMETRICW       // 20 elements, 0x3C bytes (sizeof) 
          {                                                                        
/*0x000*/     LONG32       tmHeight;                                               
/*0x004*/     LONG32       tmAscent;                                               
/*0x008*/     LONG32       tmDescent;                                              
/*0x00C*/     LONG32       tmInternalLeading;                                      
/*0x010*/     LONG32       tmExternalLeading;                                      
/*0x014*/     LONG32       tmAveCharWidth;                                         
/*0x018*/     LONG32       tmMaxCharWidth;                                         
/*0x01C*/     LONG32       tmWeight;                                               
/*0x020*/     LONG32       tmOverhang;                                             
/*0x024*/     LONG32       tmDigitizedAspectX;                                     
/*0x028*/     LONG32       tmDigitizedAspectY;                                     
/*0x02C*/     WCHAR        tmFirstChar;                                            
/*0x02E*/     WCHAR        tmLastChar;                                             
/*0x030*/     WCHAR        tmDefaultChar;                                          
/*0x032*/     WCHAR        tmBreakChar;                                            
/*0x034*/     UINT8        tmItalic;                                               
/*0x035*/     UINT8        tmUnderlined;                                           
/*0x036*/     UINT8        tmStruckOut;                                            
/*0x037*/     UINT8        tmPitchAndFamily;                                       
/*0x038*/     UINT8        tmCharSet;                                              
/*0x039*/     UINT8        _PADDING0_[0x3];                                        
          }tagTEXTMETRICW, *PtagTEXTMETRICW;                                       
                                                                                   
           typedef struct _tagSERVERINFO                              // 59 elements, 0x1220 bytes (sizeof) 
           {                                                                                                
/*0x000*/      ULONG32      dwSRVIFlags;                                                                    
/*0x004*/      UINT8        _PADDING0_[0x4];                                                                
/*0x008*/      UINT64       cHandleEntries;                                                                 
/*0x010*/      FUNCT_0075_144C_mpFnidPfn* mpFnidPfn[32];                                                    
/*0x110*/      FUNCT_0075_0FAD_lpfnWndProc_aStoCidPfn* aStoCidPfn[7];                                       
/*0x148*/      UINT16       mpFnid_serverCBWndProc[31];                                                     
/*0x186*/      UINT8        _PADDING1_[0x2];                                                                
/*0x188*/      struct _PFNCLIENT apfnClientA;                         // 23 elements, 0xB8 bytes (sizeof)   
/*0x240*/      struct _PFNCLIENT apfnClientW;                         // 23 elements, 0xB8 bytes (sizeof)   
/*0x2F8*/      struct _PFNCLIENTWORKER apfnClientWorker;              // 11 elements, 0x58 bytes (sizeof)   
/*0x350*/      ULONG32      cbHandleTable;                                                                  
/*0x354*/      UINT16       atomSysClass[25];                                                               
/*0x386*/      UINT8        _PADDING2_[0x2];                                                                
/*0x388*/      ULONG32      dwDefaultHeapBase;                                                              
/*0x38C*/      ULONG32      dwDefaultHeapSize;                                                              
/*0x390*/      UINT32       uiShellMsg;                                                                     
/*0x394*/      struct _tagMBSTRING MBStrings[11];                                                           
/*0x54C*/      UINT16       atomIconSmProp;                                                                 
/*0x54E*/      UINT16       atomIconProp;                                                                   
/*0x550*/      UINT16       atomContextHelpIdProp;                                                          
/*0x552*/      UINT16       atomFrostedWindowProp;                                                          
/*0x554*/      CHAR         acOemToAnsi[256];                                                               
/*0x654*/      CHAR         acAnsiToOem[256];                                                               
/*0x754*/      ULONG32      dwInstalledEventHooks;                                                          
/*0x758*/      INT32        aiSysMet[97];                                                                   
/*0x8DC*/      ULONG32      argbSystemUnmatched[31];                                                        
/*0x958*/      ULONG32      argbSystem[31];                                                                 
/*0x9D4*/      UINT8        _PADDING3_[0x4];                                                                
/*0x9D8*/      struct _HBRUSH__* ahbrSystem[31];                                                            
/*0xAD0*/      struct _HBRUSH__* hbrGray;                                                                   
/*0xAD8*/      struct _tagPOINT ptCursor;                             // 2 elements, 0x8 bytes (sizeof)     
/*0xAE0*/      struct _tagPOINT ptCursorReal;                         // 2 elements, 0x8 bytes (sizeof)     
/*0xAE8*/      ULONG32      dwLastRITEventTickCount;                                                        
/*0xAEC*/      INT32        nEvents;                                                                        
/*0xAF0*/      UINT32       dtScroll;                                                                       
/*0xAF4*/      UINT32       dtLBSearch;                                                                     
/*0xAF8*/      UINT32       dtCaretBlink;                                                                   
/*0xAFC*/      UINT32       ucWheelScrollLines;                                                             
/*0xB00*/      UINT32       ucWheelScrollChars;                                                             
/*0xB04*/      INT32        wMaxLeftOverlapChars;                                                           
/*0xB08*/      INT32        wMaxRightOverlapChars;                                                          
/*0xB0C*/      INT32        cxSysFontChar;                                                                  
/*0xB10*/      INT32        cySysFontChar;                                                                  
/*0xB14*/      struct _tagTEXTMETRICW tmSysFont;                      // 20 elements, 0x3C bytes (sizeof)   
/*0xB50*/      struct _tagDPISERVERINFO dpiSystem;                    // 6 elements, 0x28 bytes (sizeof)    
/*0xB78*/      struct _HICON__* hIconSmWindows;                                                             
/*0xB80*/      struct _HICON__* hIcoWindows;                                                                
/*0xB88*/      ULONG32      dwKeyCache;                                                                     
/*0xB8C*/      ULONG32      dwAsyncKeyCache;                                                                
/*0xB90*/      ULONG32      cCaptures;                                                                      
/*0xB94*/      struct _tagOEMBITMAPINFO oembmi[93];                                                         
/*0x1164*/     struct _tagRECT rcScreenReal;                          // 4 elements, 0x10 bytes (sizeof)    
/*0x1174*/     UINT16       BitCount;                                                                       
/*0x1176*/     UINT16       dmLogPixels;                                                                    
/*0x1178*/     UINT8        Planes;                                                                         
/*0x1179*/     UINT8        BitsPixel;                                                                      
/*0x117A*/     UINT8        _PADDING4_[0x2];                                                                
/*0x117C*/     ULONG32      PUSIFlags;                                                                      
/*0x1180*/     UINT32       uCaretWidth;                                                                    
/*0x1184*/     UINT16       UILangID;                                                                       
/*0x1186*/     UINT8        _PADDING5_[0x2];                                                                
/*0x1188*/     ULONG32      dwLastSystemRITEventTickCountUpdate;                                            
/*0x118C*/     ULONG32      adwDBGTAGFlags[35];                                                             
/*0x1218*/     ULONG32      dwTagCount;                                                                     
/*0x121C*/     ULONG32      dwRIPFlags;                                                                     
           }tagSERVERINFO, *PtagSERVERINFO;                                                                 
                                                                                                            
          typedef struct _WNDMSG            // 2 elements, 0x10 bytes (sizeof) 
          {                                                                    
/*0x000*/     UINT32       maxMsgs;                                            
/*0x004*/     UINT8        _PADDING0_[0x4];                                    
/*0x008*/     UINT8*       abMsgs;                                             
          }WNDMSG, *PWNDMSG;                                                   
                                                                               
          typedef struct _tagSHAREDINFO          // 8 elements, 0x238 bytes (sizeof) 
          {                                                                          
/*0x000*/     struct _tagSERVERINFO* psi;                                            
/*0x008*/     struct _HANDLEENTRY* aheList;                                          
/*0x010*/     ULONG32      HeEntrySize;                                              
/*0x014*/     UINT8        _PADDING0_[0x4];                                          
/*0x018*/     struct _tagDISPLAYINFO* pDispInfo;                                     
/*0x020*/     UINT64       ulSharedDelta;                                            
/*0x028*/     struct _WNDMSG awmControl[31];                                         
/*0x218*/     struct _WNDMSG DefWindowMsgs;      // 2 elements, 0x10 bytes (sizeof)  
/*0x228*/     struct _WNDMSG DefWindowSpecMsgs;  // 2 elements, 0x10 bytes (sizeof)  
          }tagSHAREDINFO, *PtagSHAREDINFO;                                           
                                                                                     
          typedef struct _tagSMS                                  // 15 elements, 0x70 bytes (sizeof) 
          {                                                                                           
/*0x000*/     struct _tagSMS* psmsNext;                                                               
/*0x008*/     struct _tagSMS* psmsReceiveNext;                                                        
/*0x010*/     struct _tagTHREADINFO* ptiSender;                                                       
/*0x018*/     struct _tagTHREADINFO* ptiReceiver;                                                     
/*0x020*/     FUNCT_00A3_1255_lpResultCallBack* lpResultCallBack;                                     
/*0x028*/     UINT64       dwData;                                                                    
/*0x030*/     struct _tagTHREADINFO* ptiCallBackSender;                                               
/*0x038*/     INT64        lRet;                                                                      
/*0x040*/     ULONG32      tSent;                                                                     
/*0x044*/     UINT32       flags;                                                                     
/*0x048*/     UINT64       wParam;                                                                    
/*0x050*/     INT64        lParam;                                                                    
/*0x058*/     UINT32       message;                                                                   
/*0x05C*/     UINT8        _PADDING0_[0x4];                                                           
/*0x060*/     struct _tagWND* spwnd;                                                                  
/*0x068*/     VOID*        pvCapture;                                                                 
          }tagSMS, *PtagSMS;                                                                          
                                                                                                      
          typedef struct _tagSPB            // 7 elements, 0x40 bytes (sizeof) 
          {                                                                    
/*0x000*/     struct _tagSPB* pspbNext;                                        
/*0x008*/     struct _tagWND* spwnd;                                           
/*0x010*/     struct _HBITMAP__* hbm;                                          
/*0x018*/     struct _tagRECT rc;           // 4 elements, 0x10 bytes (sizeof) 
/*0x028*/     struct _HRGN__* hrgn;                                            
/*0x030*/     ULONG32      flags;                                              
/*0x034*/     UINT8        _PADDING0_[0x4];                                    
/*0x038*/     UINT64       ulSaveId;                                           
          }tagSPB, *PtagSPB;                                                   
                                                                               
          typedef struct _THROBJHEAD        // 3 elements, 0x18 bytes (sizeof) 
          {                                                                    
/*0x000*/     VOID*        h;                                                  
/*0x008*/     ULONG32      cLockObj;                                           
/*0x00C*/     UINT8        _PADDING0_[0x4];                                    
/*0x010*/     struct _tagTHREADINFO* pti;                                      
          }THROBJHEAD, *PTHROBJHEAD;                                           
                                                                               
          typedef struct _tagSVR_INSTANCE_INFO                // 6 elements, 0x40 bytes (sizeof) 
          {                                                                                      
/*0x000*/     struct _THROBJHEAD head;                        // 3 elements, 0x18 bytes (sizeof) 
/*0x018*/     struct _tagSVR_INSTANCE_INFO* next;                                                
/*0x020*/     struct _tagSVR_INSTANCE_INFO* nextInThisThread;                                    
/*0x028*/     ULONG32      afCmd;                                                                
/*0x02C*/     UINT8        _PADDING0_[0x4];                                                      
/*0x030*/     struct _tagWND* spwndEvent;                                                        
/*0x038*/     VOID*        pcii;                                                                 
          }tagSVR_INSTANCE_INFO, *PtagSVR_INSTANCE_INFO;                                         
                                                                                                 
          typedef struct _tagTDB              // 7 elements, 0x28 bytes (sizeof) 
          {                                                                      
/*0x000*/     struct _tagTDB* ptdbNext;                                          
/*0x008*/     INT32        nEvents;                                              
/*0x00C*/     INT32        nPriority;                                            
/*0x010*/     struct _tagTHREADINFO* pti;                                        
/*0x018*/     struct _tagWOWTHREADINFO* pwti;                                    
/*0x020*/     UINT16       hTaskWow;                                             
/*0x022*/     UINT16       TDB_Flags;                                            
/*0x024*/     UINT8        _PADDING0_[0x4];                                      
          }tagTDB, *PtagTDB;                                                     
                                                                                 
          typedef struct _tagTERMINAL            // 8 elements, 0x40 bytes (sizeof) 
          {                                                                         
/*0x000*/     ULONG32      dwTERMF_Flags;                                           
/*0x004*/     UINT8        _PADDING0_[0x4];                                         
/*0x008*/     struct _tagWND* spwndDesktopOwner;                                    
/*0x010*/     struct _tagTHREADINFO* ptiDesktop;                                    
/*0x018*/     struct _tagQ* pqDesktop;                                              
/*0x020*/     ULONG32      dwNestedLevel;                                           
/*0x024*/     UINT8        _PADDING1_[0x4];                                         
/*0x028*/     struct _KEVENT* pEventTermInit;                                       
/*0x030*/     struct _tagDESKTOP* rpdeskDestroy;                                    
/*0x038*/     struct _KEVENT* pEventInputReady;                                     
          }tagTERMINAL, *PtagTERMINAL;                                              
                                                                                    
          typedef struct _TLSPRITESTATE          // 24 elements, 0xA8 bytes (sizeof) 
          {                                                                          
/*0x000*/     UINT8        bInsideDriverCall;                                        
/*0x001*/     UINT8        _PADDING0_[0x3];                                          
/*0x004*/     ULONG32      flOriginalSurfFlags;                                      
/*0x008*/     ULONG32      iOriginalType;                                            
/*0x00C*/     ULONG32      flSpriteSurfFlags;                                        
/*0x010*/     ULONG32      iSpriteType;                                              
/*0x014*/     ULONG32      flags;                                                    
/*0x018*/     ULONG32      iType;                                                    
/*0x01C*/     UINT8        _PADDING1_[0x4];                                          
/*0x020*/     VOID*        pState;                                                   
/*0x028*/     VOID*        pfnStrokeAndFillPath;                                     
/*0x030*/     VOID*        pfnStrokePath;                                            
/*0x038*/     VOID*        pfnFillPath;                                              
/*0x040*/     VOID*        pfnPaint;                                                 
/*0x048*/     VOID*        pfnBitBlt;                                                
/*0x050*/     VOID*        pfnCopyBits;                                              
/*0x058*/     VOID*        pfnStretchBlt;                                            
/*0x060*/     VOID*        pfnTextOut;                                               
/*0x068*/     VOID*        pfnLineTo;                                                
/*0x070*/     VOID*        pfnTransparentBlt;                                        
/*0x078*/     VOID*        pfnAlphaBlend;                                            
/*0x080*/     VOID*        pfnPlgBlt;                                                
/*0x088*/     VOID*        pfnGradientFill;                                          
/*0x090*/     VOID*        pfnSaveScreenBits;                                        
/*0x098*/     VOID*        pfnStretchBltROP;                                         
/*0x0A0*/     VOID*        pfnDrawStream;                                            
          }TLSPRITESTATE, *PTLSPRITESTATE;                                           
                                                                                     
          typedef struct _tagTHREADINFO                           // 158 elements, 0x3A8 bytes (sizeof) 
          {                                                                                             
/*0x000*/     struct _ETHREAD* pEThread;                                                                
/*0x008*/     ULONG32      RefCount;                                                                    
/*0x00C*/     UINT8        _PADDING0_[0x4];                                                             
/*0x010*/     struct _TL*  ptlW32;                                                                      
/*0x018*/     VOID*        pgdiDcattr;                                                                  
/*0x020*/     VOID*        pgdiBrushAttr;                                                               
/*0x028*/     VOID*        pUMPDObjs;                                                                   
/*0x030*/     VOID*        pUMPDHeap;                                                                   
/*0x038*/     VOID*        pUMPDObj;                                                                    
/*0x040*/     VOID*        pProxyPort;                                                                  
/*0x048*/     VOID*        pClientID;                                                                   
/*0x050*/     struct _LIST_ENTRY GdiTmpTgoList;                   // 2 elements, 0x10 bytes (sizeof)    
/*0x060*/     ULONG32      pRBRecursionCount;                                                           
/*0x064*/     ULONG32      pNonRBRecursionCount;                                                        
/*0x068*/     struct _TLSPRITESTATE tlSpriteState;                // 24 elements, 0xA8 bytes (sizeof)   
/*0x110*/     VOID*        pSpriteState;                                                                
/*0x118*/     VOID*        pDevHTInfo;                                                                  
/*0x120*/     ULONG32      ulDevHTInfoUniqueness;                                                       
/*0x124*/     UINT8        _PADDING1_[0x4];                                                             
/*0x128*/     VOID*        pdcoAA;                                                                      
/*0x130*/     VOID*        pdcoRender;                                                                  
/*0x138*/     VOID*        pdcoSrc;                                                                     
/*0x140*/     UINT8        bEnableEngUpdateDeviceSurface;                                               
/*0x141*/     UINT8        bIncludeSprites;                                                             
/*0x142*/     UINT8        _PADDING2_[0x2];                                                             
/*0x144*/     ULONG32      ulWindowSystemRendering;                                                     
/*0x148*/     ULONG32      iVisRgnUniqueness;                                                           
/*0x14C*/     UINT8        _PADDING3_[0x4];                                                             
/*0x150*/     struct _TL*  ptl;                                                                         
/*0x158*/     struct _tagPROCESSINFO* ppi;                                                              
/*0x160*/     struct _tagQ* pq;                                                                         
/*0x168*/     struct _tagKL* spklActive;                                                                
/*0x170*/     struct _tagCLIENTTHREADINFO* pcti;                                                        
/*0x178*/     struct _tagDESKTOP* rpdesk;                                                               
/*0x180*/     struct _tagDESKTOPINFO* pDeskInfo;                                                        
/*0x188*/     UINT64       ulClientDelta;                                                               
/*0x190*/     struct _tagCLIENTINFO* pClientInfo;                                                       
/*0x198*/     ULONG32      TIF_flags;                                                                   
/*0x19C*/     UINT8        _PADDING4_[0x4];                                                             
/*0x1A0*/     struct _UNICODE_STRING* pstrAppName;                                                      
/*0x1A8*/     struct _tagSMS* psmsSent;                                                                 
/*0x1B0*/     struct _tagSMS* psmsCurrent;                                                              
/*0x1B8*/     struct _tagSMS* psmsReceiveList;                                                          
/*0x1C0*/     LONG32       timeLast;                                                                    
/*0x1C4*/     UINT8        _PADDING5_[0x4];                                                             
/*0x1C8*/     UINT64       idLast;                                                                      
/*0x1D0*/     INT32        exitCode;                                                                    
/*0x1D4*/     UINT8        _PADDING6_[0x4];                                                             
/*0x1D8*/     struct _HDESK__* hdesk;                                                                   
/*0x1E0*/     INT32        cPaintsReady;                                                                
/*0x1E4*/     UINT32       cTimersReady;                                                                
/*0x1E8*/     struct _tagMENUSTATE* pMenuState;                                                         
              union                                               // 2 elements, 0x8 bytes (sizeof)     
              {                                                                                         
/*0x1F0*/         struct _tagTDB* ptdb;                                                                 
/*0x1F0*/         struct _tagWINDOWSTATION* pwinsta;                                                    
              };                                                                                        
/*0x1F8*/     struct _tagSVR_INSTANCE_INFO* psiiList;                                                   
/*0x200*/     ULONG32      dwExpWinVer;                                                                 
              union                                               // 2 elements, 0x4 bytes (sizeof)     
              {                                                                                         
/*0x204*/         ULONG32      dwCompatFlags;                                                           
                  struct                                          // 32 elements, 0x4 bytes (sizeof)    
                  {                                                                                     
/*0x204*/             UINT32       IgnoreNoDiscard : 1;           // 0 BitPosition                      
/*0x204*/             UINT32       ForceTextBand : 1;             // 1 BitPosition                      
/*0x204*/             UINT32       UsePrintingEscape : 1;         // 2 BitPosition                      
/*0x204*/             UINT32       IgnoreTopMost : 1;             // 3 BitPosition                      
/*0x204*/             UINT32       CallTTDevice : 1;              // 4 BitPosition                      
/*0x204*/             UINT32       MultipleBands : 1;             // 5 BitPosition                      
/*0x204*/             UINT32       AlwaysSendSyncPaint : 1;       // 6 BitPosition                      
/*0x204*/             UINT32       EditSetTextMunge : 1;          // 7 BitPosition                      
/*0x204*/             UINT32       MoreExtraWndWords : 1;         // 8 BitPosition                      
/*0x204*/             UINT32       TTIgnoreRasterDupe : 1;        // 9 BitPosition                      
/*0x204*/             UINT32       HackWinFlags : 1;              // 10 BitPosition                     
/*0x204*/             UINT32       DealyHwndShakeChk : 1;         // 11 BitPosition                     
/*0x204*/             UINT32       EnumHelv : 1;                  // 12 BitPosition                     
/*0x204*/             UINT32       EnumTTNotDevice : 1;           // 13 BitPosition                     
/*0x204*/             UINT32       SubtractClips : 1;             // 14 BitPosition                     
/*0x204*/             UINT32       ForceTTGrapchis : 1;           // 15 BitPosition                     
/*0x204*/             UINT32       NoHRGN1 : 1;                   // 16 BitPosition                     
/*0x204*/             UINT32       NcCalcSizeOnMove : 1;          // 17 BitPosition                     
/*0x204*/             UINT32       SendMnuDblClk : 1;             // 18 BitPosition                     
/*0x204*/             UINT32       Win30AvgWidth : 1;             // 19 BitPosition                     
/*0x204*/             UINT32       GetDeviceCaps : 1;             // 20 BitPosition                     
/*0x204*/             UINT32       Winver31 : 1;                  // 21 BitPosition                     
/*0x204*/             UINT32       IncreaseStack : 1;             // 22 BitPosition                     
/*0x204*/             UINT32       Win31DevModeSize : 1;          // 23 BitPosition                     
/*0x204*/             UINT32       DisableFontAssoc : 1;          // 24 BitPosition                     
/*0x204*/             UINT32       IgnoreFaults : 1;              // 25 BitPosition                     
/*0x204*/             UINT32       NoEMFSpooling : 1;             // 26 BitPosition                     
/*0x204*/             UINT32       Random31Ux : 1;                // 27 BitPosition                     
/*0x204*/             UINT32       DontJournalAttach : 1;         // 28 BitPosition                     
/*0x204*/             UINT32       DisableDBCSProp : 1;           // 29 BitPosition                     
/*0x204*/             UINT32       SmoothScrolling : 1;           // 30 BitPosition                     
/*0x204*/             UINT32       NoScrollBarCtxMenu : 1;        // 31 BitPosition                     
                  };                                                                                    
              };                                                                                        
              union                                               // 3 elements, 0x8 bytes (sizeof)     
              {                                                                                         
/*0x208*/         ULONG32      dwCompatFlags2;                                                          
/*0x208*/         UINT64       qwCompatFlags2;                                                          
                  struct                                          // 34 elements, 0x8 bytes (sizeof)    
                  {                                                                                     
/*0x208*/             UINT64       AnimationOff : 1;              // 0 BitPosition                      
/*0x208*/             UINT64       KCOff : 1;                     // 1 BitPosition                      
/*0x208*/             UINT64       No50ExStyles : 1;              // 2 BitPosition                      
/*0x208*/             UINT64       NoDrawPatRect : 1;             // 3 BitPosition                      
/*0x208*/             UINT64       MsShellDlg : 1;                // 4 BitPosition                      
/*0x208*/             UINT64       NoDDETrackDying : 1;           // 5 BitPosition                      
/*0x208*/             UINT64       GiveUpForegound : 1;           // 6 BitPosition                      
/*0x208*/             UINT64       ActiveMenus : 1;               // 7 BitPosition                      
/*0x208*/             UINT64       EditNoMouseHide : 1;           // 8 BitPosition                      
/*0x208*/             UINT64       NoBatching : 1;                // 9 BitPosition                      
/*0x208*/             UINT64       FontSubs : 1;                  // 10 BitPosition                     
/*0x208*/             UINT64       No50ExStyleBits : 1;           // 11 BitPosition                     
/*0x208*/             UINT64       NoCustomPaperSize : 1;         // 12 BitPosition                     
/*0x208*/             UINT64       DDE : 1;                       // 13 BitPosition                     
/*0x208*/             UINT64       DefaultCharset : 1;            // 14 BitPosition                     
/*0x208*/             UINT64       NoCharDeadKey : 1;             // 15 BitPosition                     
/*0x208*/             UINT64       TryExceptCallWndProc : 1;      // 16 BitPosition                     
/*0x208*/             UINT64       NoInitFlagsOnFocus : 1;        // 17 BitPosition                     
/*0x208*/             UINT64       DDENoSync : 1;                 // 18 BitPosition                     
/*0x208*/             UINT64       NoGhost : 1;                   // 19 BitPosition                     
/*0x208*/             UINT64       DDENoAsyncReg : 1;             // 20 BitPosition                     
/*0x208*/             UINT64       StrictLLHook : 1;              // 21 BitPosition                     
/*0x208*/             UINT64       NoShadow : 1;                  // 22 BitPosition                     
/*0x208*/             UINT64       ForceFusion : 1;               // 23 BitPosition                     
/*0x208*/             UINT64       NoTimeCbProtect : 1;           // 24 BitPosition                     
/*0x208*/             UINT64       DpiAware : 1;                  // 25 BitPosition                     
/*0x208*/             UINT64       OpenGLEMF : 1;                 // 26 BitPosition                     
/*0x208*/             UINT64       TransparentBltMirror : 1;      // 27 BitPosition                     
/*0x208*/             UINT64       NoPaddedBorder : 1;            // 28 BitPosition                     
/*0x208*/             UINT64       ForceLegacyResizeNCMetr : 1;   // 29 BitPosition                     
/*0x208*/             UINT64       HardwareMixer : 1;             // 30 BitPosition                     
/*0x208*/             UINT64       NoSoftCursOnMoveSize : 1;      // 31 BitPosition                     
/*0x208*/             UINT64       NoWindowArrangement : 1;       // 32 BitPosition                     
/*0x208*/             UINT64       SpareCompatFlags2 : 31;        // 33 BitPosition                     
                  };                                                                                    
              };                                                                                        
/*0x210*/     struct _tagQ* pqAttach;                                                                   
/*0x218*/     struct _tagTHREADINFO* ptiSibling;                                                        
/*0x220*/     struct _MOVESIZEDATA* pmsd;                                                               
/*0x228*/     ULONG32      fsHooks;                                                                     
/*0x22C*/     UINT8        _PADDING7_[0x4];                                                             
/*0x230*/     struct _tagHOOK* sphkCurrent;                                                             
/*0x238*/     INT64        lParamHkCurrent;                                                             
/*0x240*/     UINT64       wParamHkCurrent;                                                             
/*0x248*/     struct _tagSBTRACK* pSBTrack;                                                             
/*0x250*/     VOID*        hEventQueueClient;                                                           
/*0x258*/     struct _KEVENT* pEventQueueServer;                                                        
/*0x260*/     struct _LIST_ENTRY PtiLink;                         // 2 elements, 0x10 bytes (sizeof)    
/*0x270*/     INT32        iCursorLevel;                                                                
/*0x274*/     struct _tagPOINT ptLast;                            // 2 elements, 0x8 bytes (sizeof)     
/*0x27C*/     struct _tagPOINT ptLastReal;                        // 2 elements, 0x8 bytes (sizeof)     
/*0x284*/     UINT8        _PADDING8_[0x4];                                                             
/*0x288*/     struct _tagWND* spwndDefaultIme;                                                          
/*0x290*/     struct _tagIMC* spDefaultImc;                                                             
/*0x298*/     struct _HKL__* hklPrev;                                                                   
/*0x2A0*/     INT32        cEnterCount;                                                                 
/*0x2A4*/     UINT8        _PADDING9_[0x4];                                                             
/*0x2A8*/     struct _tagMLIST mlPost;                            // 3 elements, 0x18 bytes (sizeof)    
/*0x2C0*/     UINT16       fsChangeBitsRemoved;                                                         
/*0x2C2*/     WCHAR        wchInjected;                                                                 
/*0x2C4*/     ULONG32      fsReserveKeys;                                                               
/*0x2C8*/     struct _KEVENT** apEvent;                                                                 
/*0x2D0*/     ULONG32      amdesk;                                                                      
/*0x2D4*/     UINT32       cWindows;                                                                    
/*0x2D8*/     UINT32       cVisWindows;                                                                 
/*0x2DC*/     UINT8        _PADDING10_[0x4];                                                            
/*0x2E0*/     struct _tagHOOK* aphkStart[16];                                                           
/*0x360*/     struct _tagCLIENTTHREADINFO cti;                    // 6 elements, 0x10 bytes (sizeof)    
/*0x370*/     VOID*        hPrevHidData;                                                                
/*0x378*/     struct _HTOUCHINPUT__* hTouchInputCurrent;                                                
/*0x380*/     struct _HGESTUREINFO__* hGestureInfoCurrent;                                              
/*0x388*/     struct _tagMSGPPINFO MsgPPInfo;                     // 1 elements, 0x4 bytes (sizeof)     
/*0x38C*/     UINT32       cNestedStableVisRgn;                                                         
/*0x390*/     struct _LIST_ENTRY readyHead;                       // 2 elements, 0x10 bytes (sizeof)    
              union                                               // 2 elements, 0x8 bytes (sizeof)     
              {                                                                                         
                  struct                                          // 5 elements, 0x4 bytes (sizeof)     
                  {                                                                                     
/*0x3A0*/             ULONG32      fSpecialInitialization : 1;    // 0 BitPosition                      
/*0x3A0*/             ULONG32      fgfSwitchInProgressSetter : 1; // 1 BitPosition                      
/*0x3A0*/             ULONG32      fPack : 26;                    // 2 BitPosition                      
/*0x3A0*/             ULONG32      fThreadCleanupFinished : 1;    // 28 BitPosition                     
/*0x3A0*/             ULONG32      fETWReserved : 3;              // 29 BitPosition                     
                  };                                                                                    
/*0x3A0*/         ULONG32      ulThreadFlags2;                                                          
              };                                                                                        
          }tagTHREADINFO, *PtagTHREADINFO;                                                              
                                                                                                        
          typedef struct _tagTOUCHINPUT // 10 elements, 0x30 bytes (sizeof) 
          {                                                                 
/*0x000*/     LONG32       x;                                               
/*0x004*/     LONG32       y;                                               
/*0x008*/     VOID*        hSource;                                         
/*0x010*/     ULONG32      dwID;                                            
/*0x014*/     ULONG32      dwFlags;                                         
/*0x018*/     ULONG32      dwMask;                                          
/*0x01C*/     ULONG32      dwTime;                                          
/*0x020*/     UINT64       dwExtraInfo;                                     
/*0x028*/     ULONG32      cxContact;                                       
/*0x02C*/     ULONG32      cyContact;                                       
          }tagTOUCHINPUT, *PtagTOUCHINPUT;                                    
                                                                            
          typedef struct _tagTOUCHINPUTINFO        // 4 elements, 0x50 bytes (sizeof) 
          {                                                                           
/*0x000*/     struct _THROBJHEAD head;             // 3 elements, 0x18 bytes (sizeof) 
/*0x018*/     ULONG32      dwcInputs;                                                 
/*0x01C*/     UINT32       uFlags;                                                    
/*0x020*/     struct _tagTOUCHINPUT TouchInput[1];                                    
          }tagTOUCHINPUTINFO, *PtagTOUCHINPUTINFO;                                    
                                                                                      
          typedef struct _tagW32JOB              // 10 elements, 0x40 bytes (sizeof) 
          {                                                                          
/*0x000*/     struct _tagW32JOB* pNext;                                              
/*0x008*/     struct _EJOB* Job;                                                     
/*0x010*/     VOID*        pAtomTable;                                               
/*0x018*/     ULONG32      restrictions;                                             
/*0x01C*/     UINT32       uProcessCount;                                            
/*0x020*/     UINT32       uMaxProcesses;                                            
/*0x024*/     UINT8        _PADDING0_[0x4];                                          
/*0x028*/     struct _tagPROCESSINFO** ppiTable;                                     
/*0x030*/     UINT32       ughCrt;                                                   
/*0x034*/     UINT32       ughMax;                                                   
/*0x038*/     UINT64*      pgh;                                                      
          }tagW32JOB, *PtagW32JOB;                                                   
                                                                                     
          typedef struct _tagWin32AllocStats   // 5 elements, 0x20 bytes (sizeof) 
          {                                                                       
/*0x000*/     UINT64       dwMaxMem;                                              
/*0x008*/     UINT64       dwCrtMem;                                              
/*0x010*/     ULONG32      dwMaxAlloc;                                            
/*0x014*/     ULONG32      dwCrtAlloc;                                            
/*0x018*/     struct _tagWin32PoolHead* pHead;                                    
          }tagWin32AllocStats, *PtagWin32AllocStats;                                   
                                                                                  
typedef struct _tagWIN32HEAP // 0 elements, 0x0 bytes (sizeof) 
{                                                              
}tagWIN32HEAP, *PtagWIN32HEAP;                                  
                                                               
          typedef struct _tagWin32PoolHead     // 4 elements, 0x20 bytes (sizeof) 
          {                                                                       
/*0x000*/     UINT64       size;                                                  
/*0x008*/     struct _tagWin32PoolHead* pPrev;                                    
/*0x010*/     struct _tagWin32PoolHead* pNext;                                    
/*0x018*/     VOID**       pTrace;                                                
          }tagWin32PoolHead, *PtagWin32PoolHead;                                   
                                                                                  
          typedef struct _tagWINDOWSTATION                // 20 elements, 0x98 bytes (sizeof) 
          {                                                                                   
/*0x000*/     ULONG32      dwSessionId;                                                       
/*0x004*/     UINT8        _PADDING0_[0x4];                                                   
/*0x008*/     struct _tagWINDOWSTATION* rpwinstaNext;                                         
/*0x010*/     struct _tagDESKTOP* rpdeskList;                                                 
/*0x018*/     struct _tagTERMINAL* pTerm;                                                     
/*0x020*/     ULONG32      dwWSF_Flags;                                                       
/*0x024*/     UINT8        _PADDING1_[0x4];                                                   
/*0x028*/     struct _tagKL* spklList;                                                        
/*0x030*/     struct _tagTHREADINFO* ptiClipLock;                                             
/*0x038*/     struct _tagTHREADINFO* ptiDrawingClipboard;                                     
/*0x040*/     struct _tagWND* spwndClipOpen;                                                  
/*0x048*/     struct _tagWND* spwndClipViewer;                                                
/*0x050*/     struct _tagWND* spwndClipOwner;                                                 
/*0x058*/     struct _tagCLIP* pClipBase;                                                     
/*0x060*/     UINT32       cNumClipFormats;                                                   
/*0x064*/     UINT32       iClipSerialNumber;                                                 
/*0x068*/     UINT32       iClipSequenceNumber;                                               
/*0x06C*/     UINT8        _PADDING2_[0x4];                                                   
/*0x070*/     struct _tagWND* spwndClipboardListener;                                         
/*0x078*/     VOID*        pGlobalAtomTable;                                                  
/*0x080*/     struct _LUID luidEndSession;                // 2 elements, 0x8 bytes (sizeof)   
/*0x088*/     struct _LUID luidUser;                      // 2 elements, 0x8 bytes (sizeof)   
/*0x090*/     VOID*        psidUser;                                                          
          }tagWINDOWSTATION, *PtagWINDOWSTATION;                                              
                                                                                              
          typedef struct _tagWND                                     // 170 elements, 0x128 bytes (sizeof) 
          {                                                                                                
/*0x000*/     struct _THRDESKHEAD head;                              // 5 elements, 0x28 bytes (sizeof)    
              union                                                  // 2 elements, 0x4 bytes (sizeof)     
              {                                                                                            
/*0x028*/         ULONG32      state;                                                                      
                  struct                                             // 32 elements, 0x4 bytes (sizeof)    
                  {                                                                                        
/*0x028*/             INT32        bHasMeun : 1;                     // 0 BitPosition                      
/*0x028*/             INT32        bHasVerticalScrollbar : 1;        // 1 BitPosition                      
/*0x028*/             INT32        bHasHorizontalScrollbar : 1;      // 2 BitPosition                      
/*0x028*/             INT32        bHasCaption : 1;                  // 3 BitPosition                      
/*0x028*/             INT32        bSendSizeMoveMsgs : 1;            // 4 BitPosition                      
/*0x028*/             INT32        bMsgBox : 1;                      // 5 BitPosition                      
/*0x028*/             INT32        bActiveFrame : 1;                 // 6 BitPosition                      
/*0x028*/             INT32        bHasSPB : 1;                      // 7 BitPosition                      
/*0x028*/             INT32        bNoNCPaint : 1;                   // 8 BitPosition                      
/*0x028*/             INT32        bSendEraseBackground : 1;         // 9 BitPosition                      
/*0x028*/             INT32        bEraseBackground : 1;             // 10 BitPosition                     
/*0x028*/             INT32        bSendNCPaint : 1;                 // 11 BitPosition                     
/*0x028*/             INT32        bInternalPaint : 1;               // 12 BitPosition                     
/*0x028*/             INT32        bUpdateDirty : 1;                 // 13 BitPosition                     
/*0x028*/             INT32        bHiddenPopup : 1;                 // 14 BitPosition                     
/*0x028*/             INT32        bForceMenuDraw : 1;               // 15 BitPosition                     
/*0x028*/             INT32        bDialogWindow : 1;                // 16 BitPosition                     
/*0x028*/             INT32        bHasCreatestructName : 1;         // 17 BitPosition                     
/*0x028*/             INT32        bServerSideWindowProc : 1;        // 18 BitPosition                     
/*0x028*/             INT32        bAnsiWindowProc : 1;              // 19 BitPosition                     
/*0x028*/             INT32        bBeingActivated : 1;              // 20 BitPosition                     
/*0x028*/             INT32        bHasPalette : 1;                  // 21 BitPosition                     
/*0x028*/             INT32        bPaintNotProcessed : 1;           // 22 BitPosition                     
/*0x028*/             INT32        bSyncPaintPending : 1;            // 23 BitPosition                     
/*0x028*/             INT32        bRecievedQuerySuspendMsg : 1;     // 24 BitPosition                     
/*0x028*/             INT32        bRecievedSuspendMsg : 1;          // 25 BitPosition                     
/*0x028*/             INT32        bToggleTopmost : 1;               // 26 BitPosition                     
/*0x028*/             INT32        bRedrawIfHung : 1;                // 27 BitPosition                     
/*0x028*/             INT32        bRedrawFrameIfHung : 1;           // 28 BitPosition                     
/*0x028*/             INT32        bAnsiCreator : 1;                 // 29 BitPosition                     
/*0x028*/             INT32        bMaximizesToMonitor : 1;          // 30 BitPosition                     
/*0x028*/             INT32        bDestroyed : 1;                   // 31 BitPosition                     
                  };                                                                                       
              };                                                                                           
              union                                                  // 2 elements, 0x4 bytes (sizeof)     
              {                                                                                            
/*0x02C*/         ULONG32      state2;                                                                     
                  struct                                             // 30 elements, 0x4 bytes (sizeof)    
                  {                                                                                        
/*0x02C*/             INT32        bWMPaintSent : 1;                 // 0 BitPosition                      
/*0x02C*/             INT32        bEndPaintInvalidate : 1;          // 1 BitPosition                      
/*0x02C*/             INT32        bStartPaint : 1;                  // 2 BitPosition                      
/*0x02C*/             INT32        bOldUI : 1;                       // 3 BitPosition                      
/*0x02C*/             INT32        bHasClientEdge : 1;               // 4 BitPosition                      
/*0x02C*/             INT32        bBottomMost : 1;                  // 5 BitPosition                      
/*0x02C*/             INT32        bFullScreen : 1;                  // 6 BitPosition                      
/*0x02C*/             INT32        bInDestroy : 1;                   // 7 BitPosition                      
/*0x02C*/             INT32        bWin31Compat : 1;                 // 8 BitPosition                      
/*0x02C*/             INT32        bWin40Compat : 1;                 // 9 BitPosition                      
/*0x02C*/             INT32        bWin50Compat : 1;                 // 10 BitPosition                     
/*0x02C*/             INT32        bMaximizeMonitorRegion : 1;       // 11 BitPosition                     
/*0x02C*/             INT32        bCloseButtonDown : 1;             // 12 BitPosition                     
/*0x02C*/             INT32        bMaximizeButtonDown : 1;          // 13 BitPosition                     
/*0x02C*/             INT32        bMinimizeButtonDown : 1;          // 14 BitPosition                     
/*0x02C*/             INT32        bHelpButtonDown : 1;              // 15 BitPosition                     
/*0x02C*/             INT32        bScrollBarLineUpBtnDown : 1;      // 16 BitPosition                     
/*0x02C*/             INT32        bScrollBarPageUpBtnDown : 1;      // 17 BitPosition                     
/*0x02C*/             INT32        bScrollBarPageDownBtnDown : 1;    // 18 BitPosition                     
/*0x02C*/             INT32        bScrollBarLineDownBtnDown : 1;    // 19 BitPosition                     
/*0x02C*/             INT32        bAnyScrollButtonDown : 1;         // 20 BitPosition                     
/*0x02C*/             INT32        bScrollBarVerticalTracking : 1;   // 21 BitPosition                     
/*0x02C*/             INT32        bForceNCPaint : 1;                // 22 BitPosition                     
/*0x02C*/             INT32        bForceFullNCPaintClipRgn : 1;     // 23 BitPosition                     
/*0x02C*/             INT32        FullScreenMode : 3;               // 24 BitPosition                     
/*0x02C*/             INT32        bCaptionTextTruncated : 1;        // 27 BitPosition                     
/*0x02C*/             INT32        bNoMinmaxAnimatedRects : 1;       // 28 BitPosition                     
/*0x02C*/             INT32        bSmallIconFromWMQueryDrag : 1;    // 29 BitPosition                     
/*0x02C*/             INT32        bShellHookRegistered : 1;         // 30 BitPosition                     
/*0x02C*/             INT32        bWMCreateMsgProcessed : 1;        // 31 BitPosition                     
                  };                                                                                       
              };                                                                                           
              union                                                  // 2 elements, 0x4 bytes (sizeof)     
              {                                                                                            
/*0x030*/         ULONG32      ExStyle;                                                                    
                  struct                                             // 32 elements, 0x4 bytes (sizeof)    
                  {                                                                                        
/*0x030*/             INT32        bWS_EX_DLGMODALFRAME : 1;         // 0 BitPosition                      
/*0x030*/             INT32        bUnused1 : 1;                     // 1 BitPosition                      
/*0x030*/             INT32        bWS_EX_NOPARENTNOTIFY : 1;        // 2 BitPosition                      
/*0x030*/             INT32        bWS_EX_TOPMOST : 1;               // 3 BitPosition                      
/*0x030*/             INT32        bWS_EX_ACCEPTFILE : 1;            // 4 BitPosition                      
/*0x030*/             INT32        bWS_EX_TRANSPARENT : 1;           // 5 BitPosition                      
/*0x030*/             INT32        bWS_EX_MDICHILD : 1;              // 6 BitPosition                      
/*0x030*/             INT32        bWS_EX_TOOLWINDOW : 1;            // 7 BitPosition                      
/*0x030*/             INT32        bWS_EX_WINDOWEDGE : 1;            // 8 BitPosition                      
/*0x030*/             INT32        bWS_EX_CLIENTEDGE : 1;            // 9 BitPosition                      
/*0x030*/             INT32        bWS_EX_CONTEXTHELP : 1;           // 10 BitPosition                     
/*0x030*/             INT32        bMakeVisibleWhenUnghosted : 1;    // 11 BitPosition                     
/*0x030*/             INT32        bWS_EX_RIGHT : 1;                 // 12 BitPosition                     
/*0x030*/             INT32        bWS_EX_RTLREADING : 1;            // 13 BitPosition                     
/*0x030*/             INT32        bWS_EX_LEFTSCROLLBAR : 1;         // 14 BitPosition                     
/*0x030*/             INT32        bUnused2 : 1;                     // 15 BitPosition                     
/*0x030*/             INT32        bWS_EX_CONTROLPARENT : 1;         // 16 BitPosition                     
/*0x030*/             INT32        bWS_EX_STATICEDGE : 1;            // 17 BitPosition                     
/*0x030*/             INT32        bWS_EX_APPWINDOW : 1;             // 18 BitPosition                     
/*0x030*/             INT32        bWS_EX_LAYERED : 1;               // 19 BitPosition                     
/*0x030*/             INT32        bWS_EX_NOINHERITLAYOUT : 1;       // 20 BitPosition                     
/*0x030*/             INT32        bUnused3 : 1;                     // 21 BitPosition                     
/*0x030*/             INT32        bWS_EX_LAYOUTRTL : 1;             // 22 BitPosition                     
/*0x030*/             INT32        bWS_EX_NOPADDEDBORDER : 1;        // 23 BitPosition                     
/*0x030*/             INT32        bUnused4 : 1;                     // 24 BitPosition                     
/*0x030*/             INT32        bWS_EX_COMPOSITED : 1;            // 25 BitPosition                     
/*0x030*/             INT32        bUIStateActive : 1;               // 26 BitPosition                     
/*0x030*/             INT32        bWS_EX_NOACTIVATE : 1;            // 27 BitPosition                     
/*0x030*/             INT32        bWS_EX_COMPOSITEDCompositing : 1; // 28 BitPosition                     
/*0x030*/             INT32        bRedirected : 1;                  // 29 BitPosition                     
/*0x030*/             INT32        bUIStateKbdAccelHidden : 1;       // 30 BitPosition                     
/*0x030*/             INT32        bUIStateFocusRectHidden : 1;      // 31 BitPosition                     
                  };                                                                                       
              };                                                                                           
              union                                                  // 2 elements, 0x4 bytes (sizeof)     
              {                                                                                            
/*0x034*/         ULONG32      style;                                                                      
                  struct                                             // 31 elements, 0x4 bytes (sizeof)    
                  {                                                                                        
/*0x034*/             INT32        bReserved1 : 16;                  // 0 BitPosition                      
/*0x034*/             INT32        bWS_MAXIMIZEBOX : 1;              // 16 BitPosition                     
/*0x034*/             INT32        bReserved2 : 16;                  // 0 BitPosition                      
/*0x034*/             INT32        bWS_TABSTOP : 1;                  // 16 BitPosition                     
/*0x034*/             INT32        bReserved3 : 16;                  // 0 BitPosition                      
/*0x034*/             INT32        bUnused5 : 1;                     // 16 BitPosition                     
/*0x034*/             INT32        bWS_MINIMIZEBOX : 1;              // 17 BitPosition                     
/*0x034*/             INT32        bReserved4 : 16;                  // 0 BitPosition                      
/*0x034*/             INT32        bUnused6 : 1;                     // 16 BitPosition                     
/*0x034*/             INT32        bWS_GROUP : 1;                    // 17 BitPosition                     
/*0x034*/             INT32        bReserved5 : 16;                  // 0 BitPosition                      
/*0x034*/             INT32        bUnused7 : 2;                     // 16 BitPosition                     
/*0x034*/             INT32        bWS_THICKFRAME : 1;               // 18 BitPosition                     
/*0x034*/             INT32        bReserved6 : 16;                  // 0 BitPosition                      
/*0x034*/             INT32        bUnused8 : 2;                     // 16 BitPosition                     
/*0x034*/             INT32        bWS_SIZEBOX : 1;                  // 18 BitPosition                     
/*0x034*/             INT32        bReserved7 : 16;                  // 0 BitPosition                      
/*0x034*/             INT32        bUnused9 : 3;                     // 16 BitPosition                     
/*0x034*/             INT32        bWS_SYSMENU : 1;                  // 19 BitPosition                     
/*0x034*/             INT32        bWS_HSCROLL : 1;                  // 20 BitPosition                     
/*0x034*/             INT32        bWS_VSCROLL : 1;                  // 21 BitPosition                     
/*0x034*/             INT32        bWS_DLGFRAME : 1;                 // 22 BitPosition                     
/*0x034*/             INT32        bWS_BORDER : 1;                   // 23 BitPosition                     
/*0x034*/             INT32        bMaximized : 1;                   // 24 BitPosition                     
/*0x034*/             INT32        bWS_CLIPCHILDREN : 1;             // 25 BitPosition                     
/*0x034*/             INT32        bWS_CLIPSIBLINGS : 1;             // 26 BitPosition                     
/*0x034*/             INT32        bDisabled : 1;                    // 27 BitPosition                     
/*0x034*/             INT32        bVisible : 1;                     // 28 BitPosition                     
/*0x034*/             INT32        bMinimized : 1;                   // 29 BitPosition                     
/*0x034*/             INT32        bWS_CHILD : 1;                    // 30 BitPosition                     
/*0x034*/             INT32        bWS_POPUP : 1;                    // 31 BitPosition                     
                  };                                                                                       
              };                                                                                           
/*0x038*/     VOID*        hModule;                                                                        
/*0x040*/     UINT16       hMod16;                                                                         
/*0x042*/     UINT16       fnid;                                                                           
/*0x044*/     UINT8        _PADDING0_[0x4];                                                                
/*0x048*/     struct _tagWND* spwndNext;                                                                   
/*0x050*/     struct _tagWND* spwndPrev;                                                                   
/*0x058*/     struct _tagWND* spwndParent;                                                                 
/*0x060*/     struct _tagWND* spwndChild;                                                                  
/*0x068*/     struct _tagWND* spwndOwner;                                                                  
/*0x070*/     struct _tagRECT rcWindow;                              // 4 elements, 0x10 bytes (sizeof)    
/*0x080*/     struct _tagRECT rcClient;                              // 4 elements, 0x10 bytes (sizeof)    
/*0x090*/     FUNCT_0075_0FAD_lpfnWndProc_aStoCidPfn* lpfnWndProc;                                         
/*0x098*/     struct _tagCLS* pcls;                                                                        
/*0x0A0*/     struct _HRGN__* hrgnUpdate;                                                                  
/*0x0A8*/     struct _tagPROPLIST* ppropList;                                                              
/*0x0B0*/     struct _tagSBINFO* pSBInfo;                                                                  
/*0x0B8*/     struct _tagMENU* spmenuSys;                                                                  
/*0x0C0*/     struct _tagMENU* spmenu;                                                                     
/*0x0C8*/     struct _HRGN__* hrgnClip;                                                                    
/*0x0D0*/     struct _HRGN__* hrgnNewFrame;                                                                
/*0x0D8*/     struct _LARGE_UNICODE_STRING strName;                  // 4 elements, 0x10 bytes (sizeof)    
/*0x0E8*/     INT32        cbwndExtra;                                                                     
/*0x0EC*/     UINT8        _PADDING1_[0x4];                                                                
/*0x0F0*/     struct _tagWND* spwndLastActive;                                                             
/*0x0F8*/     struct _HIMC__* hImc;                                                                        
/*0x100*/     UINT64       dwUserData;                                                                     
/*0x108*/     struct _ACTIVATION_CONTEXT* pActCtx;                                                         
/*0x110*/     struct _D3DMATRIX* pTransform;                                                               
/*0x118*/     struct _tagWND* spwndClipboardListenerNext;                                                  
              union                                                  // 2 elements, 0x4 bytes (sizeof)     
              {                                                                                            
/*0x120*/         ULONG32      ExStyle2;                                                                   
                  struct                                             // 12 elements, 0x4 bytes (sizeof)    
                  {                                                                                        
/*0x120*/             INT32        bClipboardListener : 1;           // 0 BitPosition                      
/*0x120*/             INT32        bLayeredInvalidate : 1;           // 1 BitPosition                      
/*0x120*/             INT32        bRedirectedForPrint : 1;          // 2 BitPosition                      
/*0x120*/             INT32        bLinked : 1;                      // 3 BitPosition                      
/*0x120*/             INT32        bLayeredForDWM : 1;               // 4 BitPosition                      
/*0x120*/             INT32        bLayeredLimbo : 1;                // 5 BitPosition                      
/*0x120*/             INT32        bHIGHDPI_UNAWARE_Unused : 1;      // 6 BitPosition                      
/*0x120*/             INT32        bVerticallyMaximizedLeft : 1;     // 7 BitPosition                      
/*0x120*/             INT32        bVerticallyMaximizedRight : 1;    // 8 BitPosition                      
/*0x120*/             INT32        bHasOverlay : 1;                  // 9 BitPosition                      
/*0x120*/             INT32        bConsoleWindow : 1;               // 10 BitPosition                     
/*0x120*/             INT32        bChildNoActivate : 1;             // 11 BitPosition                     
                  };                                                                                       
              };                                                                                           
          }tagWND, *PtagWND;                                                                               
                                                                                                           
          typedef struct _tagWOWPROCESSINFO          // 10 elements, 0x48 bytes (sizeof) 
          {                                                                              
/*0x000*/     struct _tagWOWPROCESSINFO* pwpiNext;                                       
/*0x008*/     struct _tagTHREADINFO* ptiScheduled;                                       
/*0x010*/     struct _tagTDB* ptdbHead;                                                  
/*0x018*/     VOID*        lpfnWowExitTask;                                              
/*0x020*/     struct _KEVENT* pEventWowExec;                                             
/*0x028*/     VOID*        hEventWowExecClient;                                          
/*0x030*/     ULONG32      nSendLock;                                                    
/*0x034*/     ULONG32      nRecvLock;                                                    
/*0x038*/     struct _tagTHREADINFO* CSOwningThread;                                     
/*0x040*/     LONG32       CSLockCount;                                                  
/*0x044*/     UINT8        _PADDING0_[0x4];                                              
          }tagWOWPROCESSINFO, *PtagWOWPROCESSINFO;                                       
                                                                                         
          typedef struct _tagWOWTHREADINFO        // 6 elements, 0x30 bytes (sizeof) 
          {                                                                          
/*0x000*/     struct _tagWOWTHREADINFO* pwtiNext;                                    
/*0x008*/     ULONG32      idTask;                                                   
/*0x00C*/     UINT8        _PADDING0_[0x4];                                          
/*0x010*/     UINT64       idWaitObject;                                             
/*0x018*/     ULONG32      idParentProcess;                                          
/*0x01C*/     UINT8        _PADDING1_[0x4];                                          
/*0x020*/     struct _KEVENT* pIdleEvent;                                            
/*0x028*/     INT32        fAssigned;                                                
/*0x02C*/     UINT8        _PADDING2_[0x4];                                          
          }tagWOWTHREADINFO, *PtagWOWTHREADINFO;                                     
                                                                                     
           typedef struct _TEB                                                  // 101 elements, 0x1818 bytes (sizeof) 
           {                                                                                                           
/*0x000*/      struct _NT_TIB NtTib;                                            // 8 elements, 0x38 bytes (sizeof)     
/*0x038*/      VOID*        EnvironmentPointer;                                                                        
/*0x040*/      struct _CLIENT_ID ClientId;                                      // 2 elements, 0x10 bytes (sizeof)     
/*0x050*/      VOID*        ActiveRpcHandle;                                                                           
/*0x058*/      VOID*        ThreadLocalStoragePointer;                                                                 
/*0x060*/      struct _PEB* ProcessEnvironmentBlock;                                                                   
/*0x068*/      ULONG32      LastErrorValue;                                                                            
/*0x06C*/      ULONG32      CountOfOwnedCriticalSections;                                                              
/*0x070*/      VOID*        CsrClientThread;                                                                           
/*0x078*/      VOID*        Win32ThreadInfo;                                                                           
/*0x080*/      ULONG32      User32Reserved[26];                                                                        
/*0x0E8*/      ULONG32      UserReserved[5];                                                                           
/*0x0FC*/      UINT8        _PADDING0_[0x4];                                                                           
/*0x100*/      VOID*        WOW32Reserved;                                                                             
/*0x108*/      ULONG32      CurrentLocale;                                                                             
/*0x10C*/      ULONG32      FpSoftwareStatusRegister;                                                                  
/*0x110*/      VOID*        SystemReserved1[54];                                                                       
/*0x2C0*/      LONG32       ExceptionCode;                                                                             
/*0x2C4*/      UINT8        _PADDING1_[0x4];                                                                           
/*0x2C8*/      struct _ACTIVATION_CONTEXT_STACK* ActivationContextStackPointer;                                        
/*0x2D0*/      UINT8        SpareBytes[24];                                                                            
/*0x2E8*/      ULONG32      TxFsContext;                                                                               
/*0x2EC*/      UINT8        _PADDING2_[0x4];                                                                           
/*0x2F0*/      struct _GDI_TEB_BATCH GdiTebBatch;                               // 3 elements, 0x4E8 bytes (sizeof)    
/*0x7D8*/      struct _CLIENT_ID RealClientId;                                  // 2 elements, 0x10 bytes (sizeof)     
/*0x7E8*/      VOID*        GdiCachedProcessHandle;                                                                    
/*0x7F0*/      ULONG32      GdiClientPID;                                                                              
/*0x7F4*/      ULONG32      GdiClientTID;                                                                              
/*0x7F8*/      VOID*        GdiThreadLocalInfo;                                                                        
/*0x800*/      UINT64       Win32ClientInfo[62];                                                                       
/*0x9F0*/      VOID*        glDispatchTable[233];                                                                      
/*0x1138*/     UINT64       glReserved1[29];                                                                           
/*0x1220*/     VOID*        glReserved2;                                                                               
/*0x1228*/     VOID*        glSectionInfo;                                                                             
/*0x1230*/     VOID*        glSection;                                                                                 
/*0x1238*/     VOID*        glTable;                                                                                   
/*0x1240*/     VOID*        glCurrentRC;                                                                               
/*0x1248*/     VOID*        glContext;                                                                                 
/*0x1250*/     ULONG32      LastStatusValue;                                                                           
/*0x1254*/     UINT8        _PADDING3_[0x4];                                                                           
/*0x1258*/     struct _UNICODE_STRING StaticUnicodeString;                      // 3 elements, 0x10 bytes (sizeof)     
/*0x1268*/     WCHAR        StaticUnicodeBuffer[261];                                                                  
/*0x1472*/     UINT8        _PADDING4_[0x6];                                                                           
/*0x1478*/     VOID*        DeallocationStack;                                                                         
/*0x1480*/     VOID*        TlsSlots[64];                                                                              
/*0x1680*/     struct _LIST_ENTRY TlsLinks;                                     // 2 elements, 0x10 bytes (sizeof)     
/*0x1690*/     VOID*        Vdm;                                                                                       
/*0x1698*/     VOID*        ReservedForNtRpc;                                                                          
/*0x16A0*/     VOID*        DbgSsReserved[2];                                                                          
/*0x16B0*/     ULONG32      HardErrorMode;                                                                             
/*0x16B4*/     UINT8        _PADDING5_[0x4];                                                                           
/*0x16B8*/     VOID*        Instrumentation[11];                                                                       
/*0x1710*/     struct _GUID ActivityId;                                         // 4 elements, 0x10 bytes (sizeof)     
/*0x1720*/     VOID*        SubProcessTag;                                                                             
/*0x1728*/     VOID*        EtwLocalData;                                                                              
/*0x1730*/     VOID*        EtwTraceData;                                                                              
/*0x1738*/     VOID*        WinSockData;                                                                               
/*0x1740*/     ULONG32      GdiBatchCount;                                                                             
               union                                                            // 3 elements, 0x4 bytes (sizeof)      
               {                                                                                                       
/*0x1744*/         struct _PROCESSOR_NUMBER CurrentIdealProcessor;              // 3 elements, 0x4 bytes (sizeof)      
/*0x1744*/         ULONG32      IdealProcessorValue;                                                                   
                   struct                                                       // 4 elements, 0x4 bytes (sizeof)      
                   {                                                                                                   
/*0x1744*/             UINT8        ReservedPad0;                                                                      
/*0x1745*/             UINT8        ReservedPad1;                                                                      
/*0x1746*/             UINT8        ReservedPad2;                                                                      
/*0x1747*/             UINT8        IdealProcessor;                                                                    
                   };                                                                                                  
               };                                                                                                      
/*0x1748*/     ULONG32      GuaranteedStackBytes;                                                                      
/*0x174C*/     UINT8        _PADDING6_[0x4];                                                                           
/*0x1750*/     VOID*        ReservedForPerf;                                                                           
/*0x1758*/     VOID*        ReservedForOle;                                                                            
/*0x1760*/     ULONG32      WaitingOnLoaderLock;                                                                       
/*0x1764*/     UINT8        _PADDING7_[0x4];                                                                           
/*0x1768*/     VOID*        SavedPriorityState;                                                                        
/*0x1770*/     UINT64       SoftPatchPtr1;                                                                             
/*0x1778*/     VOID*        ThreadPoolData;                                                                            
/*0x1780*/     VOID**       TlsExpansionSlots;                                                                         
/*0x1788*/     VOID*        DeallocationBStore;                                                                        
/*0x1790*/     VOID*        BStoreLimit;                                                                               
/*0x1798*/     ULONG32      MuiGeneration;                                                                             
/*0x179C*/     ULONG32      IsImpersonating;                                                                           
/*0x17A0*/     VOID*        NlsCache;                                                                                  
/*0x17A8*/     VOID*        pShimData;                                                                                 
/*0x17B0*/     ULONG32      HeapVirtualAffinity;                                                                       
/*0x17B4*/     UINT8        _PADDING8_[0x4];                                                                           
/*0x17B8*/     VOID*        CurrentTransactionHandle;                                                                  
/*0x17C0*/     struct _TEB_ACTIVE_FRAME* ActiveFrame;                                                                  
/*0x17C8*/     VOID*        FlsData;                                                                                   
/*0x17D0*/     VOID*        PreferredLanguages;                                                                        
/*0x17D8*/     VOID*        UserPrefLanguages;                                                                         
/*0x17E0*/     VOID*        MergedPrefLanguages;                                                                       
/*0x17E8*/     ULONG32      MuiImpersonation;                                                                          
               union                                                            // 2 elements, 0x2 bytes (sizeof)      
               {                                                                                                       
/*0x17EC*/         UINT16       CrossTebFlags;                                                                         
/*0x17EC*/         UINT16       SpareCrossTebBits : 16;                         // 0 BitPosition                       
               };                                                                                                      
               union                                                            // 2 elements, 0x2 bytes (sizeof)      
               {                                                                                                       
/*0x17EE*/         UINT16       SameTebFlags;                                                                          
                   struct                                                       // 12 elements, 0x2 bytes (sizeof)     
                   {                                                                                                   
/*0x17EE*/             UINT16       SafeThunkCall : 1;                          // 0 BitPosition                       
/*0x17EE*/             UINT16       InDebugPrint : 1;                           // 1 BitPosition                       
/*0x17EE*/             UINT16       HasFiberData : 1;                           // 2 BitPosition                       
/*0x17EE*/             UINT16       SkipThreadAttach : 1;                       // 3 BitPosition                       
/*0x17EE*/             UINT16       WerInShipAssertCode : 1;                    // 4 BitPosition                       
/*0x17EE*/             UINT16       RanProcessInit : 1;                         // 5 BitPosition                       
/*0x17EE*/             UINT16       ClonedThread : 1;                           // 6 BitPosition                       
/*0x17EE*/             UINT16       SuppressDebugMsg : 1;                       // 7 BitPosition                       
/*0x17EE*/             UINT16       DisableUserStackWalk : 1;                   // 8 BitPosition                       
/*0x17EE*/             UINT16       RtlExceptionAttached : 1;                   // 9 BitPosition                       
/*0x17EE*/             UINT16       InitialThread : 1;                          // 10 BitPosition                      
/*0x17EE*/             UINT16       SpareSameTebBits : 5;                       // 11 BitPosition                      
                   };                                                                                                  
               };                                                                                                      
/*0x17F0*/     VOID*        TxnScopeEnterCallback;                                                                     
/*0x17F8*/     VOID*        TxnScopeExitCallback;                                                                      
/*0x1800*/     VOID*        TxnScopeContext;                                                                           
/*0x1808*/     ULONG32      LockCount;                                                                                 
/*0x180C*/     ULONG32      SpareUlong0;                                                                               
/*0x1810*/     VOID*        ResourceRetValue;                                                                          
           }TEB, *PTEB;                                                                                                
                                                                                                                       
          typedef struct _TEB_ACTIVE_FRAME               // 3 elements, 0x18 bytes (sizeof) 
          {                                                                                 
/*0x000*/     ULONG32      Flags;                                                           
/*0x004*/     UINT8        _PADDING0_[0x4];                                                 
/*0x008*/     struct _TEB_ACTIVE_FRAME* Previous;                                           
/*0x010*/     struct _TEB_ACTIVE_FRAME_CONTEXT* Context;                                    
          }TEB_ACTIVE_FRAME, *PTEB_ACTIVE_FRAME;                                            
                                                                                            
          typedef struct _TEB_ACTIVE_FRAME_CONTEXT // 2 elements, 0x10 bytes (sizeof) 
          {                                                                           
/*0x000*/     ULONG32      Flags;                                                     
/*0x004*/     UINT8        _PADDING0_[0x4];                                           
/*0x008*/     CHAR*        FrameName;                                                 
          }TEB_ACTIVE_FRAME_CONTEXT, *PTEB_ACTIVE_FRAME_CONTEXT;                                   
                                                                                      
          typedef struct _TL                                                                                 // 3 elements, 0x18 bytes (sizeof) 
          {                                                                                                                                     
/*0x000*/     struct _TL*  next;                                                                                                                
/*0x008*/     VOID*        pobj;                                                                                                                
/*0x010*/     FUNCT_00A3_0468_Free_InterfaceReference_InterfaceDereference_DeleteProcedure_pfnFree* pfnFree;                                    
          }TL, *PTL;                                                                                                                            
                                                                                                                                                
          typedef struct _TP_CALLBACK_ENVIRON_V3                                                              // 10 elements, 0x48 bytes (sizeof) 
          {                                                                                                                                       
/*0x000*/     ULONG32      Version;                                                                                                               
/*0x004*/     UINT8        _PADDING0_[0x4];                                                                                                       
/*0x008*/     struct _TP_POOL* Pool;                                                                                                              
/*0x010*/     struct _TP_CLEANUP_GROUP* CleanupGroup;                                                                                             
/*0x018*/     FUNCT_00A3_00A2_CleanupGroupCancelCallback_DeRefSecurityDescriptor* CleanupGroupCancelCallback;                                     
/*0x020*/     VOID*        RaceDll;                                                                                                               
/*0x028*/     struct _ACTIVATION_CONTEXT* ActivationContext;                                                                                      
/*0x030*/     FUNCT_00A3_00AA_FinalizationCallback* FinalizationCallback;                                                                         
              union                                                                                           // 2 elements, 0x4 bytes (sizeof)   
              {                                                                                                                                   
/*0x038*/         ULONG32      Flags;                                                                                                             
                  struct                                                                                      // 3 elements, 0x4 bytes (sizeof)   
                  {                                                                                                                               
/*0x038*/             ULONG32      LongFunction : 1;                                                          // 0 BitPosition                    
/*0x038*/             ULONG32      Persistent : 1;                                                            // 1 BitPosition                    
/*0x038*/             ULONG32      Private : 30;                                                              // 2 BitPosition                    
                  }s;                                                                                                                             
              }u;                                                                                                                                 
/*0x03C*/     enum _TP_CALLBACK_PRIORITY CallbackPriority;                                                                                        
/*0x040*/     ULONG32      Size;                                                                                                                  
/*0x044*/     UINT8        _PADDING1_[0x4];                                                                                                       
          }TP_CALLBACK_ENVIRON_V3, *PTP_CALLBACK_ENVIRON_V3;                                                                                      
                                                                                                                                                  
typedef struct _TP_CALLBACK_INSTANCE // 0 elements, 0x0 bytes (sizeof) 
{                                                                      
}TP_CALLBACK_INSTANCE, *PTP_CALLBACK_INSTANCE;                                  
                                                                       
typedef struct _TP_CLEANUP_GROUP // 0 elements, 0x0 bytes (sizeof) 
{                                                                  
}TP_CLEANUP_GROUP, *PTP_CLEANUP_GROUP;                                  
                                                                   
          typedef struct _TP_DIRECT               // 3 elements, 0x10 bytes (sizeof) 
          {                                                                          
/*0x000*/     FUNCT_00A3_00DF_Callback* Callback;                                    
/*0x008*/     ULONG32      NumaNode;                                                 
/*0x00C*/     UINT8        IdealProcessor;                                           
/*0x00D*/     UINT8        _PADDING0_[0x3];                                          
          }TP_DIRECT, *PTP_DIRECT;                                                   
                                                                                     
          typedef struct _TP_NBQ_GUARD       // 2 elements, 0x20 bytes (sizeof) 
          {                                                                     
/*0x000*/     struct _LIST_ENTRY GuardLinks; // 2 elements, 0x10 bytes (sizeof) 
/*0x010*/     VOID*        Guards[2];                                           
          }TP_NBQ_GUARD, *PTP_NBQ_GUARD;                                        
                                                                                
typedef struct _TP_POOL // 0 elements, 0x0 bytes (sizeof) 
{                                                         
}TP_POOL, *PTP_POOL;                                      
                                                          
          typedef struct _TP_TASK                   // 5 elements, 0x38 bytes (sizeof) 
          {                                                                            
/*0x000*/     struct _TP_TASK_CALLBACKS* Callbacks;                                    
/*0x008*/     ULONG32      NumaNode;                                                   
/*0x00C*/     UINT8        IdealProcessor;                                             
/*0x00D*/     UINT8        _PADDING0_[0x3];                                            
/*0x010*/     struct _TP_NBQ_GUARD PostGuard;       // 2 elements, 0x20 bytes (sizeof) 
/*0x030*/     VOID*        NBQNode;                                                    
          }TP_TASK, *PTP_TASK;                                                         
                                                                                       
          typedef struct _TP_TASK_CALLBACKS                     // 2 elements, 0x10 bytes (sizeof) 
          {                                                                                        
/*0x000*/     FUNCT_00A3_00C7_ExecuteCallback* ExecuteCallback;                                    
/*0x008*/     FUNCT_00A3_00CC_Unposted* Unposted;                                                  
          }TP_TASK_CALLBACKS, *PTP_TASK_CALLBACKS;                                                 
                                                                                                   
          typedef struct _TXN_PARAMETER_BLOCK // 3 elements, 0x10 bytes (sizeof) 
          {                                                                      
/*0x000*/     UINT16       Length;                                               
/*0x002*/     UINT16       TxFsContext;                                          
/*0x004*/     UINT8        _PADDING0_[0x4];                                      
/*0x008*/     VOID*        TransactionObject;                                    
          }TXN_PARAMETER_BLOCK, *PTXN_PARAMETER_BLOCK;                                   
                                                                                 
          typedef struct _VK_FUNCTION_PARAM // 2 elements, 0x8 bytes (sizeof) 
          {                                                                   
/*0x000*/     UINT8        NLSFEProcIndex;                                    
/*0x001*/     UINT8        _PADDING0_[0x3];                                   
/*0x004*/     ULONG32      NLSFEProcParam;                                    
          }VK_FUNCTION_PARAM, *PVK_FUNCTION_PARAM;                                  
                                                                              
          typedef struct _VK_TO_BIT // 2 elements, 0x2 bytes (sizeof) 
          {                                                           
/*0x000*/     UINT8        Vk;                                        
/*0x001*/     UINT8        ModBits;                                   
          }VK_TO_BIT, *PVK_TO_BIT;                                    
                                                                      
          typedef struct _VK_TO_FUNCTION_TABLE           // 6 elements, 0x84 bytes (sizeof) 
          {                                                                                 
/*0x000*/     UINT8        Vk;                                                              
/*0x001*/     UINT8        NLSFEProcType;                                                   
/*0x002*/     UINT8        NLSFEProcCurrent;                                                
/*0x003*/     UINT8        NLSFEProcSwitch;                                                 
/*0x004*/     struct _VK_FUNCTION_PARAM NLSFEProc[8];                                       
/*0x044*/     struct _VK_FUNCTION_PARAM NLSFEProcAlt[8];                                    
          }VK_TO_FUNCTION_TABLE, *PVK_TO_FUNCTION_TABLE;                                    
                                                                                            
          typedef struct _VK_TO_WCHAR_TABLE       // 3 elements, 0x10 bytes (sizeof) 
          {                                                                          
/*0x000*/     struct _VK_TO_WCHARS1* pVkToWchars;                                    
/*0x008*/     UINT8        nModifications;                                           
/*0x009*/     UINT8        cbSize;                                                   
/*0x00A*/     UINT8        _PADDING0_[0x6];                                          
          }VK_TO_WCHAR_TABLE, *PVK_TO_WCHAR_TABLE;                                   
                                                                                     
          typedef struct _VK_TO_WCHARS1 // 3 elements, 0x4 bytes (sizeof) 
          {                                                               
/*0x000*/     UINT8        VirtualKey;                                    
/*0x001*/     UINT8        Attributes;                                    
/*0x002*/     WCHAR        wch[1];                                        
          }VK_TO_WCHARS1, *PVK_TO_WCHARS1;                                  
                                                                          
          typedef struct _VK_VALUES_STRINGS // 2 elements, 0x10 bytes (sizeof) 
          {                                                                    
/*0x000*/     CHAR*        pszMultiNames;                                      
/*0x008*/     UINT8        fReserved;                                          
/*0x009*/     UINT8        _PADDING0_[0x7];                                    
          }VK_VALUES_STRINGS, *PVK_VALUES_STRINGS;                                   
                                                                               
          typedef struct _VPB                      // 9 elements, 0x60 bytes (sizeof) 
          {                                                                           
/*0x000*/     INT16        Type;                                                      
/*0x002*/     INT16        Size;                                                      
/*0x004*/     UINT16       Flags;                                                     
/*0x006*/     UINT16       VolumeLabelLength;                                         
/*0x008*/     struct _DEVICE_OBJECT* DeviceObject;                                    
/*0x010*/     struct _DEVICE_OBJECT* RealDevice;                                      
/*0x018*/     ULONG32      SerialNumber;                                              
/*0x01C*/     ULONG32      ReferenceCount;                                            
/*0x020*/     WCHAR        VolumeLabel[32];                                           
          }VPB, *PVPB;                                                                
                                                                                      
          typedef struct _VSC_LPWSTR        // 2 elements, 0x10 bytes (sizeof) 
          {                                                                    
/*0x000*/     UINT8        vsc;                                                
/*0x001*/     UINT8        _PADDING0_[0x7];                                    
/*0x008*/     UINT16*      pwsz;                                               
          }VSC_LPWSTR, *PVSC_LPWSTR;                                           
                                                                               
          typedef struct _VSC_VK            // 2 elements, 0x4 bytes (sizeof) 
          {                                                                   
/*0x000*/     UINT8        Vsc;                                               
/*0x001*/     UINT8        _PADDING0_[0x1];                                   
/*0x002*/     UINT16       Vk;                                                
          }VSC_VK, *PVSC_VK;                                                  
                                                                              
          typedef struct _VWPLELEMENT // 2 elements, 0x10 bytes (sizeof) 
          {                                                              
/*0x000*/     UINT64       DataOrTag;                                    
/*0x008*/     struct _tagWND* pwnd;                                      
          }VWPLELEMENT, *PVWPLELEMENT;                                   
                                                                         
          typedef struct _VWPL                 // 5 elements, 0x10 bytes (sizeof) 
          {                                                                       
/*0x000*/     ULONG32      cPwnd;                                                 
/*0x004*/     ULONG32      cElem;                                                 
/*0x008*/     ULONG32      cThreshhold;                                           
/*0x00C*/     INT32        fTagged;                                               
/*0x010*/     struct _VWPLELEMENT aElement[0];                                    
          }VWPL, *PVWPL;                                                          
                                                                                  
          typedef struct _W32PROCESS                         // 20 elements, 0x100 bytes (sizeof) 
          {                                                                                       
/*0x000*/     struct _EPROCESS* Process;                                                          
/*0x008*/     ULONG32      RefCount;                                                              
/*0x00C*/     ULONG32      W32PF_Flags;                                                           
/*0x010*/     struct _KEVENT* InputIdleEvent;                                                     
/*0x018*/     ULONG32      StartCursorHideTime;                                                   
/*0x01C*/     UINT8        _PADDING0_[0x4];                                                       
/*0x020*/     struct _W32PROCESS* NextStart;                                                      
/*0x028*/     VOID*        pDCAttrList;                                                           
/*0x030*/     VOID*        pBrushAttrList;                                                        
/*0x038*/     ULONG32      W32Pid;                                                                
/*0x03C*/     LONG32       GDIHandleCount;                                                        
/*0x040*/     ULONG32      GDIHandleCountPeak;                                                    
/*0x044*/     LONG32       UserHandleCount;                                                       
/*0x048*/     ULONG32      UserHandleCountPeak;                                                   
/*0x04C*/     UINT8        _PADDING1_[0x4];                                                       
/*0x050*/     struct _EX_PUSH_LOCK GDIPushLock;              // 7 elements, 0x8 bytes (sizeof)    
/*0x058*/     struct _RTL_AVL_TABLE GDIEngUserMemAllocTable; // 11 elements, 0x68 bytes (sizeof)  
/*0x0C0*/     struct _LIST_ENTRY GDIDcAttrFreeList;          // 2 elements, 0x10 bytes (sizeof)   
/*0x0D0*/     struct _LIST_ENTRY GDIBrushAttrFreeList;       // 2 elements, 0x10 bytes (sizeof)   
/*0x0E0*/     struct _LIST_ENTRY GDIW32PIDLockedBitmaps;     // 2 elements, 0x10 bytes (sizeof)   
/*0x0F0*/     VOID*        hSecureGdiSharedHandleTable;                                           
/*0x0F8*/     VOID*        DxProcess;                                                             
          }W32PROCESS, *PW32PROCESS;                                                              
                                                                                                  
          typedef struct _W32THREAD                       // 24 elements, 0x150 bytes (sizeof) 
          {                                                                                    
/*0x000*/     struct _ETHREAD* pEThread;                                                       
/*0x008*/     ULONG32      RefCount;                                                           
/*0x00C*/     UINT8        _PADDING0_[0x4];                                                    
/*0x010*/     struct _TL*  ptlW32;                                                             
/*0x018*/     VOID*        pgdiDcattr;                                                         
/*0x020*/     VOID*        pgdiBrushAttr;                                                      
/*0x028*/     VOID*        pUMPDObjs;                                                          
/*0x030*/     VOID*        pUMPDHeap;                                                          
/*0x038*/     VOID*        pUMPDObj;                                                           
/*0x040*/     VOID*        pProxyPort;                                                         
/*0x048*/     VOID*        pClientID;                                                          
/*0x050*/     struct _LIST_ENTRY GdiTmpTgoList;           // 2 elements, 0x10 bytes (sizeof)   
/*0x060*/     ULONG32      pRBRecursionCount;                                                  
/*0x064*/     ULONG32      pNonRBRecursionCount;                                               
/*0x068*/     struct _TLSPRITESTATE tlSpriteState;        // 24 elements, 0xA8 bytes (sizeof)  
/*0x110*/     VOID*        pSpriteState;                                                       
/*0x118*/     VOID*        pDevHTInfo;                                                         
/*0x120*/     ULONG32      ulDevHTInfoUniqueness;                                              
/*0x124*/     UINT8        _PADDING1_[0x4];                                                    
/*0x128*/     VOID*        pdcoAA;                                                             
/*0x130*/     VOID*        pdcoRender;                                                         
/*0x138*/     VOID*        pdcoSrc;                                                            
/*0x140*/     UINT8        bEnableEngUpdateDeviceSurface;                                      
/*0x141*/     UINT8        bIncludeSprites;                                                    
/*0x142*/     UINT8        _PADDING2_[0x2];                                                    
/*0x144*/     ULONG32      ulWindowSystemRendering;                                            
/*0x148*/     ULONG32      iVisRgnUniqueness;                                                  
/*0x14C*/     UINT8        _PADDING3_[0x4];                                                    
          }W32THREAD, *PW32THREAD;                                                             
                                                                                               
          typedef union _WHEA_ERROR_PACKET_FLAGS            // 8 elements, 0x4 bytes (sizeof) 
          {                                                                                   
              struct                                        // 7 elements, 0x4 bytes (sizeof) 
              {                                                                               
/*0x000*/         ULONG32      PreviousError : 1;           // 0 BitPosition                  
/*0x000*/         ULONG32      Reserved1 : 1;               // 1 BitPosition                  
/*0x000*/         ULONG32      HypervisorError : 1;         // 2 BitPosition                  
/*0x000*/         ULONG32      Simulated : 1;               // 3 BitPosition                  
/*0x000*/         ULONG32      PlatformPfaControl : 1;      // 4 BitPosition                  
/*0x000*/         ULONG32      PlatformDirectedOffline : 1; // 5 BitPosition                  
/*0x000*/         ULONG32      Reserved2 : 26;              // 6 BitPosition                  
              };                                                                              
/*0x000*/     ULONG32      AsULONG;                                                           
          }WHEA_ERROR_PACKET_FLAGS, *PWHEA_ERROR_PACKET_FLAGS;                                  
                                                                                              
          typedef struct _WHEA_ERROR_PACKET_V2                // 16 elements, 0x50 bytes (sizeof) 
          {                                                                                       
/*0x000*/     ULONG32      Signature;                                                             
/*0x004*/     ULONG32      Version;                                                               
/*0x008*/     ULONG32      Length;                                                                
/*0x00C*/     union _WHEA_ERROR_PACKET_FLAGS Flags;           // 8 elements, 0x4 bytes (sizeof)   
/*0x010*/     enum _WHEA_ERROR_TYPE ErrorType;                                                    
/*0x014*/     enum _WHEA_ERROR_SEVERITY ErrorSeverity;                                            
/*0x018*/     ULONG32      ErrorSourceId;                                                         
/*0x01C*/     enum _WHEA_ERROR_SOURCE_TYPE ErrorSourceType;                                       
/*0x020*/     struct _GUID NotifyType;                        // 4 elements, 0x10 bytes (sizeof)  
/*0x030*/     UINT64       Context;                                                               
/*0x038*/     enum _WHEA_ERROR_PACKET_DATA_FORMAT DataFormat;                                     
/*0x03C*/     ULONG32      Reserved1;                                                             
/*0x040*/     ULONG32      DataOffset;                                                            
/*0x044*/     ULONG32      DataLength;                                                            
/*0x048*/     ULONG32      PshedDataOffset;                                                       
/*0x04C*/     ULONG32      PshedDataLength;                                                       
          }WHEA_ERROR_PACKET_V2, *PWHEA_ERROR_PACKET_V2;                                          
                                                                                                  
          typedef union _WHEA_REVISION        // 3 elements, 0x2 bytes (sizeof) 
          {                                                                     
              struct                          // 2 elements, 0x2 bytes (sizeof) 
              {                                                                 
/*0x000*/         UINT8        MinorRevision;                                   
/*0x001*/         UINT8        MajorRevision;                                   
              };                                                                
/*0x000*/     UINT16       AsUSHORT;                                            
          }WHEA_REVISION, *PWHEA_REVISION;                                      
                                                                                
          typedef union _WHEA_ERROR_RECORD_HEADER_VALIDBITS // 5 elements, 0x4 bytes (sizeof) 
          {                                                                                   
              struct                                        // 4 elements, 0x4 bytes (sizeof) 
              {                                                                               
/*0x000*/         ULONG32      PlatformId : 1;              // 0 BitPosition                  
/*0x000*/         ULONG32      Timestamp : 1;               // 1 BitPosition                  
/*0x000*/         ULONG32      PartitionId : 1;             // 2 BitPosition                  
/*0x000*/         ULONG32      Reserved : 29;               // 3 BitPosition                  
              };                                                                              
/*0x000*/     ULONG32      AsULONG;                                                           
          }WHEA_ERROR_RECORD_HEADER_VALIDBITS, *PWHEA_ERROR_RECORD_HEADER_VALIDBITS;                                  
                                                                                              
          typedef union _WHEA_TIMESTAMP             // 10 elements, 0x8 bytes (sizeof) 
          {                                                                            
              struct                                // 9 elements, 0x8 bytes (sizeof)  
              {                                                                        
/*0x000*/         UINT64       Seconds : 8;         // 0 BitPosition                   
/*0x000*/         UINT64       Minutes : 8;         // 8 BitPosition                   
/*0x000*/         UINT64       Hours : 8;           // 16 BitPosition                  
/*0x000*/         UINT64       Precise : 1;         // 24 BitPosition                  
/*0x000*/         UINT64       Reserved : 7;        // 25 BitPosition                  
/*0x000*/         UINT64       Day : 8;             // 32 BitPosition                  
/*0x000*/         UINT64       Month : 8;           // 40 BitPosition                  
/*0x000*/         UINT64       Year : 8;            // 48 BitPosition                  
/*0x000*/         UINT64       Century : 8;         // 56 BitPosition                  
              };                                                                       
/*0x000*/     union _LARGE_INTEGER AsLARGE_INTEGER; // 4 elements, 0x8 bytes (sizeof)  
          }WHEA_TIMESTAMP, *PWHEA_TIMESTAMP;                                           
                                                                                       
          typedef union _WHEA_ERROR_RECORD_HEADER_FLAGS // 5 elements, 0x4 bytes (sizeof) 
          {                                                                               
              struct                                    // 4 elements, 0x4 bytes (sizeof) 
              {                                                                           
/*0x000*/         ULONG32      Recovered : 1;           // 0 BitPosition                  
/*0x000*/         ULONG32      PreviousError : 1;       // 1 BitPosition                  
/*0x000*/         ULONG32      Simulated : 1;           // 2 BitPosition                  
/*0x000*/         ULONG32      Reserved : 29;           // 3 BitPosition                  
              };                                                                          
/*0x000*/     ULONG32      AsULONG;                                                       
          }WHEA_ERROR_RECORD_HEADER_FLAGS, *PWHEA_ERROR_RECORD_HEADER_FLAGS;                                  
                                                                                          
          typedef union _WHEA_PERSISTENCE_INFO  // 7 elements, 0x8 bytes (sizeof) 
          {                                                                       
              struct                            // 6 elements, 0x8 bytes (sizeof) 
              {                                                                   
/*0x000*/         UINT64       Signature : 16;  // 0 BitPosition                  
/*0x000*/         UINT64       Length : 24;     // 16 BitPosition                 
/*0x000*/         UINT64       Identifier : 16; // 40 BitPosition                 
/*0x000*/         UINT64       Attributes : 2;  // 56 BitPosition                 
/*0x000*/         UINT64       DoNotLog : 1;    // 58 BitPosition                 
/*0x000*/         UINT64       Reserved : 5;    // 59 BitPosition                 
              };                                                                  
/*0x000*/     UINT64       AsULONGLONG;                                           
          }WHEA_PERSISTENCE_INFO, *PWHEA_PERSISTENCE_INFO;                                  
                                                                                  
          typedef struct _WHEA_ERROR_RECORD_HEADER                 // 16 elements, 0x80 bytes (sizeof) 
          {                                                                                            
/*0x000*/     ULONG32      Signature;                                                                  
/*0x004*/     union _WHEA_REVISION Revision;                       // 3 elements, 0x2 bytes (sizeof)   
/*0x006*/     ULONG32      SignatureEnd;                                                               
/*0x00A*/     UINT16       SectionCount;                                                               
/*0x00C*/     enum _WHEA_ERROR_SEVERITY Severity;                                                      
/*0x010*/     union _WHEA_ERROR_RECORD_HEADER_VALIDBITS ValidBits; // 5 elements, 0x4 bytes (sizeof)   
/*0x014*/     ULONG32      Length;                                                                     
/*0x018*/     union _WHEA_TIMESTAMP Timestamp;                     // 10 elements, 0x8 bytes (sizeof)  
/*0x020*/     struct _GUID PlatformId;                             // 4 elements, 0x10 bytes (sizeof)  
/*0x030*/     struct _GUID PartitionId;                            // 4 elements, 0x10 bytes (sizeof)  
/*0x040*/     struct _GUID CreatorId;                              // 4 elements, 0x10 bytes (sizeof)  
/*0x050*/     struct _GUID NotifyType;                             // 4 elements, 0x10 bytes (sizeof)  
/*0x060*/     UINT64       RecordId;                                                                   
/*0x068*/     union _WHEA_ERROR_RECORD_HEADER_FLAGS Flags;         // 5 elements, 0x4 bytes (sizeof)   
/*0x06C*/     union _WHEA_PERSISTENCE_INFO PersistenceInfo;        // 7 elements, 0x8 bytes (sizeof)   
/*0x074*/     UINT8        Reserved[12];                                                               
          }WHEA_ERROR_RECORD_HEADER, *PWHEA_ERROR_RECORD_HEADER;                                       
                                                                                                       
          typedef union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS // 4 elements, 0x1 bytes (sizeof) 
          {                                                                                               
              struct                                                    // 3 elements, 0x1 bytes (sizeof) 
              {                                                                                           
/*0x000*/         UINT8        FRUId : 1;                               // 0 BitPosition                  
/*0x000*/         UINT8        FRUText : 1;                             // 1 BitPosition                  
/*0x000*/         UINT8        Reserved : 6;                            // 2 BitPosition                  
              };                                                                                          
/*0x000*/     UINT8        AsUCHAR;                                                                       
          }WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS, *PWHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS;                                  
                                                                                                          
          typedef union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS // 8 elements, 0x4 bytes (sizeof) 
          {                                                                                           
              struct                                                // 7 elements, 0x4 bytes (sizeof) 
              {                                                                                       
/*0x000*/         ULONG32      Primary : 1;                         // 0 BitPosition                  
/*0x000*/         ULONG32      ContainmentWarning : 1;              // 1 BitPosition                  
/*0x000*/         ULONG32      Reset : 1;                           // 2 BitPosition                  
/*0x000*/         ULONG32      ThresholdExceeded : 1;               // 3 BitPosition                  
/*0x000*/         ULONG32      ResourceNotAvailable : 1;            // 4 BitPosition                  
/*0x000*/         ULONG32      LatentError : 1;                     // 5 BitPosition                  
/*0x000*/         ULONG32      Reserved : 26;                       // 6 BitPosition                  
              };                                                                                      
/*0x000*/     ULONG32      AsULONG;                                                                   
          }WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS, *PWHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS;                                  
                                                                                                      
          typedef struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR                 // 10 elements, 0x48 bytes (sizeof) 
          {                                                                                                        
/*0x000*/     ULONG32      SectionOffset;                                                                          
/*0x004*/     ULONG32      SectionLength;                                                                          
/*0x008*/     union _WHEA_REVISION Revision;                                   // 3 elements, 0x2 bytes (sizeof)   
/*0x00A*/     union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS ValidBits; // 4 elements, 0x1 bytes (sizeof)   
/*0x00B*/     UINT8        Reserved;                                                                               
/*0x00C*/     union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS Flags;         // 8 elements, 0x4 bytes (sizeof)   
/*0x010*/     struct _GUID SectionType;                                        // 4 elements, 0x10 bytes (sizeof)  
/*0x020*/     struct _GUID FRUId;                                              // 4 elements, 0x10 bytes (sizeof)  
/*0x030*/     enum _WHEA_ERROR_SEVERITY SectionSeverity;                                                           
/*0x034*/     CHAR         FRUText[20];                                                                            
          }WHEA_ERROR_RECORD_SECTION_DESCRIPTOR, *PWHEA_ERROR_RECORD_SECTION_DESCRIPTOR;                                    
                                                                                                                   
          typedef struct _WHEA_ERROR_RECORD                                      // 2 elements, 0xC8 bytes (sizeof)  
          {                                                                                                          
/*0x000*/     struct _WHEA_ERROR_RECORD_HEADER Header;                           // 16 elements, 0x80 bytes (sizeof) 
/*0x080*/     struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR SectionDescriptor[1];                                     
          }WHEA_ERROR_RECORD, *PWHEA_ERROR_RECORD;                                                                   
                                                                                                                     
          typedef struct _WM_VALUES_STRINGS // 3 elements, 0x10 bytes (sizeof) 
          {                                                                    
/*0x000*/     CHAR*        pszName;                                            
/*0x008*/     UINT8        fInternal;                                          
/*0x009*/     UINT8        fDefined;                                           
/*0x00A*/     UINT8        _PADDING0_[0x6];                                    
          }WM_VALUES_STRINGS, *PWM_VALUES_STRINGS;                                   
                                                                               

#ifdef __cplusplus
}
#endif

